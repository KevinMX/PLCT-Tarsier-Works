[openeuler@openeuler-riscv64 ~]$ wget https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
--2023-04-24 15:06:46--  https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
Resolving codeload.github.com (codeload.github.com)... 20.27.177.114, ::
Connecting to codeload.github.com (codeload.github.com)|20.27.177.114|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/zip]
Saving to: ‘0.4.0-rh’

0.4.0-rh                                                  [ <=>                                                                                                                    ] 146.19K  --.-KB/s    in 0.09s   

2023-04-24 15:06:47 (1.65 MB/s) - ‘0.4.0-rh’ saved [149694]

[openeuler@openeuler-riscv64 ~]$ unzip 0.4.0-rh 
Archive:  0.4.0-rh
c62703b09900791046bc17d5b027336fa5e49ef1
   creating: libMicro-0.4.0-rh/
  inflating: libMicro-0.4.0-rh/.gitignore  
  inflating: libMicro-0.4.0-rh/Makefile  
  inflating: libMicro-0.4.0-rh/Makefile.Aix  
  inflating: libMicro-0.4.0-rh/Makefile.Linux  
  inflating: libMicro-0.4.0-rh/Makefile.SunOS  
  inflating: libMicro-0.4.0-rh/Makefile.benchmarks  
  inflating: libMicro-0.4.0-rh/Makefile.com  
  inflating: libMicro-0.4.0-rh/OPENSOLARIS.LICENSE  
  inflating: libMicro-0.4.0-rh/README  
  inflating: libMicro-0.4.0-rh/atomic.c  
  inflating: libMicro-0.4.0-rh/bench.sh  
  inflating: libMicro-0.4.0-rh/benchmark_fini.c  
  inflating: libMicro-0.4.0-rh/benchmark_finibatch.c  
  inflating: libMicro-0.4.0-rh/benchmark_finirun.c  
  inflating: libMicro-0.4.0-rh/benchmark_finiworker.c  
  inflating: libMicro-0.4.0-rh/benchmark_init.c  
  inflating: libMicro-0.4.0-rh/benchmark_initbatch.c  
  inflating: libMicro-0.4.0-rh/benchmark_initrun.c  
  inflating: libMicro-0.4.0-rh/benchmark_initworker.c  
  inflating: libMicro-0.4.0-rh/benchmark_optswitch.c  
  inflating: libMicro-0.4.0-rh/benchmark_result.c  
  inflating: libMicro-0.4.0-rh/bind.c  
  inflating: libMicro-0.4.0-rh/cachetocache.c  
  inflating: libMicro-0.4.0-rh/cascade_cond.c  
  inflating: libMicro-0.4.0-rh/cascade_fcntl.c  
  inflating: libMicro-0.4.0-rh/cascade_flock.c  
  inflating: libMicro-0.4.0-rh/cascade_lockf.c  
  inflating: libMicro-0.4.0-rh/cascade_mutex.c  
  inflating: libMicro-0.4.0-rh/chdir.c  
  inflating: libMicro-0.4.0-rh/close.c  
  inflating: libMicro-0.4.0-rh/close_tcp.c  
  inflating: libMicro-0.4.0-rh/connection.c  
  inflating: libMicro-0.4.0-rh/dup.c  
  inflating: libMicro-0.4.0-rh/elided.c  
  inflating: libMicro-0.4.0-rh/exec.c  
  inflating: libMicro-0.4.0-rh/exec_bin.c  
  inflating: libMicro-0.4.0-rh/exit.c  
  inflating: libMicro-0.4.0-rh/exp.c  
  inflating: libMicro-0.4.0-rh/fcntl.c  
  inflating: libMicro-0.4.0-rh/fcntl_ndelay.c  
  inflating: libMicro-0.4.0-rh/file_lock.c  
  inflating: libMicro-0.4.0-rh/fork.c  
  inflating: libMicro-0.4.0-rh/getcontext.c  
  inflating: libMicro-0.4.0-rh/getenv.c  
  inflating: libMicro-0.4.0-rh/getpeername.c  
  inflating: libMicro-0.4.0-rh/getpid.c  
  inflating: libMicro-0.4.0-rh/getrusage.c  
  inflating: libMicro-0.4.0-rh/getsockname.c  
  inflating: libMicro-0.4.0-rh/gettimeofday.c  
  inflating: libMicro-0.4.0-rh/isatty.c  
  inflating: libMicro-0.4.0-rh/libmicro.c  
  inflating: libMicro-0.4.0-rh/libmicro.h  
  inflating: libMicro-0.4.0-rh/libmicro_main.c  
  inflating: libMicro-0.4.0-rh/listen.c  
  inflating: libMicro-0.4.0-rh/localtime_r.c  
  inflating: libMicro-0.4.0-rh/log.c  
  inflating: libMicro-0.4.0-rh/longjmp.c  
  inflating: libMicro-0.4.0-rh/lrand48.c  
  inflating: libMicro-0.4.0-rh/lseek.c  
  inflating: libMicro-0.4.0-rh/malloc.c  
  inflating: libMicro-0.4.0-rh/memcpy.c  
  inflating: libMicro-0.4.0-rh/memmove.c  
  inflating: libMicro-0.4.0-rh/memrand.c  
  inflating: libMicro-0.4.0-rh/memset.c  
  inflating: libMicro-0.4.0-rh/mk_tarball  
  inflating: libMicro-0.4.0-rh/mktime.c  
  inflating: libMicro-0.4.0-rh/mmap.c  
  inflating: libMicro-0.4.0-rh/mprotect.c  
  inflating: libMicro-0.4.0-rh/msync.c  
  inflating: libMicro-0.4.0-rh/multiview.sh  
  inflating: libMicro-0.4.0-rh/munmap.c  
  inflating: libMicro-0.4.0-rh/mutex.c  
  inflating: libMicro-0.4.0-rh/nop.c  
  inflating: libMicro-0.4.0-rh/open.c  
  inflating: libMicro-0.4.0-rh/pipe.c  
  inflating: libMicro-0.4.0-rh/poll.c  
  inflating: libMicro-0.4.0-rh/pread.c  
  inflating: libMicro-0.4.0-rh/pthread_create.c  
  inflating: libMicro-0.4.0-rh/pwrite.c  
  inflating: libMicro-0.4.0-rh/read.c  
  inflating: libMicro-0.4.0-rh/realpath.c  
  inflating: libMicro-0.4.0-rh/recurse.c  
  inflating: libMicro-0.4.0-rh/recurse2.c  
  inflating: libMicro-0.4.0-rh/select.c  
  inflating: libMicro-0.4.0-rh/semop.c  
  inflating: libMicro-0.4.0-rh/setcontext.c  
  inflating: libMicro-0.4.0-rh/setsockopt.c  
  inflating: libMicro-0.4.0-rh/sigaction.c  
  inflating: libMicro-0.4.0-rh/siglongjmp.c  
  inflating: libMicro-0.4.0-rh/signal.c  
  inflating: libMicro-0.4.0-rh/sigprocmask.c  
  inflating: libMicro-0.4.0-rh/socket.c  
  inflating: libMicro-0.4.0-rh/socketpair.c  
  inflating: libMicro-0.4.0-rh/stat.c  
  inflating: libMicro-0.4.0-rh/strcasecmp.c  
  inflating: libMicro-0.4.0-rh/strchr.c  
  inflating: libMicro-0.4.0-rh/strcmp.c  
  inflating: libMicro-0.4.0-rh/strcpy.c  
  inflating: libMicro-0.4.0-rh/strftime.c  
  inflating: libMicro-0.4.0-rh/strlen.c  
  inflating: libMicro-0.4.0-rh/strtol.c  
  inflating: libMicro-0.4.0-rh/system.c  
  inflating: libMicro-0.4.0-rh/tattle.c  
  inflating: libMicro-0.4.0-rh/time.c  
  inflating: libMicro-0.4.0-rh/times.c  
  inflating: libMicro-0.4.0-rh/wrapper.sh  
  inflating: libMicro-0.4.0-rh/write.c  
  inflating: libMicro-0.4.0-rh/writev.c  
[openeuler@openeuler-riscv64 ~]$ cd libMicro-0.4.0-rh/
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$ make CFLAGS=-static CC=${CROSS_COMPILE}gcc ARCH=${ARCH} -j$(nproc)
cp wrapper.sh wrapper
cp bench.sh bench
cp multiview.sh multiview
chmod +x wrapper
chmod +x bench
chmod +x multiview
make[1]: Entering directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
gcc -o atomic ../elided.c
gcc -c -static -D_REENTRANT ../libmicro.c -o libmicro.o
gcc -c -static -D_REENTRANT ../libmicro_main.c -o libmicro_main.o
gcc -c -static -D_REENTRANT ../benchmark_init.c -o benchmark_init.o
gcc -c -static -D_REENTRANT ../benchmark_fini.c -o benchmark_fini.o
gcc -c -static -D_REENTRANT ../benchmark_initrun.c -o benchmark_initrun.o
gcc -c -static -D_REENTRANT ../benchmark_finirun.c -o benchmark_finirun.o
gcc -c -static -D_REENTRANT ../benchmark_initbatch.c -o benchmark_initbatch.o
gcc -c -static -D_REENTRANT ../benchmark_finibatch.c -o benchmark_finibatch.o
gcc -c -static -D_REENTRANT ../benchmark_initworker.c -o benchmark_initworker.o
gcc -c -static -D_REENTRANT ../benchmark_finiworker.c -o benchmark_finiworker.o
gcc -c -static -D_REENTRANT ../benchmark_optswitch.c -o benchmark_optswitch.o
gcc -c -static -D_REENTRANT ../benchmark_result.c -o benchmark_result.o
gcc -c -static -D_REENTRANT ../bind.c -o bind.o
gcc -o cachetocache ../elided.c
gcc -c -static -D_REENTRANT ../cascade_mutex.c -o cascade_mutex.o
gcc -c -static -D_REENTRANT ../cascade_cond.c -o cascade_cond.o
gcc -c -static -D_REENTRANT ../cascade_lockf.c -o cascade_lockf.o
gcc -c -static -D_REENTRANT ../cascade_fcntl.c -o cascade_fcntl.o
gcc -c -static -D_REENTRANT ../cascade_flock.c -o cascade_flock.o
gcc -c -static -D_REENTRANT ../chdir.c -o chdir.o
../cascade_flock.c: In function ‘block’:
../cascade_flock.c:141:10: warning: implicit declaration of function ‘flock’; did you mean ‘block’? [-Wimplicit-function-declaration]
  141 |  return (flock(files[index], LOCK_EX) == -1);
      |          ^~~~~
      |          block
gcc -c -static -D_REENTRANT ../close.c -o close.o
gcc -c -static -D_REENTRANT ../close_tcp.c -o close_tcp.o
gcc -c -static -D_REENTRANT ../connection.c -o connection.o
gcc -c -static -D_REENTRANT ../dup.c -o dup.o
gcc -c -static -D_REENTRANT ../exec_bin.c -o exec_bin.o
gcc -c -static -D_REENTRANT ../exec.c -o exec.o
gcc -c -static -D_REENTRANT ../exit.c -o exit.o
gcc -c -static -D_REENTRANT ../exp.c -o exp.o
gcc -c -static -D_REENTRANT ../fcntl.c -o fcntl.o
gcc -c -static -D_REENTRANT ../fcntl_ndelay.c -o fcntl_ndelay.o
gcc -c -static -D_REENTRANT ../file_lock.c -o file_lock.o
gcc -c -static -D_REENTRANT ../fork.c -o fork.o
gcc -c -static -D_REENTRANT ../getcontext.c -o getcontext.o
gcc -c -static -D_REENTRANT ../getenv.c -o getenv.o
gcc -c -static -D_REENTRANT ../gettimeofday.c -o gettimeofday.o
gcc -c -static -D_REENTRANT ../getpeername.c -o getpeername.o
gcc -c -static -D_REENTRANT ../getpid.c -o getpid.o
gcc -c -static -D_REENTRANT ../getrusage.c -o getrusage.o
gcc -c -static -D_REENTRANT ../getsockname.c -o getsockname.o
gcc -c -static -D_REENTRANT ../isatty.c -o isatty.o
gcc -c -static -D_REENTRANT ../listen.c -o listen.o
gcc -c -static -D_REENTRANT ../localtime_r.c -o localtime_r.o
gcc -c -static -D_REENTRANT ../log.c -o log.o
gcc -c -static -D_REENTRANT ../longjmp.c -o longjmp.o
gcc -c -static -D_REENTRANT ../lrand48.c -o lrand48.o
gcc -c -static -D_REENTRANT ../lseek.c -o lseek.o
gcc -c -static -D_REENTRANT ../malloc.c -o malloc.o
gcc -c -static -D_REENTRANT ../memcpy.c -o memcpy.o
gcc -c -static -D_REENTRANT ../memmove.c -o memmove.o
gcc -c -static -D_REENTRANT ../memrand.c -o memrand.o
gcc -c -static -D_REENTRANT ../memset.c -o memset.o
gcc -c -static -D_REENTRANT ../mktime.c -o mktime.o
gcc -c -static -D_REENTRANT ../mprotect.c -o mprotect.o
gcc -c -static -D_REENTRANT ../mmap.c -o mmap.o
gcc -c -static -D_REENTRANT ../msync.c -o msync.o
gcc -c -static -D_REENTRANT ../munmap.c -o munmap.o
gcc -c -static -D_REENTRANT ../mutex.c -o mutex.o
gcc -c -static -D_REENTRANT ../nop.c -o nop.o
gcc -c -static -D_REENTRANT ../open.c -o open.o
gcc -c -static -D_REENTRANT ../pipe.c -o pipe.o
../mprotect.c: In function ‘benchmark_optswitch’:
../mprotect.c:90:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   90 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
../mmap.c: In function ‘benchmark_optswitch’:
../mmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
../munmap.c: In function ‘benchmark_optswitch’:
../munmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -c -static -D_REENTRANT ../poll.c -o poll.o
gcc -c -static -D_REENTRANT ../pread.c -o pread.o
gcc -c -static -D_REENTRANT ../pthread_create.c -o pthread_create.o
gcc -c -static -D_REENTRANT ../pwrite.c -o pwrite.o
gcc -c -static -D_REENTRANT ../read.c -o read.o
gcc -c -static -D_REENTRANT ../realpath.c -o realpath.o
gcc -c -static -D_REENTRANT ../recurse2.c -o recurse2.o
gcc -c -static -D_REENTRANT ../recurse.c -o recurse.o
gcc -c -static -D_REENTRANT ../select.c -o select.o
gcc -c -static -D_REENTRANT ../semop.c -o semop.o
gcc -c -static -D_REENTRANT ../setcontext.c -o setcontext.o
gcc -c -static -D_REENTRANT ../setsockopt.c -o setsockopt.o
gcc -c -static -D_REENTRANT ../sigaction.c -o sigaction.o
gcc -c -static -D_REENTRANT ../siglongjmp.c -o siglongjmp.o
gcc -c -static -D_REENTRANT ../signal.c -o signal.o
gcc -c -static -D_REENTRANT ../sigprocmask.c -o sigprocmask.o
gcc -c -static -D_REENTRANT ../socket.c -o socket.o
gcc -c -static -D_REENTRANT ../socketpair.c -o socketpair.o
gcc -c -static -D_REENTRANT ../stat.c -o stat.o
gcc -c -static -D_REENTRANT ../strcasecmp.c -o strcasecmp.o
gcc -c -static -D_REENTRANT ../strchr.c -o strchr.o
gcc -c -static -D_REENTRANT ../strcmp.c -o strcmp.o
gcc -c -static -D_REENTRANT ../strcpy.c -o strcpy.o
gcc -c -static -D_REENTRANT ../strftime.c -o strftime.o
gcc -c -static -D_REENTRANT ../strlen.c -o strlen.o
gcc -c -static -D_REENTRANT ../strtol.c -o strtol.o
gcc -c -static -D_REENTRANT ../system.c -o system.o
gcc -c -static -D_REENTRANT ../time.c -o time.o
gcc -c -static -D_REENTRANT ../times.c -o times.o
gcc -c -static -D_REENTRANT ../write.c -o write.o
gcc -c -static -D_REENTRANT ../writev.c -o writev.o
ar -cr libmicro.a libmicro.o libmicro_main.o benchmark_init.o benchmark_fini.o benchmark_initrun.o benchmark_finirun.o benchmark_initbatch.o benchmark_finibatch.o benchmark_initworker.o benchmark_finiworker.o benchmark_optswitch.o benchmark_result.o
gcc -o exec_bin -static exec_bin.o
gcc -o bind bind.o  -static libmicro.a    -lpthread -lm
gcc -o cascade_mutex cascade_mutex.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_cond cascade_cond.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_lockf cascade_lockf.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_fcntl cascade_fcntl.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_flock cascade_flock.o  -static libmicro.a   -lpthread -lm
gcc -o chdir chdir.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: bind.o: in function `.L14':
bind.c:(.text+0x27c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o close close.o  -static libmicro.a   -lpthread -lm
gcc -o close_tcp close_tcp.o  -static libmicro.a    -lpthread -lm
gcc -o connection connection.o  -static libmicro.a    -lpthread -lm
gcc -o dup dup.o  -static libmicro.a   -lpthread -lm
gcc -o exec exec.o  -static libmicro.a   -lpthread -lm
gcc -o exit exit.o  -static libmicro.a   -lpthread -lm
gcc -o exp exp.o  -static libmicro.a   -lpthread -lm
gcc -o fcntl fcntl.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: close_tcp.o: in function `.L12':
close_tcp.c:(.text+0x2d8): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/usr/bin/ld: connection.o: in function `.L20':
connection.c:(.text+0x394): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o fcntl_ndelay fcntl_ndelay.o  -static libmicro.a   -lpthread -lm
gcc -o file_lock file_lock.o  -static libmicro.a   -lpthread -lm
gcc -o fork fork.o  -static libmicro.a   -lpthread -lm
gcc -o getcontext getcontext.o  -static libmicro.a   -lpthread -lm
gcc -o getenv getenv.o  -static libmicro.a   -lpthread -lm
gcc -o gettimeofday gettimeofday.o  -static libmicro.a   -lpthread -lm
gcc -o getpeername getpeername.o  -static libmicro.a    -lpthread -lm
gcc -o getpid getpid.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: getpeername.o: in function `.L5':
getpeername.c:(.text+0xfc): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o getrusage getrusage.o  -static libmicro.a   -lpthread -lm
gcc -o getsockname getsockname.o  -static libmicro.a    -lpthread -lm
gcc -o isatty isatty.o  -static libmicro.a   -lpthread -lm
gcc -o listen listen.o  -static libmicro.a    -lpthread -lm
gcc -o localtime_r localtime_r.o  -static libmicro.a   -lpthread -lm
gcc -o log log.o  -static libmicro.a -lm  -lpthread -lm
gcc -o longjmp longjmp.o  -static libmicro.a   -lpthread -lm
gcc -o lrand48 lrand48.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: getsockname.o: in function `.L5':
getsockname.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/usr/bin/ld: listen.o: in function `.L5':
listen.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o lseek lseek.o  -static libmicro.a   -lpthread -lm
gcc -o malloc malloc.o  -static libmicro.a   -lpthread -lm
gcc -o memcpy memcpy.o  -static libmicro.a   -lpthread -lm
gcc -o memmove memmove.o  -static libmicro.a   -lpthread -lm
gcc -o memrand memrand.o  -static libmicro.a   -lpthread -lm
gcc -o memset memset.o  -static libmicro.a   -lpthread -lm
gcc -o mktime mktime.o  -static libmicro.a   -lpthread -lm
gcc -o mprotect mprotect.o  -static libmicro.a   -lpthread -lm
gcc -o mmap mmap.o  -static libmicro.a   -lpthread -lm
gcc -o msync msync.o  -static libmicro.a   -lpthread -lm
gcc -o munmap munmap.o  -static libmicro.a   -lpthread -lm
gcc -o mutex mutex.o  -static libmicro.a   -lpthread -lm
gcc -o nop nop.o  -static libmicro.a   -lpthread -lm
gcc -o open open.o  -static libmicro.a   -lpthread -lm
gcc -o pipe pipe.o  -static libmicro.a    -lpthread -lm
gcc -o poll poll.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: pipe.o: in function `.L64':
pipe.c:(.text+0xa88): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o pread pread.o  -static libmicro.a   -lpthread -lm
gcc -o pthread_create pthread_create.o  -static libmicro.a   -lpthread -lm
gcc -o pwrite pwrite.o  -static libmicro.a   -lpthread -lm
gcc -o read read.o  -static libmicro.a   -lpthread -lm
gcc -o realpath realpath.o  -static libmicro.a   -lpthread -lm
gcc -o recurse recurse.o recurse2.o -static libmicro.a   -lpthread -lm
gcc -o select select.o  -static libmicro.a   -lpthread -lm
gcc -o semop semop.o  -static libmicro.a   -lpthread -lm
gcc -o setcontext setcontext.o  -static libmicro.a   -lpthread -lm
gcc -o setsockopt setsockopt.o  -static libmicro.a    -lpthread -lm
gcc -o sigaction sigaction.o  -static libmicro.a   -lpthread -lm
gcc -o siglongjmp siglongjmp.o  -static libmicro.a   -lpthread -lm
gcc -o signal signal.o  -static libmicro.a   -lpthread -lm
gcc -o sigprocmask sigprocmask.o  -static libmicro.a   -lpthread -lm
gcc -o socket socket.o  -static libmicro.a   -lpthread -lm
gcc -o socketpair socketpair.o  -static libmicro.a   -lpthread -lm
gcc -o stat stat.o  -static libmicro.a   -lpthread -lm
gcc -o strcasecmp strcasecmp.o  -static libmicro.a   -lpthread -lm
gcc -o strchr strchr.o  -static libmicro.a   -lpthread -lm
gcc -o strcmp strcmp.o  -static libmicro.a   -lpthread -lm
gcc -o strcpy strcpy.o  -static libmicro.a   -lpthread -lm
gcc -o strftime strftime.o  -static libmicro.a   -lpthread -lm
gcc -o strlen strlen.o  -static libmicro.a   -lpthread -lm
gcc -o strtol strtol.o  -static libmicro.a   -lpthread -lm
gcc -o system system.o  -static libmicro.a   -lpthread -lm
gcc -o time time.o  -static libmicro.a   -lpthread -lm
gcc -o times times.o  -static libmicro.a   -lpthread -lm
gcc -o write write.o  -static libmicro.a   -lpthread -lm
gcc -o writev writev.o  -static libmicro.a   -lpthread -lm
echo "char * compiler_version = \""`gcc -dumpversion`"\";" > tattle.h
echo "char * CC = \""gcc"\";" >> tattle.h
echo "char * extra_compiler_flags = \"""\";" >> tattle.h
gcc -o tattle -static -I. ../tattle.c libmicro.a -lpthread -lrt -lm
rm siglongjmp.o pread.o getsockname.o cascade_fcntl.o cascade_flock.o file_lock.o mmap.o cascade_lockf.o strcasecmp.o munmap.o setcontext.o writev.o recurse.o longjmp.o pwrite.o setsockopt.o chdir.o exp.o getcontext.o time.o strftime.o connection.o cascade_cond.o sigprocmask.o times.o exit.o msync.o strcmp.o mprotect.o fcntl_ndelay.o socket.o select.o localtime_r.o memset.o gettimeofday.o exec.o realpath.o strcpy.o pipe.o mktime.o memrand.o system.o strtol.o close.o getpeername.o lseek.o listen.o isatty.o memcpy.o poll.o bind.o write.o memmove.o read.o close_tcp.o open.o socketpair.o log.o malloc.o nop.o cascade_mutex.o signal.o sigaction.o fcntl.o getpid.o dup.o mutex.o strlen.o pthread_create.o strchr.o getenv.o semop.o stat.o fork.o lrand48.o getrusage.o
make[1]: Leaving directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$ sh bench.sh 
egrep: warning: egrep is obsolescent; using grep -E
!Libmicro_#:                            0.4.0
!Options:                  -E -C 200 -L -S -W
!Machine_name:              openeuler-riscv64
!OS_name:                               Linux
!OS_release:          6.1.19-2.oe2303.riscv64
!OS_build:                 #1 SMP Tue Apr  4 
!Processor:                           riscv64
!#CPUs:                                     8
!CPU_MHz:                                    
!CPU_NAME:                                   
!IP_address:        fec0::54b3:5f71:ca88:60ca
!IP_address:         fe80::8ce8:450f:1d2:70a8
!Run_by:                            openeuler
!Date:                         04/24/23 15:49
!Compiler:                                gcc
!Compiler Ver.:                        10.3.1
!sizeof(long):                              8
!extra_CFLAGS:                         [none]
!TimerRes:                         1000 nsecs
# 
# Obligatory null system call: use very short time
# for default since SuSe implements this "syscall" in userland
# 
Running:              getpid# bin/getpid -E -C 200 -L -S -W -N getpid -I 1 
             prc thr   usecs/call      samples   errors cnt/samp 
getpid         1   1      0.65939          187        0   100000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.64261                 0.64261
#                    max      0.84317                 0.69825
#                   mean      0.66791                 0.66240
#                 median      0.66070                 0.65939
#                 stddev      0.02501                 0.01209
#         standard error      0.00176                 0.00088
#   99% confidence level      0.00409                 0.00206
#                   skew      3.36982                 0.76851
#               kurtosis     16.30996                -0.09186
#       time correlation      0.00007                 0.00004
#
#           elasped time     13.49862
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.66081
#
#                 10        > 95% |*                                    0.69044
#
#        mean of 95%      0.66081
#          95th %ile      0.68429
 for     13.53002 seconds
 
Running:              getenv# bin/getenv -E -C 200 -L -S -W -N getenv -s 100 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp 
getenv         1   1      0.36147          156        0     2000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.35405                 0.35405
#                    max      0.96755                 0.37299
#                   mean      0.37456                 0.36201
#                 median      0.36250                 0.36147
#                 stddev      0.04995                 0.00368
#         standard error      0.00351                 0.00029
#   99% confidence level      0.00817                 0.00069
#                   skew      8.90866                 0.76893
#               kurtosis     97.25655                 0.63806
#       time correlation      0.00004                -0.00000
#
#           elasped time      0.15568
#      number of samples          156
#     number of outliers           46
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                148      0.00000 |********************************     0.36150
#
#                  8        > 95% |*                                    0.37144
#
#        mean of 95%      0.36150
#          95th %ile      0.36954
 for      0.18128 seconds
Running:            getenvT2# bin/getenv -E -C 200 -L -S -W -N getenvT2 -s 100 -I 50 -T 2 
             prc thr   usecs/call      samples   errors cnt/samp 
getenvT2       1   2      0.40988          182        0     2000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.38044                 0.38044
#                    max      0.72630                 0.52636
#                   mean      0.44368                 0.42556
#                 median      0.41500                 0.40988
#                 stddev      0.06673                 0.03583
#         standard error      0.00470                 0.00266
#   99% confidence level      0.01092                 0.00618
#                   skew      1.99829                 1.39216
#               kurtosis      3.91751                 0.88569
#       time correlation     -0.00023                 0.00001
#
#           elasped time      0.21844
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      0.00000 |********************************     0.42017
#
#                 10        > 95% |*                                    0.51834
#
#        mean of 95%      0.42017
#          95th %ile      0.51087
 for      0.23272 seconds
 
Running:        gettimeofday# bin/gettimeofday -E -C 200 -L -S -W -N gettimeofday 
             prc thr   usecs/call      samples   errors cnt/samp 
gettimeofday   1   1      0.14474          178        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.14019                 0.14019
#                    max      0.22410                 0.15185
#                   mean      0.14890                 0.14509
#                 median      0.14530                 0.14474
#                 stddev      0.01289                 0.00236
#         standard error      0.00091                 0.00018
#   99% confidence level      0.00211                 0.00041
#                   skew      3.75751                 0.61984
#               kurtosis     15.20830                 0.10002
#       time correlation      0.00000                 0.00000
#
#           elasped time      0.60727
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          101
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      0.00000 |********************************     0.14479
#
#                  9        > 95% |*                                    0.15079
#
#        mean of 95%      0.14479
#          95th %ile      0.15019
 for      0.63383 seconds
 
Running:                 log# bin/log -E -C 200 -L -S -W -N log -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
log            1   1      0.10114          148        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09940                 0.09940
#                    max      0.22878                 0.10534
#                   mean      0.10987                 0.10146
#                 median      0.10175                 0.10114
#                 stddev      0.02110                 0.00137
#         standard error      0.00148                 0.00011
#   99% confidence level      0.00345                 0.00026
#                   skew      3.20101                 1.12540
#               kurtosis     10.72672                 0.82628
#       time correlation     -0.00006                 0.00000
#
#           elasped time      0.11561
#      number of samples          148
#     number of outliers           54
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                140      0.00000 |********************************     0.10125
#
#                  8        > 95% |*                                    0.10516
#
#        mean of 95%      0.10125
#          95th %ile      0.10493
 for      0.14217 seconds
Running:                 exp# bin/exp -E -C 200 -L -S -W -N exp -I 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exp            1   1      0.10469          172        0    10000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10269                 0.10269
#                    max      0.20519                 0.11308
#                   mean      0.11079                 0.10563
#                 median      0.10517                 0.10469
#                 stddev      0.01652                 0.00249
#         standard error      0.00116                 0.00019
#   99% confidence level      0.00270                 0.00044
#                   skew      3.61751                 1.06068
#               kurtosis     13.40539                 0.10740
#       time correlation     -0.00008                -0.00000
#
#           elasped time      0.22781
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                163      0.00000 |********************************     0.10529
#
#                  9        > 95% |*                                    0.11167
#
#        mean of 95%      0.10529
#          95th %ile      0.11057
 for      0.25381 seconds
Running:             lrand48# bin/lrand48 -E -C 200 -L -S -W -N lrand48 
             prc thr   usecs/call      samples   errors cnt/samp 
lrand48        1   1      0.07437          183        0    10000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07217                 0.07217
#                    max      0.11559                 0.08067
#                   mean      0.07647                 0.07486
#                 median      0.07458                 0.07437
#                 stddev      0.00641                 0.00198
#         standard error      0.00045                 0.00015
#   99% confidence level      0.00105                 0.00034
#                   skew      3.97384                 1.13887
#               kurtosis     17.87670                 0.66778
#       time correlation     -0.00004                -0.00000
#
#           elasped time      0.15872
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          207
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                173      0.00000 |********************************     0.07457
#
#                 10        > 95% |*                                    0.07995
#
#        mean of 95%      0.07457
#          95th %ile      0.07888
 for      0.18382 seconds
 
Running:           memset_10# bin/memset -E -C 200 -L -S -W -N memset_10 -s 10 -I 3 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10      1   1      0.03226          180        0    33333       10          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.02824                 0.02824
#                    max      0.05392                 0.03643
#                   mean      0.03365                 0.03232
#                 median      0.03232                 0.03226
#                 stddev      0.00450                 0.00148
#         standard error      0.00032                 0.00011
#   99% confidence level      0.00074                 0.00026
#                   skew      2.82497                -0.03857
#               kurtosis      8.44975                 0.72963
#       time correlation      0.00001                 0.00000
#
#           elasped time      0.23140
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          322
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.03214
#
#                  9        > 95% |*                                    0.03567
#
#        mean of 95%      0.03214
#          95th %ile      0.03472
 for      0.25980 seconds
Running:          memset_256# bin/memset -E -C 200 -L -S -W -N memset_256 -s 256 -I 10 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256     1   1      0.05559          181        0    10000      256          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.05287                 0.05287
#                    max      0.20368                 0.06050
#                   mean      0.05779                 0.05571
#                 median      0.05579                 0.05559
#                 stddev      0.01166                 0.00166
#         standard error      0.00082                 0.00012
#   99% confidence level      0.00191                 0.00029
#                   skew     10.09501                 0.61594
#               kurtosis    119.32844                -0.05478
#       time correlation     -0.00004                -0.00000
#
#           elasped time      0.11990
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.05548
#
#                 10        > 95% |*                                    0.05955
#
#        mean of 95%      0.05548
#          95th %ile      0.05869
 for      0.13201 seconds
Running:        memset_256_u# bin/memset -E -C 200 -L -S -W -N memset_256_u -s 256 -a 1 -I 10 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256_u   1   1      0.08029          186        0    10000      256           1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07689                 0.07689
#                    max      0.15778                 0.08697
#                   mean      0.08208                 0.08065
#                 median      0.08047                 0.08029
#                 stddev      0.00737                 0.00220
#         standard error      0.00052                 0.00016
#   99% confidence level      0.00121                 0.00038
#                   skew      6.84780                 0.95325
#               kurtosis     60.08780                 0.45033
#       time correlation     -0.00002                -0.00000
#
#           elasped time      0.16963
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.08034
#
#                 10        > 95% |*                                    0.08618
#
#        mean of 95%      0.08034
#          95th %ile      0.08536
 for      0.19085 seconds
Running:           memset_1k# bin/memset -E -C 200 -L -S -W -N memset_1k -s 1k -I 12 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1k      1   1      0.17900          183        0     8333     1024          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.17037                 0.17037
#                    max      0.31581                 0.19303
#                   mean      0.18231                 0.17930
#                 median      0.17958                 0.17900
#                 stddev      0.01309                 0.00462
#         standard error      0.00092                 0.00034
#   99% confidence level      0.00214                 0.00079
#                   skew      5.91684                 0.65061
#               kurtosis     52.45164                -0.20757
#       time correlation     -0.00002                 0.00000
#
#           elasped time      0.31111
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                173      0.00000 |********************************     0.17870
#
#                 10        > 95% |*                                    0.18962
#
#        mean of 95%      0.17870
#          95th %ile      0.18775
 for      0.32117 seconds
Running:           memset_4k# bin/memset -E -C 200 -L -S -W -N memset_4k -s 4k -I 62 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k      1   1      0.68836          194        0     1612     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.64569                 0.64569
#                    max      0.92160                 0.79518
#                   mean      0.70023                 0.69419
#                 median      0.69073                 0.68836
#                 stddev      0.04717                 0.03664
#         standard error      0.00332                 0.00263
#   99% confidence level      0.00772                 0.00612
#                   skew      1.52946                 0.79536
#               kurtosis      2.94375                -0.27209
#       time correlation      0.00013                 0.00012
#
#           elasped time      0.23267
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                184      0.00000 |********************************     0.68955
#
#                 10        > 95% |*                                    0.77957
#
#        mean of 95%      0.68955
#          95th %ile      0.77274
 for      0.24518 seconds
Running:        memset_4k_uc# bin/memset -E -C 200 -L -S -W -N memset_4k_uc -s 4k -u -I 100 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k_uc   1   1      0.63985          154        0     1000     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.61886                 0.61886
#                    max      0.96395                 0.65982
#                   mean      0.66074                 0.63996
#                 median      0.64190                 0.63985
#                 stddev      0.05208                 0.00725
#         standard error      0.00366                 0.00058
#   99% confidence level      0.00852                 0.00136
#                   skew      3.61975                 0.32440
#               kurtosis     15.52678                 0.54278
#       time correlation     -0.00004                -0.00002
#
#           elasped time      0.80020
#      number of samples          154
#     number of outliers           48
#      getnsecs overhead          146
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                146      0.00000 |********************************     0.63903
#
#                  8        > 95% |*                                    0.65688
#
#        mean of 95%      0.63903
#          95th %ile      0.65470
 for      0.81086 seconds
 
Running:          memset_10k# bin/memset -E -C 200 -L -S -W -N memset_10k -s 10k -I 150 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10k     1   1      1.49827          180        0      666    10240          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.46389                 1.46389
#                    max      2.65486                 1.61481
#                   mean      1.54163                 1.51343
#                 median      1.50400                 1.49827
#                 stddev      0.11376                 0.03428
#         standard error      0.00800                 0.00256
#   99% confidence level      0.01862                 0.00594
#                   skew      5.66874                 1.17556
#               kurtosis     45.80161                 0.43194
#       time correlation     -0.00040                 0.00000
#
#           elasped time      0.21231
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          189
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      1.00000 |********************************     1.50875
#
#                  9        > 95% |*                                    1.60237
#
#        mean of 95%      1.50875
#          95th %ile      1.58615
 for      0.22240 seconds
Running:           memset_1m# bin/memset -E -C 200 -L -S -W -N memset_1m -s 1m -I 200000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1m      1   1    218.80320          187        0        1  1048576          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    212.09600               212.09600
#                    max    335.20640               230.29760
#                   mean    221.89700               219.12546
#                 median    219.28960               218.80320
#                 stddev     12.43602                 3.80981
#         standard error      0.87500                 0.27860
#   99% confidence level      2.03524                 0.64802
#                   skew      5.10904                 0.42117
#               kurtosis     35.97014                -0.50497
#       time correlation      0.01108                 0.00332
#
#           elasped time      0.47165
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    212.00000 |**                                 212.35200
#                 12    213.00000 |****************                   213.62560
#                 16    214.00000 |**********************             214.58560
#                 19    215.00000 |**************************         215.52909
#                 14    216.00000 |*******************                216.42423
#                 12    217.00000 |****************                   217.54880
#                 23    218.00000 |********************************   218.51381
#                 19    219.00000 |**************************         219.48093
#                 14    220.00000 |*******************                220.58423
#                 11    221.00000 |***************                    221.49585
#                 11    222.00000 |***************                    222.38022
#                 10    223.00000 |*************                      223.28832
#                  9    224.00000 |************                       224.44942
#                  5    225.00000 |******                             225.39776
#
#                 10        > 95% |*************                      227.26144
#
#        mean of 95%    218.66580
#          95th %ile    225.68960
 for      0.49245 seconds
Running:          memset_10m# bin/memset -E -C 200 -L -S -W -N memset_10m -s 10m -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10m     1   1   2162.98040          196        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2076.60600              2076.60600
#                    max   2637.37400              2410.17400
#                   mean   2201.23187              2191.56907
#                 median   2165.66840              2162.98040
#                 stddev     99.35081                83.11651
#         standard error      6.99030                 5.93689
#   99% confidence level     16.25944                13.80921
#                   skew      1.36026                 0.87891
#               kurtosis      1.86644                -0.34363
#       time correlation      0.33556                 0.28154
#
#           elasped time      4.56872
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          148
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2070.00000 |*                                 2076.60600
#                  4   2080.00000 |*******                           2086.18040
#                  4   2090.00000 |*******                           2095.78040
#                 11   2100.00000 |*******************               2106.23916
#                 17   2110.00000 |******************************    2114.94878
#                 18   2120.00000 |********************************  2125.24742
#                 18   2130.00000 |********************************  2135.36938
#                 14   2140.00000 |************************          2144.49354
#                  9   2150.00000 |****************                  2154.57507
#                 10   2160.00000 |*****************                 2164.95160
#                  6   2170.00000 |**********                        2174.58573
#                  8   2180.00000 |**************                    2185.56920
#                  5   2190.00000 |********                          2196.35768
#                  8   2200.00000 |**************                    2203.73880
#                  3   2210.00000 |*****                             2213.01987
#                  2   2220.00000 |***                               2225.82840
#                  6   2230.00000 |**********                        2234.60067
#                  4   2240.00000 |*******                           2247.54360
#                  5   2250.00000 |********                          2252.86200
#                  2   2260.00000 |***                               2262.27000
#                  7   2270.00000 |************                      2273.22863
#                  0   2280.00000 |                                           -
#                  5   2290.00000 |********                          2294.21112
#                  4   2300.00000 |*******                           2306.13560
#                  4   2310.00000 |*******                           2317.13080
#                  2   2320.00000 |***                               2324.79800
#                  3   2330.00000 |*****                             2335.14040
#                  4   2340.00000 |*******                           2344.70840
#                  0   2350.00000 |                                           -
#                  2   2360.00000 |***                               2362.18680
#
#                 10        > 95% |*****************                 2380.95672
#
#        mean of 95%   2181.38694
#          95th %ile   2364.06840
 for      4.58338 seconds
Running:        memsetP2_10m# bin/memset -E -C 200 -L -S -W -N memsetP2_10m -s 10m -P 2 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memsetP2_10m   2   1   1869.29570          198        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1770.27490              1770.27490
#                    max   2325.48770              2133.28290
#                   mean   1898.15400              1891.18525
#                 median   1869.98690              1869.29570
#                 stddev     96.46708                83.35593
#         standard error      6.78740                 5.92385
#   99% confidence level     15.78749                13.77887
#                   skew      1.43921                 0.95024
#               kurtosis      2.49685                 0.21827
#       time correlation      0.16001                 0.16345
#
#           elasped time      4.02175
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5   1770.00000 |********                          1773.87938
#                  5   1780.00000 |********                          1784.34466
#                  6   1790.00000 |**********                        1793.56663
#                  9   1800.00000 |****************                  1805.40663
#                 11   1810.00000 |*******************               1816.51548
#                 18   1820.00000 |********************************  1825.70601
#                  9   1830.00000 |****************                  1834.76414
#                 13   1840.00000 |***********************           1844.85164
#                 11   1850.00000 |*******************               1856.49570
#                 15   1860.00000 |**************************        1866.07181
#                 13   1870.00000 |***********************           1874.59687
#                  8   1880.00000 |**************                    1886.38690
#                  7   1890.00000 |************                      1893.31947
#                  3   1900.00000 |*****                             1907.89197
#                  6   1910.00000 |**********                        1918.05517
#                  6   1920.00000 |**********                        1925.57730
#                  5   1930.00000 |********                          1933.14210
#                  3   1940.00000 |*****                             1943.24557
#                  4   1950.00000 |*******                           1955.76610
#                  4   1960.00000 |*******                           1962.23010
#                  4   1970.00000 |*******                           1976.46370
#                  5   1980.00000 |********                          1983.32322
#                  3   1990.00000 |*****                             1996.04983
#                  1   2000.00000 |*                                 2004.59170
#                  5   2010.00000 |********                          2013.98690
#                  1   2020.00000 |*                                 2025.40450
#                  3   2030.00000 |*****                             2036.36983
#                  3   2040.00000 |*****                             2044.95437
#                  2   2050.00000 |***                               2051.03010
#
#                 10        > 95% |*****************                 2097.70658
#
#        mean of 95%   1880.20007
#          95th %ile   2052.28450
 for      4.04630 seconds
 
Running:             memrand# bin/memrand -E -C 200 -L -S -W -N memrand -s 128m -B 10000 
             prc thr   usecs/call      samples   errors cnt/samp     size
memrand        1   1      0.04850          187        0    10000 134217728 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.04668                 0.04668
#                    max      0.07679                 0.05360
#                   mean      0.04979                 0.04887
#                 median      0.04868                 0.04850
#                 stddev      0.00411                 0.00180
#         standard error      0.00029                 0.00013
#   99% confidence level      0.00067                 0.00031
#                   skew      3.53747                 0.86217
#               kurtosis     16.21398                -0.27030
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.39132
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          103
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.04863
#
#                 10        > 95% |*                                    0.05299
#
#        mean of 95%      0.04863
#          95th %ile      0.05260
 for      0.41801 seconds
#
# benchmark cachetocache not compiled/supported on this platform
#
 
Running:          isatty_yes# bin/isatty -E -C 200 -L -S -W -N isatty_yes 
             prc thr   usecs/call      samples   errors cnt/samp 
isatty_yes     1   1     16.91214          188        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.39964                16.39964
#                    max     19.23029                18.00839
#                   mean     17.07218                16.97123
#                 median     16.93294                16.91214
#                 stddev      0.51351                 0.36057
#         standard error      0.03613                 0.02630
#   99% confidence level      0.08404                 0.06117
#                   skew      1.39388                 0.68580
#               kurtosis      2.02949                 0.01599
#       time correlation      0.00163                 0.00116
#
#           elasped time     68.97919
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                113     16.00000 |********************************    16.73298
#                 65     17.00000 |******************                  17.25417
#
#                 10        > 95% |**                                  17.82441
#
#        mean of 95%     16.92330
#          95th %ile     17.62994
 for     69.00502 seconds
Running:           isatty_no# bin/isatty -E -C 200 -L -S -W -N isatty_no -f /tmp/libmicro.296104/ifile 
             prc thr   usecs/call      samples   errors cnt/samp 
isatty_no      1   1      0.82354          185        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.78864                 0.78864
#                    max      1.09183                 0.88149
#                   mean      0.83726                 0.82824
#                 median      0.82554                 0.82354
#                 stddev      0.03758                 0.01912
#         standard error      0.00264                 0.00141
#   99% confidence level      0.00615                 0.00327
#                   skew      2.78565                 0.81779
#               kurtosis     11.55283                 0.33015
#       time correlation     -0.00010                -0.00006
#
#           elasped time      3.38723
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          150
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      0.00000 |********************************     0.82556
#
#                 10        > 95% |*                                    0.87503
#
#        mean of 95%      0.82556
#          95th %ile      0.86819
 for      3.39901 seconds
 
Running:           malloc_10# bin/malloc -E -C 200 -L -S -W -N malloc_10 -s 10 -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10      1   1      0.16059          172        0     2000     10 10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.15399                 0.15399
#                    max      0.24728                 0.17905
#                   mean      0.16816                 0.16219
#                 median      0.16214                 0.16059
#                 stddev      0.01688                 0.00587
#         standard error      0.00119                 0.00045
#   99% confidence level      0.00276                 0.00104
#                   skew      2.35948                 1.14355
#               kurtosis      5.79994                 0.71599
#       time correlation      0.00003                 0.00004
#
#           elasped time      0.68525
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                163      0.00000 |********************************     0.16133
#
#                  9        > 95% |*                                    0.17771
#
#        mean of 95%      0.16133
#          95th %ile      0.17544
 for      0.71124 seconds
Running:          malloc_100# bin/malloc -E -C 200 -L -S -W -N malloc_100 -s 100 -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100     1   1      0.25664          186        0     2000     10 100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.24870                 0.24870
#                    max      0.39098                 0.29554
#                   mean      0.26739                 0.26161
#                 median      0.25695                 0.25664
#                 stddev      0.02381                 0.01161
#         standard error      0.00168                 0.00085
#   99% confidence level      0.00390                 0.00198
#                   skew      2.61435                 1.38312
#               kurtosis      7.79144                 0.85828
#       time correlation     -0.00008                -0.00005
#
#           elasped time      1.08466
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          178
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.25986
#
#                 10        > 95% |*                                    0.29240
#
#        mean of 95%      0.25986
#          95th %ile      0.29023
 for      1.10988 seconds
Running:           malloc_1k# bin/malloc -E -C 200 -L -S -W -N malloc_1k -s 1k -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_1k      1   1      0.19089          170        0     2000     10 1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.18509                 0.18509
#                    max      0.28484                 0.19818
#                   mean      0.19630                 0.19113
#                 median      0.19154                 0.19089
#                 stddev      0.01645                 0.00253
#         standard error      0.00116                 0.00019
#   99% confidence level      0.00269                 0.00045
#                   skew      3.93835                 0.38554
#               kurtosis     16.45254                -0.06242
#       time correlation     -0.00004                -0.00001
#
#           elasped time      0.79656
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                161      0.00000 |********************************     0.19081
#
#                  9        > 95% |*                                    0.19695
#
#        mean of 95%      0.19081
#          95th %ile      0.19545
 for      0.81321 seconds
Running:          malloc_10k# bin/malloc -E -C 200 -L -S -W -N malloc_10k -s 10k -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10k     1   1      0.30638          171        0     2000     10 10240 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.30019                 0.30019
#                    max      0.46344                 0.33434
#                   mean      0.32172                 0.30985
#                 median      0.30779                 0.30638
#                 stddev      0.03164                 0.00865
#         standard error      0.00223                 0.00066
#   99% confidence level      0.00518                 0.00154
#                   skew      2.26572                 1.27602
#               kurtosis      4.49791                 0.45437
#       time correlation     -0.00002                -0.00001
#
#           elasped time      1.30381
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                162      0.00000 |********************************     0.30867
#
#                  9        > 95% |*                                    0.33107
#
#        mean of 95%      0.30867
#          95th %ile      0.32959
 for      1.31577 seconds
Running:         malloc_100k# bin/malloc -E -C 200 -L -S -W -N malloc_100k -s 100k -g 10 -I 2000 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100k    1   1     51.32348          189        0       50     10 102400 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     49.45980                49.45980
#                    max     78.76156                62.72367
#                   mean     54.10461                53.00853
#                 median     51.46786                51.32348
#                 stddev      5.50813                 3.52888
#         standard error      0.38755                 0.25669
#   99% confidence level      0.90144                 0.59706
#                   skew      1.98250                 1.31154
#               kurtosis      3.98511                 0.58642
#       time correlation      0.01736                 0.01165
#
#           elasped time      5.47091
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12     49.00000 |*****                               49.78167
#                 67     50.00000 |********************************    50.50216
#                 33     51.00000 |***************                     51.37492
#                 14     52.00000 |******                              52.43254
#                 10     53.00000 |****                                53.63946
#                  9     54.00000 |****                                54.55078
#                  6     55.00000 |**                                  55.30487
#                  8     56.00000 |***                                 56.36642
#                  6     57.00000 |**                                  57.37992
#                  7     58.00000 |***                                 58.49696
#                  1     59.00000 |*                                   59.71976
#                  5     60.00000 |**                                  60.62088
#                  1     61.00000 |*                                   61.28341
#
#                 10        > 95% |****                                62.01808
#
#        mean of 95%     52.50520
#          95th %ile     61.36380
 for      5.48312 seconds
 
Running:         mallocT2_10# bin/malloc -E -C 200 -L -S -W -N mallocT2_10 -s 10 -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10    1   2      0.21461          201        0      500     10 10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.17580                 0.17580
#                    max      0.51295                 0.34578
#                   mean      0.22696                 0.22554
#                 median      0.21573                 0.21461
#                 stddev      0.04485                 0.04014
#         standard error      0.00316                 0.00283
#   99% confidence level      0.00734                 0.00659
#                   skew      1.70930                 0.70354
#               kurtosis      6.84452                -0.30109
#       time correlation      0.00003                 0.00003
#
#           elasped time      0.27373
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          111
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.22024
#
#                 11        > 95% |*                                    0.31710
#
#        mean of 95%      0.22024
#          95th %ile      0.29259
 for      0.28440 seconds
Running:        mallocT2_100# bin/malloc -E -C 200 -L -S -W -N mallocT2_100 -s 100 -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100   1   2      0.19282          200        0      500     10 100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.17224                 0.17224
#                    max      0.33300                 0.29640
#                   mean      0.20639                 0.20518
#                 median      0.19343                 0.19282
#                 stddev      0.03324                 0.03108
#         standard error      0.00234                 0.00220
#   99% confidence level      0.00544                 0.00511
#                   skew      1.30632                 1.13091
#               kurtosis      1.12071                 0.25661
#       time correlation     -0.00023                -0.00023
#
#           elasped time      0.24398
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.20105
#
#                 10        > 95% |*                                    0.28364
#
#        mean of 95%      0.20105
#          95th %ile      0.27484
 for      0.25820 seconds
Running:         mallocT2_1k# bin/malloc -E -C 200 -L -S -W -N mallocT2_1k -s 1k -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_1k    1   2      0.26575          173        0      500     10 1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.24655                 0.24655
#                    max      0.42718                 0.30676
#                   mean      0.28052                 0.26922
#                 median      0.26918                 0.26575
#                 stddev      0.03243                 0.01331
#         standard error      0.00228                 0.00101
#   99% confidence level      0.00531                 0.00235
#                   skew      2.08573                 0.63198
#               kurtosis      4.81620                -0.23952
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.31857
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                164      0.00000 |********************************     0.26755
#
#                  9        > 95% |*                                    0.29954
#
#        mean of 95%      0.26755
#          95th %ile      0.29416
 for      0.32870 seconds
Running:        mallocT2_10k# bin/malloc -E -C 200 -L -S -W -N mallocT2_10k -s 10k -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10k   1   2      0.39978          196        0      500     10 10240 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.36297                 0.36297
#                    max      0.62598                 0.52097
#                   mean      0.41492                 0.40962
#                 median      0.40019                 0.39978
#                 stddev      0.04815                 0.03749
#         standard error      0.00339                 0.00268
#   99% confidence level      0.00788                 0.00623
#                   skew      1.77841                 0.97488
#               kurtosis      3.95680                 0.16963
#       time correlation      0.00000                 0.00001
#
#           elasped time      0.45788
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          189
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.40453
#
#                 10        > 95% |*                                    0.50431
#
#        mean of 95%      0.40453
#          95th %ile      0.48698
 for      0.47164 seconds
Running:       mallocT2_100k# bin/malloc -E -C 200 -L -S -W -N mallocT2_100k -s 100k -g 10 -T 2 -I 10000 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100k   1   2    126.16858          197        0       10     10 102400 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    108.23066               108.23066
#                    max    174.89050               144.43930
#                   mean    126.93715               126.13669
#                 median    126.66010               126.16858
#                 stddev      8.72081                 7.02814
#         standard error      0.61359                 0.50073
#   99% confidence level      1.42722                 1.16471
#                   skew      1.41352                 0.07138
#               kurtosis      5.30994                -0.42693
#       time correlation     -0.00881                -0.00188
#
#           elasped time      2.61642
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          102
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    108.00000 |*                                  108.23066
#                  2    110.00000 |**                                 110.94426
#                  2    112.00000 |**                                 113.70906
#                 10    114.00000 |**************                     114.83060
#                 11    116.00000 |****************                   117.17018
#                 16    118.00000 |***********************            119.04298
#                 18    120.00000 |**************************         120.98998
#                 17    122.00000 |************************           122.67975
#                 19    124.00000 |***************************        125.08045
#                 16    126.00000 |***********************            127.01066
#                 22    128.00000 |********************************   128.86426
#                 22    130.00000 |********************************   130.79101
#                 17    132.00000 |************************           132.93330
#                 10    134.00000 |**************                     135.15162
#                  4    136.00000 |*****                              136.74842
#
#                 10        > 95% |**************                     140.66586
#
#        mean of 95%    125.35973
#          95th %ile    138.11866
 for      2.63776 seconds
 
Running:           close_bad# bin/close -E -C 200 -L -S -W -N close_bad -B 1800 -b 
             prc thr   usecs/call      samples   errors cnt/samp 
close_bad      1   1      0.76720          189        0     1800 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.72155                 0.72155
#                    max      1.42441                 0.84599
#                   mean      0.79339                 0.77571
#                 median      0.76933                 0.76720
#                 stddev      0.08465                 0.02772
#         standard error      0.00596                 0.00202
#   99% confidence level      0.01385                 0.00469
#                   skew      4.57108                 0.51724
#               kurtosis     25.17006                -0.60746
#       time correlation     -0.00019                -0.00003
#
#           elasped time      0.29918
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                179      0.00000 |********************************     0.77244
#
#                 10        > 95% |*                                    0.83420
#
#        mean of 95%      0.77244
#          95th %ile      0.82210
 for      0.32397 seconds
Running:           close_tmp# bin/close -E -C 200 -L -S -W -N close_tmp -B 640 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
close_tmp      1   1      3.27288          194        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.89528                 2.89528
#                    max      6.60568                 4.39488
#                   mean      3.40489                 3.32988
#                 median      3.28248                 3.27288
#                 stddev      0.53036                 0.35617
#         standard error      0.03732                 0.02557
#   99% confidence level      0.08680                 0.05948
#                   skew      2.65588                 1.25404
#               kurtosis      9.88669                 0.96508
#       time correlation      0.00015                -0.00039
#
#           elasped time     22.75584
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          202
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24      2.00000 |****                                 2.94667
#                154      3.00000 |********************************     3.29920
#                  6      4.00000 |*                                    4.06635
#
#                 10        > 95% |**                                   4.28012
#
#        mean of 95%      3.27823
#          95th %ile      4.12648
 for     22.76756 seconds
Running:           close_usr# bin/close -E -C 200 -L -S -W -N close_usr -B 640 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
close_usr      1   1      3.53896          193        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.11536                 3.11536
#                    max      6.39216                 4.56816
#                   mean      3.69693                 3.60561
#                 median      3.56216                 3.53896
#                 stddev      0.54257                 0.32889
#         standard error      0.03817                 0.02367
#   99% confidence level      0.08880                 0.05507
#                   skew      2.55667                 1.08333
#               kurtosis      7.93155                 0.44918
#       time correlation     -0.00008                -0.00019
#
#           elasped time     26.44605
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      3.00000 |********************************     3.49440
#                 18      4.00000 |***                                  4.16951
#
#                 10        > 95% |*                                    4.42560
#
#        mean of 95%      3.56080
#          95th %ile      4.31536
 for     26.45622 seconds
Running:          close_zero# bin/close -E -C 200 -L -S -W -N close_zero -B 640 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp 
close_zero     1   1      3.55731          182        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.30291                 3.30291
#                    max      8.37291                 4.31051
#                   mean      3.74984                 3.61054
#                 median      3.61691                 3.55731
#                 stddev      0.54423                 0.23839
#         standard error      0.03829                 0.01767
#   99% confidence level      0.08907                 0.04110
#                   skew      3.90631                 0.98670
#               kurtosis     25.22620                 0.34263
#       time correlation     -0.00000                -0.00010
#
#           elasped time     12.62486
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      3.00000 |********************************     3.56620
#                  3      4.00000 |*                                    4.07158
#
#                 10        > 95% |*                                    4.22171
#
#        mean of 95%      3.57501
#          95th %ile      4.11531
 for     12.63558 seconds
 
Running:           memcpy_10# bin/memcpy -E -C 200 -L -S -W -N memcpy_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10      1   1      0.06764          181        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.06620                 0.06620
#                    max      0.11050                 0.07199
#                   mean      0.06969                 0.06818
#                 median      0.06795                 0.06764
#                 stddev      0.00577                 0.00140
#         standard error      0.00041                 0.00010
#   99% confidence level      0.00094                 0.00024
#                   skew      4.43099                 0.82930
#               kurtosis     23.60084                -0.23318
#       time correlation      0.00002                 0.00000
#
#           elasped time      0.28676
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          104
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.06799
#
#                 10        > 95% |*                                    0.07143
#
#        mean of 95%      0.06799
#          95th %ile      0.07098
 for      0.31450 seconds
Running:           memcpy_1k# bin/memcpy -E -C 200 -L -S -W -N memcpy_1k -s 1k -I 25 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1k      1   1      0.28994          171        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.27874                 0.27874
#                    max      0.44066                 0.31848
#                   mean      0.30502                 0.29273
#                 median      0.29275                 0.28994
#                 stddev      0.03357                 0.00871
#         standard error      0.00236                 0.00067
#   99% confidence level      0.00549                 0.00155
#                   skew      2.46544                 0.99224
#               kurtosis      5.61218                 0.29807
#       time correlation      0.00011                 0.00003
#
#           elasped time      0.24987
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                162      0.00000 |********************************     0.29153
#
#                  9        > 95% |*                                    0.31427
#
#        mean of 95%      0.29153
#          95th %ile      0.31048
 for      0.26305 seconds
Running:          memcpy_10k# bin/memcpy -E -C 200 -L -S -W -N memcpy_10k -s 10k -I 200 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10k     1   1      2.28369          168        0      500    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.20177                 2.20177
#                    max      4.25592                 2.50590
#                   mean      2.40983                 2.30435
#                 median      2.30366                 2.28369
#                 stddev      0.28557                 0.06924
#         standard error      0.02009                 0.00534
#   99% confidence level      0.04673                 0.01243
#                   skew      2.94208                 1.02510
#               kurtosis     10.70291                 0.28578
#       time correlation     -0.00118                -0.00030
#
#           elasped time      0.24687
#      number of samples          168
#     number of outliers           34
#      getnsecs overhead          169
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                159      2.00000 |********************************     2.29459
#
#                  9        > 95% |*                                    2.47672
#
#        mean of 95%      2.29459
#          95th %ile      2.44753
 for      0.25676 seconds
Running:           memcpy_1m# bin/memcpy -E -C 200 -L -S -W -N memcpy_1m -s 1m -I 31250 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1m      1   1    335.93567          192        0        3  1048576
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    329.62100               329.62100
#                    max   4177.89833               369.21567
#                   mean    361.85841               340.26767
#                 median    336.53300               335.93567
#                 stddev    270.33249                10.01654
#         standard error     19.02053                 0.72288
#   99% confidence level     44.24175                 1.68142
#                   skew     13.92451                 1.38280
#               kurtosis    193.56567                 0.85467
#       time correlation     -0.58528                -0.01833
#
#           elasped time      0.22401
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          321
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    328.00000 |*                                  329.62100
#                 23    330.00000 |*******************                331.40187
#                 38    332.00000 |********************************   333.16907
#                 35    334.00000 |*****************************      334.98481
#                 23    336.00000 |*******************                336.97080
#                 12    338.00000 |**********                         339.01478
#                  5    340.00000 |****                               340.49247
#                  5    342.00000 |****                               342.76233
#                  3    344.00000 |**                                 344.89567
#                  7    346.00000 |*****                              347.00462
#                  7    348.00000 |*****                              349.07700
#                  5    350.00000 |****                               350.64713
#                  5    352.00000 |****                               353.10473
#                  4    354.00000 |***                                354.70900
#                  1    356.00000 |*                                  357.18367
#                  2    358.00000 |*                                  359.23167
#                  4    360.00000 |***                                361.15167
#                  2    362.00000 |*                                  363.07167
#
#                 10        > 95% |********                           366.86047
#
#        mean of 95%    338.80652
#          95th %ile    363.49833
 for      0.23772 seconds
Running:          memcpy_10m# bin/memcpy -E -C 200 -L -S -W -N memcpy_10m -s 10m -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10m     1   1   3288.83300          170        0        1 10485760
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   3156.73700              3156.73700
#                    max  28571.90500              3478.52900
#                   mean   3532.63878              3293.22716
#                 median   3299.84100              3288.83300
#                 stddev   1800.80534                70.60693
#         standard error    126.70422                 5.41530
#   99% confidence level    294.71402                12.59600
#                   skew     13.31935                 0.50934
#               kurtosis    182.05124                -0.19561
#       time correlation     -3.85005                 0.01370
#
#           elasped time      0.72150
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead          255
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   3150.00000 |**                                3156.73700
#                  2   3159.00000 |****                              3160.70500
#                  2   3168.00000 |****                              3174.65700
#                  1   3177.00000 |**                                3185.92100
#                  2   3186.00000 |****                              3190.78500
#                  6   3195.00000 |************                      3200.72633
#                  8   3204.00000 |****************                  3207.52100
#                  7   3213.00000 |**************                    3218.03071
#                  5   3222.00000 |**********                        3225.08900
#                  6   3231.00000 |************                      3236.48100
#                 10   3240.00000 |********************              3245.77380
#                  3   3249.00000 |******                            3251.79833
#                 16   3258.00000 |********************************  3262.11300
#                  9   3267.00000 |******************                3270.71389
#                  4   3276.00000 |********                          3281.40900
#                 10   3285.00000 |********************              3290.34340
#                 12   3294.00000 |************************          3297.94233
#                  6   3303.00000 |************                      3308.92900
#                  6   3312.00000 |************                      3318.44367
#                  9   3321.00000 |******************                3324.44544
#                  5   3330.00000 |**********                        3334.75940
#                  7   3339.00000 |**************                    3341.71529
#                  4   3348.00000 |********                          3353.60100
#                  0   3357.00000 |                                           -
#                  6   3366.00000 |************                      3372.80100
#                  2   3375.00000 |****                              3382.78500
#                  4   3384.00000 |********                          3386.49700
#                  2   3393.00000 |****                              3395.71300
#                  3   3402.00000 |******                            3405.31300
#                  1   3411.00000 |**                                3411.71300
#                  2   3420.00000 |****                              3423.61700
#
#                  9        > 95% |******************                3454.63567
#
#        mean of 95%   3284.20433
#          95th %ile   3429.88900
 for      0.73750 seconds
 
Running:           strcpy_10# bin/strcpy -E -C 200 -L -S -W -N strcpy_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_10      1   1      0.10399          167        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09985                 0.09985
#                    max      0.16695                 0.11135
#                   mean      0.10860                 0.10441
#                 median      0.10470                 0.10399
#                 stddev      0.01141                 0.00241
#         standard error      0.00080                 0.00019
#   99% confidence level      0.00187                 0.00043
#                   skew      2.86650                 0.79253
#               kurtosis      8.42573                 0.46858
#       time correlation      0.00000                 0.00001
#
#           elasped time      0.44348
#      number of samples          167
#     number of outliers           35
#      getnsecs overhead          102
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                158      0.00000 |********************************     0.10406
#
#                  9        > 95% |*                                    0.11062
#
#        mean of 95%      0.10406
#          95th %ile      0.10974
 for      0.46745 seconds
Running:           strcpy_1k# bin/strcpy -E -C 200 -L -S -W -N strcpy_1k -s 1k -I 25 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_1k      1   1      0.51899          177        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.50242                 0.50242
#                    max      0.89973                 0.55272
#                   mean      0.53597                 0.52100
#                 median      0.52251                 0.51899
#                 stddev      0.05059                 0.01107
#         standard error      0.00356                 0.00083
#   99% confidence level      0.00828                 0.00194
#                   skew      3.91920                 0.62557
#               kurtosis     18.56046                -0.15100
#       time correlation     -0.00002                -0.00004
#
#           elasped time      0.43736
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          188
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                168      0.00000 |********************************     0.51957
#
#                  9        > 95% |*                                    0.54766
#
#        mean of 95%      0.51957
#          95th %ile      0.54344
 for      0.44972 seconds
 
Running:           strlen_10# bin/strlen -E -C 200 -L -S -W -N strlen_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_10      1   1      0.03489          173        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.03114                 0.03114
#                    max      0.06474                 0.04429
#                   mean      0.03830                 0.03549
#                 median      0.03543                 0.03489
#                 stddev      0.00778                 0.00297
#         standard error      0.00055                 0.00023
#   99% confidence level      0.00127                 0.00052
#                   skew      1.89833                 0.94247
#               kurtosis      2.79190                 0.48043
#       time correlation      0.00002                 0.00000
#
#           elasped time      0.15908
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          263
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                164      0.00000 |********************************     0.03508
#
#                  9        > 95% |*                                    0.04296
#
#        mean of 95%      0.03508
#          95th %ile      0.04159
 for      0.18601 seconds
Running:           strlen_1k# bin/strlen -E -C 200 -L -S -W -N strlen_1k -s 1k -I 100 
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_1k      1   1      0.19667          175        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.19283                 0.19283
#                    max      0.47085                 0.20487
#                   mean      0.20365                 0.19721
#                 median      0.19693                 0.19667
#                 stddev      0.02585                 0.00279
#         standard error      0.00182                 0.00021
#   99% confidence level      0.00423                 0.00049
#                   skew      6.63730                 0.82770
#               kurtosis     57.28505                 0.08804
#       time correlation     -0.00006                 0.00002
#
#           elasped time      0.04482
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          190
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                166      0.00000 |********************************     0.19683
#
#                  9        > 95% |*                                    0.20407
#
#        mean of 95%      0.19683
#          95th %ile      0.20282
 for      0.05557 seconds
 
Running:           strchr_10# bin/strchr -E -C 200 -L -S -W -N strchr_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_10      1   1      0.03529          180        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.03244                 0.03244
#                    max      0.06774                 0.04133
#                   mean      0.03701                 0.03562
#                 median      0.03559                 0.03529
#                 stddev      0.00492                 0.00193
#         standard error      0.00035                 0.00014
#   99% confidence level      0.00081                 0.00033
#                   skew      2.99269                 0.82498
#               kurtosis     11.14371                 0.33688
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.15391
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.03537
#
#                  9        > 95% |*                                    0.04040
#
#        mean of 95%      0.03537
#          95th %ile      0.03944
 for      0.17880 seconds
Running:           strchr_1k# bin/strchr -E -C 200 -L -S -W -N strchr_1k -s 1k -I 50 
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_1k      1   1      0.22444          132        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.21791                 0.21791
#                    max      0.48799                 0.23647
#                   mean      0.25425                 0.22503
#                 median      0.22687                 0.22444
#                 stddev      0.05253                 0.00395
#         standard error      0.00370                 0.00034
#   99% confidence level      0.00860                 0.00080
#                   skew      2.00166                 0.98529
#               kurtosis      3.65458                 0.85519
#       time correlation     -0.00013                -0.00000
#
#           elasped time      0.10704
#      number of samples          132
#     number of outliers           70
#      getnsecs overhead          139
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                125      0.00000 |********************************     0.22444
#
#                  7        > 95% |*                                    0.23549
#
#        mean of 95%      0.22444
#          95th %ile      0.23443
 for      0.11638 seconds
 
Running:           strcmp_10# bin/strcmp -E -C 200 -L -S -W -N strcmp_10 -s 10 -I 3 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_10      1   1      0.04841          176        0    33333       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.04650                 0.04650
#                    max      0.08460                 0.05196
#                   mean      0.04996                 0.04863
#                 median      0.04866                 0.04841
#                 stddev      0.00436                 0.00116
#         standard error      0.00031                 0.00009
#   99% confidence level      0.00071                 0.00020
#                   skew      4.09326                 0.65430
#               kurtosis     22.96613                -0.18953
#       time correlation     -0.00001                -0.00000
#
#           elasped time      0.34096
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                167      0.00000 |********************************     0.04849
#
#                  9        > 95% |*                                    0.05126
#
#        mean of 95%      0.04849
#          95th %ile      0.05081
 for      0.36466 seconds
Running:           strcmp_1k# bin/strcmp -E -C 200 -L -S -W -N strcmp_1k -s 1k -I 50 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_1k      1   1      1.93591          182        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.85437                 1.85437
#                    max      3.21489                 2.18193
#                   mean      2.01452                 1.95853
#                 median      1.94295                 1.93591
#                 stddev      0.21091                 0.07863
#         standard error      0.01484                 0.00583
#   99% confidence level      0.03452                 0.01356
#                   skew      3.32905                 1.28566
#               kurtosis     13.00959                 0.78210
#       time correlation      0.00017                 0.00003
#
#           elasped time      0.81795
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                145      1.00000 |********************************     1.92380
#                 27      2.00000 |*****                                2.07033
#
#                 10        > 95% |**                                   2.16034
#
#        mean of 95%      1.94680
#          95th %ile      2.13943
 for      0.82931 seconds
 
Running:         scasecmp_10# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_10 -s 10 -I 6 
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_10    1   1      0.07415          174        0    16666       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07163                 0.07163
#                    max      0.11616                 0.07991
#                   mean      0.07699                 0.07457
#                 median      0.07450                 0.07415
#                 stddev      0.00739                 0.00190
#         standard error      0.00052                 0.00014
#   99% confidence level      0.00121                 0.00033
#                   skew      3.08727                 0.71365
#               kurtosis     10.28280                -0.16602
#       time correlation      0.00000                 0.00000
#
#           elasped time      0.26427
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      0.00000 |********************************     0.07433
#
#                  9        > 95% |*                                    0.07901
#
#        mean of 95%      0.07433
#          95th %ile      0.07818
 for      0.28811 seconds
Running:         scasecmp_1k# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_1k -s 1k -I 155 
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_1k    1   1      3.99196          184        0      645     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.67881                 3.67881
#                    max      5.49423                 4.28011
#                   mean      4.06086                 3.98804
#                 median      4.00427                 3.99196
#                 stddev      0.27581                 0.10436
#         standard error      0.01941                 0.00769
#   99% confidence level      0.04514                 0.01789
#                   skew      2.97975                -0.24926
#               kurtosis     10.36813                 1.75692
#       time correlation      0.00102                 0.00031
#
#           elasped time      0.53341
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          288
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 99      3.00000 |********************************     3.92062
#                 75      4.00000 |************************             4.04499
#
#                 10        > 95% |***                                  4.22840
#
#        mean of 95%      3.97423
#          95th %ile      4.15787
 for      0.54206 seconds
Running:              strtol# bin/strtol -E -C 200 -L -S -W -N strtol -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
strtol         1   1      0.06796          166        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.06617                 0.06617
#                    max      0.14635                 0.07077
#                   mean      0.07135                 0.06815
#                 median      0.06837                 0.06796
#                 stddev      0.00957                 0.00098
#         standard error      0.00067                 0.00008
#   99% confidence level      0.00157                 0.00018
#                   skew      4.21003                 0.70979
#               kurtosis     22.18944                -0.02401
#       time correlation     -0.00005                 0.00000
#
#           elasped time      0.07601
#      number of samples          166
#     number of outliers           36
#      getnsecs overhead          175
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                157      0.00000 |********************************     0.06801
#
#                  9        > 95% |*                                    0.07049
#
#        mean of 95%      0.06801
#          95th %ile      0.07016
 for      0.10251 seconds
 
Running:          getcontext# bin/getcontext -E -C 200 -L -S -W -N getcontext -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getcontext     1   1      9.17795          188        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      8.83363                 8.83363
#                    max     11.85699                10.34070
#                   mean      9.40938                 9.29044
#                 median      9.22966                 9.17795
#                 stddev      0.56380                 0.35015
#         standard error      0.03967                 0.02554
#   99% confidence level      0.09227                 0.05940
#                   skew      1.93674                 1.08978
#               kurtosis      3.94540                 0.52016
#       time correlation      0.00042                -0.00036
#
#           elasped time      1.90656
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 37      8.00000 |********                             8.94097
#                139      9.00000 |********************************     9.30744
#                  2     10.00000 |*                                   10.01891
#
#                 10        > 95% |**                                  10.20141
#
#        mean of 95%      9.23926
#          95th %ile     10.04169
 for      1.93046 seconds
Running:          setcontext# bin/setcontext -E -C 200 -L -S -W -N setcontext -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
setcontext     1   1      9.46285          181        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      9.27776                 9.27776
#                    max     12.83770                10.19885
#                   mean      9.70239                 9.55273
#                 median      9.49485                 9.46285
#                 stddev      0.54391                 0.21745
#         standard error      0.03827                 0.01616
#   99% confidence level      0.08901                 0.03759
#                   skew      3.01777                 1.27547
#               kurtosis     10.67580                 0.66918
#       time correlation     -0.00154                -0.00044
#
#           elasped time      1.96566
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          192
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                170      9.00000 |********************************     9.51703
#                  1     10.00000 |*                                   10.00992
#
#                 10        > 95% |*                                   10.11383
#
#        mean of 95%      9.51991
#          95th %ile     10.01069
 for      1.98967 seconds
 
Running:            mutex_st# bin/mutex -E -C 200 -L -S -W -N mutex_st -I 10 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_st       1   1      0.11787          187        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.11229                 0.11229
#                    max      0.19137                 0.12849
#                   mean      0.12088                 0.11856
#                 median      0.11807                 0.11787
#                 stddev      0.01026                 0.00339
#         standard error      0.00072                 0.00025
#   99% confidence level      0.00168                 0.00058
#                   skew      4.11868                 0.72103
#               kurtosis     19.85000                 0.01350
#       time correlation     -0.00003                -0.00000
#
#           elasped time      0.24893
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          192
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.11811
#
#                 10        > 95% |*                                    0.12653
#
#        mean of 95%      0.11811
#          95th %ile      0.12478
 for      0.27368 seconds
Running:            mutex_mt# bin/mutex -E -C 200 -L -S -W -N mutex_mt -t -I 10 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_mt       1   1      0.09897          180        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09728                 0.09728
#                    max      0.19400                 0.10898
#                   mean      0.10445                 0.10035
#                 median      0.09925                 0.09897
#                 stddev      0.01570                 0.00289
#         standard error      0.00110                 0.00022
#   99% confidence level      0.00257                 0.00050
#                   skew      4.30793                 1.23890
#               kurtosis     19.11085                 0.49541
#       time correlation      0.00006                 0.00001
#
#           elasped time      0.21683
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.09996
#
#                  9        > 95% |*                                    0.10789
#
#        mean of 95%      0.09996
#          95th %ile      0.10678
 for      0.22675 seconds
Running:            mutex_T2# bin/mutex -E -C 200 -L -S -W -N mutex_T2 -T 2 -I 25 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_T2       1   2      0.32839          199        0     4000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.23924                 0.23924
#                    max      0.52167                 0.42919
#                   mean      0.33235                 0.33020
#                 median      0.32993                 0.32839
#                 stddev      0.03874                 0.03454
#         standard error      0.00273                 0.00245
#   99% confidence level      0.00634                 0.00570
#                   skew      0.80893                 0.09275
#               kurtosis      2.67971                 0.08489
#       time correlation      0.00009                 0.00011
#
#           elasped time      0.30573
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.32626
#
#                 10        > 95% |*                                    0.40460
#
#        mean of 95%      0.32626
#          95th %ile      0.38369
 for      0.31730 seconds
 
Running:             longjmp# bin/longjmp -E -C 200 -L -S -W -N longjmp -I 5 
             prc thr   usecs/call      samples   errors cnt/samp 
longjmp        1   1      0.07884          187        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07404                 0.07404
#                    max      0.11104                 0.08350
#                   mean      0.08009                 0.07895
#                 median      0.07899                 0.07884
#                 stddev      0.00493                 0.00169
#         standard error      0.00035                 0.00012
#   99% confidence level      0.00081                 0.00029
#                   skew      3.77703                 0.23078
#               kurtosis     16.53386                -0.17692
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.32808
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.07875
#
#                 10        > 95% |*                                    0.08240
#
#        mean of 95%      0.07875
#          95th %ile      0.08194
 for      0.35242 seconds
Running:          siglongjmp# bin/siglongjmp -E -C 200 -L -S -W -N siglongjmp -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
siglongjmp     1   1     10.88640          190        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.46318                10.46318
#                    max     13.34579                11.81742
#                   mean     11.03968                10.96409
#                 median     10.91917                10.88640
#                 stddev      0.42626                 0.29438
#         standard error      0.02999                 0.02136
#   99% confidence level      0.06976                 0.04967
#                   skew      1.87867                 0.93513
#               kurtosis      4.91234                 0.28818
#       time correlation      0.00139                 0.00122
#
#           elasped time     11.15660
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                125     10.00000 |********************************    10.78636
#                 55     11.00000 |**************                      11.23283
#
#                 10        > 95% |**                                  11.70756
#
#        mean of 95%     10.92278
#          95th %ile     11.58318
 for     11.18303 seconds
 
Running:           getrusage# bin/getrusage -E -C 200 -L -S -W -N getrusage -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
getrusage      1   1     17.83780          179        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.01194                17.01194
#                    max     32.91978                20.56164
#                   mean     18.83550                18.11921
#                 median     17.96170                17.83780
#                 stddev      2.48838                 0.82069
#         standard error      0.17508                 0.06134
#   99% confidence level      0.40724                 0.14268
#                   skew      3.29275                 1.06169
#               kurtosis     12.40958                 0.23396
#       time correlation     -0.00791                -0.00590
#
#           elasped time      1.90855
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          141
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                103     17.00000 |********************************    17.54019
#                 50     18.00000 |***************                     18.48232
#                 17     19.00000 |*****                               19.46599
#
#                  9        > 95% |**                                  20.18458
#
#        mean of 95%     18.00987
#          95th %ile     19.92778
 for      1.93537 seconds
 
Running:               times# bin/times -E -C 200 -L -S -W -N times -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
times          1   1     16.21662          186        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.79576                15.79576
#                    max     23.44478                18.18987
#                   mean     16.69406                16.44131
#                 median     16.25195                16.21662
#                 stddev      1.09755                 0.60123
#         standard error      0.07722                 0.04408
#   99% confidence level      0.17962                 0.10254
#                   skew      2.57743                 1.48092
#               kurtosis      8.70042                 1.34757
#       time correlation     -0.00277                -0.00102
#
#           elasped time      3.37861
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 38     15.00000 |**********                          15.93493
#                119     16.00000 |********************************    16.31130
#                 19     17.00000 |*****                               17.39523
#
#                 10        > 95% |**                                  18.10024
#
#        mean of 95%     16.34705
#          95th %ile     17.96101
 for      3.40199 seconds
Running:                time# bin/time -E -C 200 -L -S -W -N time -I 2 
             prc thr   usecs/call      samples   errors cnt/samp 
time           1   1      0.08347          168        0    50000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08102                 0.08102
#                    max      0.13709                 0.08866
#                   mean      0.08622                 0.08374
#                 median      0.08400                 0.08347
#                 stddev      0.00731                 0.00165
#         standard error      0.00051                 0.00013
#   99% confidence level      0.00120                 0.00030
#                   skew      3.83912                 0.73082
#               kurtosis     18.76884                 0.28093
#       time correlation      0.00002                -0.00001
#
#           elasped time      0.87530
#      number of samples          168
#     number of outliers           34
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                159      0.00000 |********************************     0.08351
#
#                  9        > 95% |*                                    0.08778
#
#        mean of 95%      0.08351
#          95th %ile      0.08691
 for      0.89993 seconds
Running:         localtime_r# bin/localtime_r -E -C 200 -L -S -W -N localtime_r -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
localtime_r    1   1      0.55793          168        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.54002                 0.54002
#                    max      4.19390                 0.59173
#                   mean      0.59579                 0.55940
#                 median      0.56101                 0.55793
#                 stddev      0.26290                 0.01080
#         standard error      0.01850                 0.00083
#   99% confidence level      0.04302                 0.00194
#                   skew     12.76440                 0.93765
#               kurtosis    170.82630                 0.85306
#       time correlation     -0.00060                -0.00001
#
#           elasped time      0.12437
#      number of samples          168
#     number of outliers           34
#      getnsecs overhead          145
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                159      0.00000 |********************************     0.55777
#
#                  9        > 95% |*                                    0.58823
#
#        mean of 95%      0.55777
#          95th %ile      0.58379
 for      0.14608 seconds
Running:            strftime# bin/strftime -E -C 200 -L -S -W -N strftime -I 250 
             prc thr   usecs/call      samples   errors cnt/samp   format
strftime       1   1      1.96936          173        0      400       %c
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.86440                 1.86440
#                    max      4.19208                 2.48968
#                   mean      2.21202                 2.03414
#                 median      1.99688                 1.96936
#                 stddev      0.49481                 0.15403
#         standard error      0.03481                 0.01171
#   99% confidence level      0.08098                 0.02724
#                   skew      2.25138                 1.38152
#               kurtosis      4.42111                 0.83873
#       time correlation      0.00157                 0.00063
#
#           elasped time      0.18836
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                102      1.00000 |********************************     1.93579
#                 62      2.00000 |*******************                  2.13674
#
#                  9        > 95% |**                                   2.44196
#
#        mean of 95%      2.01176
#          95th %ile      2.39688
 for      0.20522 seconds
 
Running:              mktime# bin/mktime -E -C 200 -L -S -W -N mktime -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
mktime         1   1     61.89491          163        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     60.25395                60.25395
#                    max     93.74899                67.66515
#                   mean     64.91403                62.51838
#                 median     62.51955                61.89491
#                 stddev      5.63477                 1.75489
#         standard error      0.39646                 0.13745
#   99% confidence level      0.92217                 0.31972
#                   skew      1.99618                 1.18409
#               kurtosis      4.12302                 0.59418
#       time correlation     -0.02608                -0.01095
#
#           elasped time      2.63749
#      number of samples          163
#     number of outliers           39
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 27     60.00000 |*************                       60.77320
#                 62     61.00000 |********************************    61.50459
#                 27     62.00000 |*************                       62.50338
#                 16     63.00000 |********                            63.51371
#                 14     64.00000 |*******                             64.53811
#                  6     65.00000 |***                                 65.51240
#                  2     66.00000 |*                                   66.27123
#
#                  9        > 95% |****                                67.04164
#
#        mean of 95%     62.25404
#          95th %ile     66.30962
 for      2.65942 seconds
Running:            mktimeT2# bin/mktime -E -C 200 -L -S -W -N mktimeT2 -T 2 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
mktimeT2       1   2    198.89765          200        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    165.21061               165.21061
#                    max    291.85893               256.45925
#                   mean    200.92008               200.08303
#                 median    199.07941               198.89765
#                 stddev     20.70558                19.01009
#         standard error      1.45684                 1.34422
#   99% confidence level      3.38861                 3.12665
#                   skew      1.02966                 0.60249
#               kurtosis      2.01078                 0.28962
#       time correlation      0.03031                 0.02038
#
#           elasped time      4.12759
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5    165.00000 |*******                            166.37746
#                  5    168.00000 |*******                            169.80939
#                  5    171.00000 |*******                            172.22450
#                  1    174.00000 |*                                  174.33957
#                 13    177.00000 |*******************                178.31367
#                 11    180.00000 |****************                   181.54806
#                  9    183.00000 |*************                      184.24905
#                 10    186.00000 |***************                    187.41221
#                  9    189.00000 |*************                      190.67265
#                 13    192.00000 |*******************                193.88694
#                 15    195.00000 |**********************             196.14514
#                 13    198.00000 |*******************                199.61996
#                 11    201.00000 |****************                   202.45093
#                 21    204.00000 |********************************   205.24316
#                  9    207.00000 |*************                      208.39667
#                  8    210.00000 |************                       210.96549
#                  7    213.00000 |**********                         214.22730
#                  3    216.00000 |****                               217.02842
#                  8    219.00000 |************                       220.29701
#                  6    222.00000 |*********                          223.17669
#                  3    225.00000 |****                               226.86906
#                  1    228.00000 |*                                  229.05957
#                  0    231.00000 |                                           -
#                  2    234.00000 |***                                235.17925
#                  2    237.00000 |***                                237.65861
#
#                 10        > 95% |***************                    247.11039
#
#        mean of 95%    197.60791
#          95th %ile    238.34981
 for      4.14027 seconds
 
Running:           c_mutex_1# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_1 -I 25 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_1      1   1      0.21549          202        0     4000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.19226                 0.19226
#                    max      0.39725                 0.39725
#                   mean      0.23832                 0.23832
#                 median      0.21549                 0.21549
#                 stddev      0.05390                 0.05390
#         standard error      0.00379                 0.00379
#   99% confidence level      0.00882                 0.00882
#                   skew      1.65317                 1.65317
#               kurtosis      1.24257                 1.24257
#       time correlation      0.00028                 0.00028
#
#           elasped time      0.19748
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                191      0.00000 |********************************     0.23033
#
#                 11        > 95% |*                                    0.37700
#
#        mean of 95%      0.23033
#          95th %ile      0.36576
 for      0.22195 seconds
Running:          c_mutex_10# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_10 -T 10 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_10     1  10    884.54425          197        0       20 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    768.08985               768.08985
#                    max   1324.54425              1031.79545
#                   mean    895.90229               889.18129
#                 median    886.54105               884.54425
#                 stddev     65.68649                48.15353
#         standard error      4.62169                 3.43080
#   99% confidence level     10.75004                 7.98003
#                   skew      2.54863                 0.76398
#               kurtosis     11.62284                 0.83079
#       time correlation      0.29524                 0.20756
#
#           elasped time      3.80608
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          251
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    768.00000 |*                                  768.08985
#                  0    776.00000 |                                           -
#                  0    784.00000 |                                           -
#                  2    792.00000 |***                                796.08345
#                  1    800.00000 |*                                  801.98425
#                  4    808.00000 |******                             811.56185
#                  3    816.00000 |****                               820.00238
#                  4    824.00000 |******                             828.21145
#                 11    832.00000 |*****************                  836.21960
#                 10    840.00000 |****************                   844.18713
#                  7    848.00000 |***********                        851.77991
#                 15    856.00000 |************************           859.25316
#                 13    864.00000 |********************               867.97317
#                 20    872.00000 |********************************   875.48633
#                 15    880.00000 |************************           884.36676
#                 15    888.00000 |************************           891.85561
#                 20    896.00000 |********************************   899.41337
#                 12    904.00000 |*******************                908.23172
#                  8    912.00000 |************                       916.49625
#                  4    920.00000 |******                             926.38745
#                  5    928.00000 |********                           931.88121
#                  4    936.00000 |******                             940.08985
#                  2    944.00000 |***                                948.73625
#                  2    952.00000 |***                                953.31225
#                  2    960.00000 |***                                964.60185
#                  4    968.00000 |******                             974.10905
#                  2    976.00000 |***                                980.49305
#                  1    984.00000 |*                                  984.69145
#
#                 10        > 95% |****************                  1013.93689
#
#        mean of 95%    882.50987
#          95th %ile    988.63385
 for      3.82466 seconds
Running:         c_mutex_200# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_200 -T 200 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_200    1 200  31545.91050          196        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  29253.43050             29253.43050
#                    max  39173.43050             36129.33450
#                   mean  32032.40999             31861.93466
#                 median  31570.87050             31545.91050
#                 stddev   1758.34555              1471.62208
#         standard error    123.71676               105.11586
#   99% confidence level    287.76519               244.49950
#                   skew      1.42673                 0.99264
#               kurtosis      2.22663                 0.47044
#       time correlation     -2.96520                -2.11950
#
#           elasped time     24.95097
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          147
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2  29200.00000 |****                             29270.39050
#                  1  29400.00000 |**                               29551.41450
#                  1  29600.00000 |**                               29621.94250
#                  1  29800.00000 |**                               29807.41450
#                  7  30000.00000 |**************                   30084.93679
#                 10  30200.00000 |********************             30281.46250
#                 13  30400.00000 |**************************       30513.73819
#                 13  30600.00000 |**************************       30709.96219
#                 16  30800.00000 |******************************** 30915.99850
#                 14  31000.00000 |****************************     31097.65450
#                 13  31200.00000 |**************************       31299.24465
#                 14  31400.00000 |****************************     31515.20879
#                 10  31600.00000 |********************             31726.08330
#                 15  31800.00000 |******************************   31909.67797
#                  4  32000.00000 |********                         32062.58250
#                  6  32200.00000 |************                     32309.34517
#                  7  32400.00000 |**************                   32494.68307
#                  6  32600.00000 |************                     32714.42250
#                  7  32800.00000 |**************                   32847.35964
#                  3  33000.00000 |******                           33155.12650
#                  4  33200.00000 |********                         33298.39050
#                  2  33400.00000 |****                             33492.21450
#                  4  33600.00000 |********                         33709.46250
#                  3  33800.00000 |******                           33937.07850
#                  2  34000.00000 |****                             34142.45450
#                  1  34200.00000 |**                               34223.92650
#                  2  34400.00000 |****                             34434.23050
#                  2  34600.00000 |****                             34716.21450
#                  1  34800.00000 |**                               34953.52650
#                  2  35000.00000 |****                             35053.43050
#
#                 10        > 95% |********************             35611.83050
#
#        mean of 95%  31660.32736
#          95th %ile  35272.50250
 for     24.96348 seconds
 
Running:            c_cond_1# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_1 -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_1       1   1      0.53903          160        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.52802                 0.52802
#                    max      0.68802                 0.55592
#                   mean      0.55071                 0.53959
#                 median      0.54082                 0.53903
#                 stddev      0.02542                 0.00565
#         standard error      0.00179                 0.00045
#   99% confidence level      0.00416                 0.00104
#                   skew      2.26792                 0.56613
#               kurtosis      5.60524                 0.14287
#       time correlation     -0.00003                 0.00001
#
#           elasped time      0.11597
#      number of samples          160
#     number of outliers           42
#      getnsecs overhead          110
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                152      0.00000 |********************************     0.53887
#
#                  8        > 95% |*                                    0.55317
#
#        mean of 95%      0.53887
#          95th %ile      0.55106
 for      0.14265 seconds
Running:           c_cond_10# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_10 -T 10 -I 3000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_10      1  10    920.08171          193        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    815.20453               815.20453
#                    max   1152.61253              1009.20735
#                   mean    929.00648               921.26659
#                 median    923.40218               920.08171
#                 stddev     51.14425                36.89985
#         standard error      3.59850                 2.65611
#   99% confidence level      8.37010                 6.17811
#                   skew      1.36070                -0.08208
#               kurtosis      3.34892                -0.47468
#       time correlation     -0.05430                -0.03640
#
#           elasped time      6.54753
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    810.00000 |**                                 815.20453
#                  0    816.00000 |                                           -
#                  0    822.00000 |                                           -
#                  0    828.00000 |                                           -
#                  0    834.00000 |                                           -
#                  2    840.00000 |****                               843.87653
#                  2    846.00000 |****                               848.96641
#                  4    852.00000 |*********                          853.83982
#                  4    858.00000 |*********                          860.95135
#                  4    864.00000 |*********                          866.00924
#                  4    870.00000 |*********                          871.95182
#                  6    876.00000 |*************                      878.12782
#                  8    882.00000 |******************                 884.87982
#                 11    888.00000 |*************************          890.61501
#                 12    894.00000 |***************************        897.47778
#                 10    900.00000 |**********************             903.10213
#                 11    906.00000 |*************************          909.07781
#                 12    912.00000 |***************************        914.49551
#                 13    918.00000 |*****************************      921.04952
#                  7    924.00000 |****************                   927.98651
#                 10    930.00000 |**********************             932.75822
#                 11    936.00000 |*************************          938.02429
#                 14    942.00000 |********************************   944.96641
#                 10    948.00000 |**********************             950.41771
#                  4    954.00000 |*********                          956.68782
#                  9    960.00000 |********************               963.93300
#                  5    966.00000 |***********                        968.44914
#                  7    972.00000 |****************                   974.33650
#                  2    978.00000 |****                               978.71324
#
#                 10        > 95% |**********************             990.21441
#
#        mean of 95%    917.49895
#          95th %ile    981.13771
 for      6.56109 seconds
Running:          c_cond_200# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_200 -T 200 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_200     1 200  33178.90050          192        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  28126.86850             30657.94050
#                    max  39647.38050             36454.42050
#                   mean  33489.73519             33280.79917
#                 median  33210.90050             33178.90050
#                 stddev   1620.45295              1161.89627
#         standard error    114.01467                83.85264
#   99% confidence level    265.19813               195.04124
#                   skew      1.18769                 0.43547
#               kurtosis      2.83010                -0.16410
#       time correlation     -0.08360                 0.15299
#
#           elasped time     25.35865
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  30600.00000 |**                               30657.94050
#                  1  30800.00000 |**                               30989.46050
#                  2  31000.00000 |****                             31082.13250
#                  3  31200.00000 |******                           31305.57783
#                  4  31400.00000 |********                         31485.42850
#                  3  31600.00000 |******                           31722.08983
#                  6  31800.00000 |************                     31869.03383
#                 12  32000.00000 |************************         32100.32983
#                 15  32200.00000 |******************************   32308.43223
#                 12  32400.00000 |************************         32503.60450
#                 12  32600.00000 |************************         32679.80717
#                 13  32800.00000 |**************************       32902.44019
#                 16  33000.00000 |******************************** 33108.24450
#                 14  33200.00000 |****************************     33283.78736
#                 12  33400.00000 |************************         33488.42583
#                  8  33600.00000 |****************                 33709.81250
#                 10  33800.00000 |********************             33882.67010
#                  5  34000.00000 |**********                       34089.72290
#                 10  34200.00000 |********************             34309.49890
#                  5  34400.00000 |**********                       34501.42210
#                  3  34600.00000 |******                           34692.71383
#                  8  34800.00000 |****************                 34916.32450
#                  6  35000.00000 |************                     35099.04983
#                  1  35200.00000 |**                               35321.36450
#
#                 10        > 95% |********************             35865.33890
#
#        mean of 95%  33138.79149
#          95th %ile  35409.42850
 for     25.37439 seconds
 
Running:           c_lockf_1# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_1 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_1      1   1     90.85819          186        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     88.73851                88.73851
#                    max    142.62907                97.87771
#                   mean     93.23618                91.54801
#                 median     91.00923                90.85819
#                 stddev      7.02764                 2.12121
#         standard error      0.49446                 0.15553
#   99% confidence level      1.15012                 0.36177
#                   skew      4.12302                 1.40315
#               kurtosis     20.08090                 1.22744
#       time correlation      0.01680                -0.00434
#
#           elasped time      1.89674
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          133
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     88.00000 |*                                   88.77947
#                 35     89.00000 |*****************                   89.62434
#                 64     90.00000 |********************************    90.48587
#                 35     91.00000 |*****************                   91.31614
#                 13     92.00000 |******                              92.57437
#                 12     93.00000 |******                              93.54214
#                  8     94.00000 |****                                94.53883
#                  5     95.00000 |**                                  95.47694
#                  2     96.00000 |*                                   96.30843
#
#                 10        > 95% |*****                               97.40744
#
#        mean of 95%     91.21509
#          95th %ile     97.01755
 for      1.92287 seconds
Running:          c_lockf_10# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_10 -P 10 -I 50000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_10    10   1   2581.93250          197        0        2 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2239.91650              2239.91650
#                    max   3964.46050              3239.34050
#                   mean   2631.86391              2608.42720
#                 median   2585.38850              2581.93250
#                 stddev    264.40479               219.56426
#         standard error     18.60346                15.64331
#   99% confidence level     43.27164                36.38633
#                   skew      1.52377                 0.82501
#               kurtosis      3.44773                 0.12697
#       time correlation      1.84588                 1.30525
#
#           elasped time      1.25585
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2220.00000 |**                                2239.91650
#                  1   2250.00000 |**                                2274.86050
#                  5   2280.00000 |**********                        2298.23330
#                  4   2310.00000 |********                          2329.42050
#                 13   2340.00000 |**************************        2353.22604
#                  9   2370.00000 |******************                2387.79917
#                 10   2400.00000 |********************              2416.87650
#                 16   2430.00000 |********************************  2444.56450
#                 14   2460.00000 |****************************      2477.63993
#                  7   2490.00000 |**************                    2502.51764
#                 12   2520.00000 |************************          2535.11650
#                  6   2550.00000 |************                      2566.42317
#                 16   2580.00000 |********************************  2595.42050
#                 10   2610.00000 |********************              2620.06370
#                  7   2640.00000 |**************                    2652.22279
#                  9   2670.00000 |******************                2676.43917
#                  7   2700.00000 |**************                    2713.04107
#                  6   2730.00000 |************                      2747.09517
#                  9   2760.00000 |******************                2775.21250
#                  4   2790.00000 |********                          2809.96450
#                  2   2820.00000 |****                              2830.44450
#                  4   2850.00000 |********                          2863.78850
#                  2   2880.00000 |****                              2889.19650
#                  4   2910.00000 |********                          2922.18850
#                  4   2940.00000 |********                          2962.15650
#                  1   2970.00000 |**                                2996.39650
#                  2   3000.00000 |****                              3018.47650
#                  1   3030.00000 |**                                3038.89250
#                  1   3060.00000 |**                                3074.98850
#
#                 10        > 95% |********************              3149.75330
#
#        mean of 95%   2579.47928
#          95th %ile   3078.95650
 for      1.27475 seconds
Running:         c_lockf_200# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_200  200   1  59545.89550          195        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  56222.37550             56222.37550
#                    max  78031.39950             64358.43950
#                   mean  60077.81724             59752.94961
#                 median  59647.91150             59545.89550
#                 stddev   2462.86557              1605.32550
#         standard error    173.28662               114.95975
#   99% confidence level    403.06467               267.39637
#                   skew      3.04736                 0.69117
#               kurtosis     15.72781                 0.44441
#       time correlation     -0.54512                 2.31678
#
#           elasped time     36.27589
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  56100.00000 |*                                56222.37550
#                  3  56400.00000 |*****                            56632.57283
#                  2  56700.00000 |***                              56877.86350
#                  0  57000.00000 |                                           -
#                  4  57300.00000 |*******                          57528.10350
#                  6  57600.00000 |**********                       57743.35683
#                 12  57900.00000 |*********************            58024.60483
#                 12  58200.00000 |*********************            58309.11683
#                 18  58500.00000 |******************************** 58622.90883
#                 14  58800.00000 |************************         58968.36864
#                 14  59100.00000 |************************         59258.41664
#                 16  59400.00000 |****************************     59520.42350
#                 17  59700.00000 |******************************   59830.58256
#                 18  60000.00000 |******************************** 60158.68839
#                 13  60300.00000 |***********************          60433.24073
#                  9  60600.00000 |****************                 60738.41461
#                  7  60900.00000 |************                     61042.43493
#                  5  61200.00000 |********                         61378.65070
#                  3  61500.00000 |*****                            61728.67950
#                  1  61800.00000 |*                                62002.47150
#                  3  62100.00000 |*****                            62237.86350
#                  3  62400.00000 |*****                            62526.24750
#                  4  62700.00000 |*******                          62798.11950
#
#                 10        > 95% |*****************                63754.02350
#
#        mean of 95%  59536.67535
#          95th %ile  63021.86350
 for     36.36698 seconds
 
Running:             c_flock# bin/cascade_flock -E -C 200 -L -S -W -N c_flock -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock        1   1      9.11928          172        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      8.62904                 8.62904
#                    max     21.13847                10.26872
#                   mean      9.82774                 9.21711
#                 median      9.21912                 9.11928
#                 stddev      1.94511                 0.36847
#         standard error      0.13686                 0.02810
#   99% confidence level      0.31833                 0.06535
#                   skew      3.83764                 0.90179
#               kurtosis     16.34975                 0.32046
#       time correlation      0.00614                -0.00023
#
#           elasped time      0.40356
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          145
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 55      8.00000 |****************                     8.85937
#                108      9.00000 |********************************     9.32224
#
#                  9        > 95% |**                                  10.14185
#
#        mean of 95%      9.16605
#          95th %ile      9.98840
 for      0.43040 seconds
Running:          c_flock_10# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_10 -P 10 -I 6250 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock_10    10   1     36.75200          195        0       16 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     28.38400                28.38400
#                    max     78.56000                56.06400
#                   mean     38.95026                38.03159
#                 median     37.00800                36.75200
#                 stddev      7.75070                 6.02005
#         standard error      0.54534                 0.43110
#   99% confidence level      1.26846                 1.00275
#                   skew      1.64050                 0.73591
#               kurtosis      4.00048                -0.18902
#       time correlation     -0.03759                -0.02318
#
#           elasped time      0.29214
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     28.00000 |*****                               28.59600
#                  4     29.00000 |*****                               29.64400
#                  5     30.00000 |******                              30.43520
#                 13     31.00000 |******************                  31.36738
#                 12     32.00000 |****************                    32.51467
#                 23     33.00000 |********************************    33.48104
#                 16     34.00000 |**********************              34.52400
#                 12     35.00000 |****************                    35.54133
#                 12     36.00000 |****************                    36.49333
#                 12     37.00000 |****************                    37.23867
#                 13     38.00000 |******************                  38.49846
#                  5     39.00000 |******                              39.69280
#                  7     40.00000 |*********                           40.60114
#                  8     41.00000 |***********                         41.41400
#                  9     42.00000 |************                        42.39467
#                  3     43.00000 |****                                43.16267
#                  6     44.00000 |********                            44.52800
#                  5     45.00000 |******                              45.44640
#                  6     46.00000 |********                            46.44800
#                  6     47.00000 |********                            47.53600
#                  4     48.00000 |*****                               48.72000
#
#                 10        > 95% |*************                       52.06560
#
#        mean of 95%     37.27299
#          95th %ile     49.55200
 for      0.30670 seconds
Running:         c_flock_200# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock_200  200   1   9513.08800          198        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7831.04000              7831.04000
#                    max  15618.94400             12264.57600
#                   mean   9766.55271              9679.83709
#                 median   9531.52000              9513.08800
#                 stddev   1093.15776               904.63824
#         standard error     76.91431                64.28984
#   99% confidence level    178.90269               149.53817
#                   skew      1.61582                 0.68873
#               kurtosis      4.61976                 0.02304
#       time correlation      0.26384                 0.19589
#
#           elasped time     16.16950
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7800.00000 |*                                 7831.04000
#                  0   8000.00000 |                                           -
#                  7   8200.00000 |*******                           8329.80114
#                 11   8400.00000 |***********                       8508.17164
#                 17   8600.00000 |*****************                 8704.83576
#                 12   8800.00000 |************                      8930.99733
#                 18   9000.00000 |******************                9118.12267
#                 15   9200.00000 |***************                   9315.40480
#                 31   9400.00000 |********************************  9494.82942
#                 10   9600.00000 |**********                        9701.61920
#                 13   9800.00000 |*************                     9901.84369
#                 13  10000.00000 |*************                    10073.89538
#                 12  10200.00000 |************                     10328.05333
#                  6  10400.00000 |******                           10528.02133
#                 10  10600.00000 |**********                       10706.13760
#                  3  10800.00000 |***                              10894.50667
#                  3  11000.00000 |***                              11114.79467
#                  4  11200.00000 |****                             11293.37600
#                  2  11400.00000 |**                               11439.48800
#
#                 10        > 95% |**********                       11857.97120
#
#        mean of 95%   9563.97889
#          95th %ile  11532.92800
 for     16.23910 seconds
 
Running:           c_fcntl_1# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_1 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_1      1   1     90.86823          185        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     88.88935                88.88935
#                    max    124.38887                97.32711
#                   mean     92.82486                91.51174
#                 median     91.02951                90.86823
#                 stddev      5.34465                 1.95378
#         standard error      0.37605                 0.14365
#   99% confidence level      0.87469                 0.33412
#                   skew      3.57258                 1.22848
#               kurtosis     14.80752                 0.66126
#       time correlation     -0.00478                -0.00288
#
#           elasped time      1.88643
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     88.00000 |*                                   88.93415
#                 34     89.00000 |*****************                   89.68265
#                 64     90.00000 |********************************    90.46231
#                 38     91.00000 |*******************                 91.46572
#                  9     92.00000 |****                                92.49611
#                 10     93.00000 |*****                               93.43617
#                 11     94.00000 |*****                               94.38707
#                  7     95.00000 |***                                 95.26960
#
#                 10        > 95% |*****                               96.53377
#
#        mean of 95%     91.22477
#          95th %ile     95.55815
 for      1.91405 seconds
Running:          c_fcntl_10# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_10 -P 10 -I 20000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_10    10   1   2118.82667          197        0        5 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1946.83733              1946.83733
#                    max   2499.49867              2386.51733
#                   mean   2133.30376              2125.69318
#                 median   2119.33867              2118.82667
#                 stddev     98.97477                87.52824
#         standard error      6.96384                 6.23613
#   99% confidence level     16.19789                14.50524
#                   skew      0.97588                 0.64105
#               kurtosis      1.08322                 0.20180
#       time correlation     -0.07535                 0.08071
#
#           elasped time      2.78283
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1940.00000 |**                                1950.16533
#                  2   1960.00000 |**                                1975.68000
#                  4   1980.00000 |*****                             1992.29867
#                 10   2000.00000 |*************                     2009.01120
#                 14   2020.00000 |*******************               2029.95810
#                 15   2040.00000 |********************              2049.62133
#                 16   2060.00000 |**********************            2070.35200
#                 18   2080.00000 |*************************         2089.69956
#                 23   2100.00000 |********************************  2111.17264
#                 23   2120.00000 |********************************  2131.15177
#                 10   2140.00000 |*************                     2154.48747
#                 14   2160.00000 |*******************               2167.05524
#                 11   2180.00000 |***************                   2187.46182
#                  6   2200.00000 |********                          2210.81600
#                  8   2220.00000 |***********                       2227.81333
#                  3   2240.00000 |****                              2246.51378
#                  3   2260.00000 |****                              2267.33511
#                  5   2280.00000 |******                            2286.49813
#
#                 10        > 95% |*************                     2336.59733
#
#        mean of 95%   2114.41489
#          95th %ile   2302.67733
 for      2.79744 seconds
Running:         c_fcntl_200# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_200  200   1  68201.89400          199        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  63706.91800             63706.91800
#                    max  77375.39800             73453.47800
#                   mean  68550.35055             68451.19555
#                 median  68214.82200             68201.89400
#                 stddev   1863.58969              1679.51128
#         standard error    131.12171               119.05740
#   99% confidence level    304.98910               276.92751
#                   skew      1.18875                 0.74770
#               kurtosis      2.42407                 0.52717
#       time correlation     -0.52971                -1.32721
#
#           elasped time     39.50907
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          180
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  63600.00000 |*                                63706.91800
#                  0  63900.00000 |                                           -
#                  0  64200.00000 |                                           -
#                  0  64500.00000 |                                           -
#                  0  64800.00000 |                                           -
#                  0  65100.00000 |                                           -
#                  1  65400.00000 |*                                65616.93400
#                  5  65700.00000 |*******                          65936.90840
#                  4  66000.00000 |******                           66116.07000
#                  8  66300.00000 |************                     66490.83800
#                 11  66600.00000 |****************                 66786.83073
#                 17  66900.00000 |*************************        67005.44035
#                 11  67200.00000 |****************                 67304.03218
#                 19  67500.00000 |****************************     67641.86705
#                 18  67800.00000 |***************************      67960.89844
#                 21  68100.00000 |******************************** 68251.67990
#                 12  68400.00000 |******************               68529.88333
#                 11  68700.00000 |****************                 68857.02127
#                 10  69000.00000 |***************                  69223.71800
#                  7  69300.00000 |**********                       69447.60829
#                  7  69600.00000 |**********                       69741.64257
#                  7  69900.00000 |**********                       70058.51571
#                  7  70200.00000 |**********                       70272.80600
#                  2  70500.00000 |***                              70653.22200
#                  2  70800.00000 |***                              70962.21400
#                  3  71100.00000 |****                             71258.61933
#                  3  71400.00000 |****                             71506.76867
#                  2  71700.00000 |***                              71815.46200
#
#                 10        > 95% |***************                  72669.46520
#
#        mean of 95%  68228.00668
#          95th %ile  71921.31800
 for     39.53377 seconds
 
Running:           file_lock# bin/file_lock -E -C 200 -L -S -W -N file_lock -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
file_lock      1   1     47.33339          181        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     45.21883                45.21883
#                    max     61.90364                51.03899
#                   mean     48.32418                47.59579
#                 median     47.40892                47.33339
#                 stddev      2.57969                 1.17457
#         standard error      0.18151                 0.08731
#   99% confidence level      0.42218                 0.20307
#                   skew      2.41957                 1.01096
#               kurtosis      6.70471                 0.61836
#       time correlation     -0.00875                -0.00421
#
#           elasped time      1.95798
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     45.00000 |**                                  45.67643
#                 53     46.00000 |**********************              46.61302
#                 76     47.00000 |********************************    47.42842
#                 18     48.00000 |*******                             48.33620
#                 18     49.00000 |*******                             49.43814
#
#                 10        > 95% |****                                50.57909
#
#        mean of 95%     47.42133
#          95th %ile     50.18907
 for      1.98737 seconds
 
Running:         getsockname# bin/getsockname -E -C 200 -L -S -W -N getsockname -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getsockname    1   1     26.73878          196        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     25.76982                25.76982
#                    max     36.97264                29.68765
#                   mean     27.18211                27.00912
#                 median     26.76592                26.73878
#                 stddev      1.43282                 0.90966
#         standard error      0.10081                 0.06498
#   99% confidence level      0.23449                 0.15113
#                   skew      3.60192                 1.32597
#               kurtosis     18.43271                 1.04827
#       time correlation     -0.00452                -0.00403
#
#           elasped time      5.49741
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7     25.00000 |*                                   25.89929
#                126     26.00000 |********************************    26.54089
#                 36     27.00000 |*********                           27.41374
#                 14     28.00000 |***                                 28.57760
#                  3     29.00000 |*                                   29.05780
#
#                 10        > 95% |**                                  29.41862
#
#        mean of 95%     26.87958
#          95th %ile     29.15798
 for      5.52862 seconds
Running:         getpeername# bin/getpeername -E -C 200 -L -S -W -N getpeername -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getpeername    1   1     25.95302          186        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     25.30586                25.30586
#                    max     37.99885                27.49824
#                   mean     26.33708                26.05299
#                 median     26.01190                25.95302
#                 stddev      1.25755                 0.48753
#         standard error      0.08848                 0.03575
#   99% confidence level      0.20581                 0.08315
#                   skew      4.88280                 0.86285
#               kurtosis     36.45284                 0.32095
#       time correlation      0.00014                 0.00039
#
#           elasped time      5.32687
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 99     25.00000 |********************************    25.69582
#                 77     26.00000 |************************            26.35248
#
#                 10        > 95% |***                                 27.28282
#
#        mean of 95%     25.98311
#          95th %ile     26.97907
 for      5.36331 seconds
 
Running:           chdir_tmp# bin/chdir -E -C 200 -L -S -W -N chdir_tmp -I 1000 /tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.296104/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_tmp      1   1    141.80600          176        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    138.25784               138.25784
#                    max    200.65784               150.69688
#                   mean    145.20835               142.52078
#                 median    142.36664               141.80600
#                 stddev      8.72576                 2.76215
#         standard error      0.61394                 0.20820
#   99% confidence level      1.42803                 0.48428
#                   skew      3.40264                 0.89364
#               kurtosis     14.86676                 0.01446
#       time correlation     -0.02485                -0.01195
#
#           elasped time      2.93902
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          264
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    138.00000 |******                             138.63416
#                 23    139.00000 |*********************              139.65515
#                 34    140.00000 |********************************   140.50710
#                 30    141.00000 |****************************       141.49675
#                 20    142.00000 |******************                 142.50514
#                 21    143.00000 |*******************                143.52388
#                 10    144.00000 |*********                          144.46123
#                  5    145.00000 |****                               145.54616
#                  6    146.00000 |*****                              146.30008
#                 11    147.00000 |**********                         147.60952
#
#                  9        > 95% |********                           149.00586
#
#        mean of 95%    142.17128
#          95th %ile    147.88600
 for      2.96583 seconds
Running:           chdir_usr# bin/chdir -E -C 200 -L -S -W -N chdir_usr -I 1000 /var/tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.296104/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_usr      1   1    251.86552          191        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    242.57784               242.57784
#                    max    359.27800               286.33848
#                   mean    258.31984               255.46706
#                 median    252.29816               251.86552
#                 stddev     16.42959                10.46081
#         standard error      1.15598                 0.75692
#   99% confidence level      2.68881                 1.76059
#                   skew      2.58800                 1.24391
#               kurtosis      9.58049                 0.53655
#       time correlation      0.01467                 0.00443
#
#           elasped time      5.22382
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          264
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    242.00000 |**                                 242.98744
#                 21    244.00000 |*************************          245.10298
#                 22    246.00000 |***************************        246.78799
#                 26    248.00000 |********************************   249.01910
#                 26    250.00000 |********************************   250.98685
#                 17    252.00000 |********************               252.77808
#                 18    254.00000 |**********************             254.84479
#                  9    256.00000 |***********                        256.87345
#                  4    258.00000 |****                               258.79480
#                  4    260.00000 |****                               260.62520
#                  6    262.00000 |*******                            262.72248
#                  3    264.00000 |***                                265.26115
#                  5    266.00000 |******                             267.13131
#                  3    268.00000 |***                                269.10371
#                  3    270.00000 |***                                270.99384
#                  2    272.00000 |**                                 273.29784
#                  2    274.00000 |**                                 274.04280
#                  7    276.00000 |********                           277.26109
#                  1    278.00000 |*                                  278.05688
#
#                 10        > 95% |************                       281.59736
#
#        mean of 95%    254.02340
#          95th %ile    278.59704
 for      5.24721 seconds
 
Running:         chgetwd_tmp# bin/chdir -E -C 200 -L -S -W -N chgetwd_tmp -I 1500 -g /tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.296104/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_tmp    1   1    157.43782          178        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    152.36048               152.36048
#                    max    356.34594               169.75297
#                   mean    164.01617               158.71976
#                 median    158.02739               157.43782
#                 stddev     20.18978                 3.91386
#         standard error      1.42055                 0.29336
#   99% confidence level      3.30420                 0.68235
#                   skew      5.70110                 1.11627
#               kurtosis     43.24283                 0.38679
#       time correlation     -0.02547                -0.00899
#
#           elasped time      2.19139
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          144
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    152.00000 |*                                  152.36048
#                  2    153.00000 |**                                 153.56679
#                 19    154.00000 |********************               154.46585
#                 20    155.00000 |*********************              155.58764
#                 30    156.00000 |********************************   156.52889
#                 29    157.00000 |******************************     157.40719
#                 25    158.00000 |**************************         158.51488
#                  6    159.00000 |******                             159.42440
#                  4    160.00000 |****                               160.30812
#                  5    161.00000 |*****                              161.46943
#                  6    162.00000 |******                             162.29147
#                  9    163.00000 |*********                          163.36978
#                  2    164.00000 |**                                 164.50691
#                  5    165.00000 |*****                              165.38545
#                  4    166.00000 |****                               166.64121
#                  2    167.00000 |**                                 167.19491
#
#                  9        > 95% |*********                          168.48590
#
#        mean of 95%    158.19967
#          95th %ile    167.28606
 for      2.20519 seconds
Running:         chgetwd_usr# bin/chdir -E -C 200 -L -S -W -N chgetwd_usr -I 1500 -g /var/tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.296104/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_usr    1   1    267.45168          171        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    259.28295               259.28295
#                    max    540.55714               291.55835
#                   mean    278.51183               269.24028
#                 median    268.73944               267.45168
#                 stddev     30.98371                 7.53584
#         standard error      2.18001                 0.57628
#   99% confidence level      5.07070                 1.34043
#                   skew      5.05971                 1.02081
#               kurtosis     34.14627                 0.33955
#       time correlation     -0.02232                -0.01573
#
#           elasped time      3.71894
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    259.00000 |**************                     259.62872
#                  9    260.00000 |******************                 260.41685
#                  8    261.00000 |****************                   261.60344
#                  8    262.00000 |****************                   262.47132
#                 13    263.00000 |**************************         263.38850
#                 13    264.00000 |**************************         264.59481
#                 15    265.00000 |******************************     265.46781
#                  7    266.00000 |**************                     266.50193
#                 16    267.00000 |********************************   267.56271
#                  8    268.00000 |****************                   268.61920
#                  6    269.00000 |************                       269.34582
#                  8    270.00000 |****************                   270.49895
#                 10    271.00000 |********************               271.45343
#                  2    272.00000 |****                               272.60465
#                  3    273.00000 |******                             273.35649
#                  2    274.00000 |****                               274.39083
#                  4    275.00000 |********                           275.35859
#                  4    276.00000 |********                           276.49798
#                  2    277.00000 |****                               277.71689
#                  2    278.00000 |****                               278.44223
#                  2    279.00000 |****                               279.82502
#                  5    280.00000 |**********                         280.42080
#                  2    281.00000 |****                               281.57241
#                  2    282.00000 |****                               282.34623
#                  4    283.00000 |********                           283.75520
#
#                  9        > 95% |******************                 288.00538
#
#        mean of 95%    268.19777
#          95th %ile    284.24295
 for      3.73235 seconds
 
Running:        realpath_tmp# bin/realpath -E -C 200 -L -S -W -N realpath_tmp -I 3000 -f /tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 
             prc thr   usecs/call      samples   errors cnt/samp 
realpath_tmp   1   1    531.39082          175        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    518.45118               518.45118
#                    max   1074.72367               568.96852
#                   mean    548.18793               534.04972
#                 median    534.36197               531.39082
#                 stddev     51.63608                11.79641
#         standard error      3.63310                 0.89172
#   99% confidence level      8.45059                 2.07415
#                   skew      6.24917                 1.06595
#               kurtosis     54.30886                 0.51562
#       time correlation      0.03440                -0.00679
#
#           elasped time      3.66066
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          103
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    518.00000 |********                           519.18557
#                 11    520.00000 |***************                    521.16281
#                 23    522.00000 |********************************   523.19882
#                 18    524.00000 |*************************          525.15028
#                  9    526.00000 |************                       526.93883
#                  9    528.00000 |************                       529.31265
#                 15    530.00000 |********************               530.95019
#                  9    532.00000 |************                       532.89320
#                 18    534.00000 |*************************          535.06920
#                  8    536.00000 |***********                        536.70767
#                  7    538.00000 |*********                          538.43913
#                  7    540.00000 |*********                          541.04568
#                  4    542.00000 |*****                              542.80803
#                  3    544.00000 |****                               545.32084
#                  4    546.00000 |*****                              547.44124
#                  1    548.00000 |*                                  549.48148
#                  5    550.00000 |******                             550.96628
#                  4    552.00000 |*****                              552.79397
#                  2    554.00000 |**                                 555.28415
#                  3    556.00000 |****                               557.22096
#
#                  9        > 95% |************                       564.66478
#
#        mean of 95%    532.38986
#          95th %ile    559.30258
 for      3.69172 seconds
Running:        realpath_usr# bin/realpath -E -C 200 -L -S -W -N realpath_usr -I 3000 -f /var/tmp/libmicro.296104/0/1/2/3/4/5/6/7/8/9 
             prc thr   usecs/call      samples   errors cnt/samp 
realpath_usr   1   1    588.11733          198        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    566.81503               566.81503
#                    max    709.18206               665.48364
#                   mean    597.73972               595.84176
#                 median    588.60606               588.11733
#                 stddev     27.20054                23.86368
#         standard error      1.91382                 1.69592
#   99% confidence level      4.45155                 3.94470
#                   skew      1.78048                 1.64090
#               kurtosis      2.52065                 1.70097
#       time correlation     -0.10024                -0.07797
#
#           elasped time      3.99001
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    564.00000 |*                                  566.81503
#                  0    567.00000 |                                           -
#                  6    570.00000 |********                           572.35911
#                 15    573.00000 |********************               574.95686
#                 14    576.00000 |******************                 577.42684
#                 24    579.00000 |********************************   580.86465
#                 21    582.00000 |****************************       583.25555
#                 18    585.00000 |************************           586.49686
#                 18    588.00000 |************************           589.41888
#                 14    591.00000 |******************                 592.43055
#                 11    594.00000 |**************                     595.35304
#                  8    597.00000 |**********                         598.31564
#                  7    600.00000 |*********                          600.76772
#                  3    603.00000 |****                               605.11160
#                  3    606.00000 |****                               608.43184
#                  5    609.00000 |******                             610.14575
#                  1    612.00000 |*                                  614.08970
#                  2    615.00000 |**                                 616.51394
#                  1    618.00000 |*                                  619.15539
#                  0    621.00000 |                                           -
#                  1    624.00000 |*                                  626.02861
#                  2    627.00000 |**                                 629.22473
#                  0    630.00000 |                                           -
#                  0    633.00000 |                                           -
#                  2    636.00000 |**                                 637.28485
#                  2    639.00000 |**                                 641.10933
#                  1    642.00000 |*                                  643.06424
#                  0    645.00000 |                                           -
#                  1    648.00000 |*                                  649.00655
#                  4    651.00000 |*****                              652.74376
#                  3    654.00000 |****                               655.10141
#
#                 10        > 95% |*************                      660.97105
#
#        mean of 95%    592.37744
#          95th %ile    655.91079
 for      4.00391 seconds
 
Running:            stat_tmp# bin/stat -E -C 200 -L -S -W -N stat_tmp -I 500 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
stat_tmp       1   1    163.19411          191        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    157.39955               157.39955
#                    max    248.66483               185.39955
#                   mean    168.27848               165.96901
#                 median    163.47315               163.19411
#                 stddev     12.93867                 7.34663
#         standard error      0.91036                 0.53158
#   99% confidence level      2.11750                 1.23646
#                   skew      3.15627                 1.06048
#               kurtosis     14.00097                -0.03067
#       time correlation      0.00059                -0.01464
#
#           elasped time      6.80523
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    157.00000 |****                               157.65897
#                 14    158.00000 |********************               158.48637
#                 22    159.00000 |********************************   159.45622
#                 19    160.00000 |***************************        160.54472
#                 18    161.00000 |**************************         161.46227
#                 17    162.00000 |************************           162.57271
#                 16    163.00000 |***********************            163.50324
#                 12    164.00000 |*****************                  164.51251
#                  5    165.00000 |*******                            165.27514
#                  6    166.00000 |********                           166.47689
#                  4    167.00000 |*****                              167.29396
#                  2    168.00000 |**                                 168.60852
#                  2    169.00000 |**                                 169.29140
#                  3    170.00000 |****                               170.24222
#                  3    171.00000 |****                               171.70100
#                  8    172.00000 |***********                        172.35299
#                  2    173.00000 |**                                 173.59668
#                  4    174.00000 |*****                              174.52532
#                  4    175.00000 |*****                              175.53427
#                  6    176.00000 |********                           176.45619
#                  2    177.00000 |**                                 177.54163
#                  4    178.00000 |*****                              178.22932
#                  0    179.00000 |                                           -
#                  3    180.00000 |****                               180.36105
#                  2    181.00000 |**                                 181.30867
#
#                 10        > 95% |**************                     183.69127
#
#        mean of 95%    164.98988
#          95th %ile    182.02420
 for      6.83748 seconds
Running:            stat_usr# bin/stat -E -C 200 -L -S -W -N stat_usr -I 500 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
stat_usr       1   1    184.05891          189        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    178.07875               178.07875
#                    max    273.33891               213.09315
#                   mean    190.27306               187.17290
#                 median    184.81795               184.05891
#                 stddev     15.37030                 8.71043
#         standard error      1.08145                 0.63359
#   99% confidence level      2.51545                 1.47373
#                   skew      2.71617                 1.39521
#               kurtosis      9.26130                 0.94979
#       time correlation     -0.02757                -0.02834
#
#           elasped time      7.69251
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          250
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 30    178.00000 |**************************         179.01558
#                 28    180.00000 |************************           181.18490
#                 36    182.00000 |********************************   182.97052
#                 28    184.00000 |************************           185.10275
#                 13    186.00000 |***********                        186.72269
#                 11    188.00000 |*********                          188.87892
#                  4    190.00000 |***                                190.84739
#                  2    192.00000 |*                                  192.82627
#                  5    194.00000 |****                               195.18467
#                  5    196.00000 |****                               197.03325
#                  2    198.00000 |*                                  198.99651
#                  6    200.00000 |*****                              201.30542
#                  5    202.00000 |****                               203.03491
#                  2    204.00000 |*                                  204.53059
#                  2    206.00000 |*                                  206.62915
#
#                 10        > 95% |********                           210.37033
#
#        mean of 95%    185.87695
#          95th %ile    208.54403
 for      7.70677 seconds
 
Running:           fcntl_tmp# bin/fcntl -E -C 200 -L -S -W -N fcntl_tmp -I 100 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_tmp      1   1      0.84975          178        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.80879                 0.80879
#                    max      1.59983                 0.96086
#                   mean      0.89321                 0.86166
#                 median      0.85180                 0.84975
#                 stddev      0.10392                 0.03328
#         standard error      0.00731                 0.00249
#   99% confidence level      0.01701                 0.00580
#                   skew      3.21270                 1.41042
#               kurtosis     13.01049                 0.98241
#       time correlation     -0.00022                -0.00002
#
#           elasped time      0.18485
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      0.00000 |********************************     0.85711
#
#                  9        > 95% |*                                    0.94709
#
#        mean of 95%      0.85711
#          95th %ile      0.93705
 for      0.21109 seconds
Running:           fcntl_usr# bin/fcntl -E -C 200 -L -S -W -N fcntl_usr -I 100 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_usr      1   1      0.84184          160        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.79090                 0.79090
#                    max      1.61599                 0.95192
#                   mean      0.91542                 0.84906
#                 median      0.85004                 0.84184
#                 stddev      0.15384                 0.03603
#         standard error      0.01082                 0.00285
#   99% confidence level      0.02518                 0.00662
#                   skew      2.27974                 1.09599
#               kurtosis      5.28422                 0.70380
#       time correlation     -0.00054                 0.00006
#
#           elasped time      0.18853
#      number of samples          160
#     number of outliers           42
#      getnsecs overhead          140
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                152      0.00000 |********************************     0.84424
#
#                  8        > 95% |*                                    0.94069
#
#        mean of 95%      0.84424
#          95th %ile      0.92581
 for      0.20060 seconds
Running:        fcntl_ndelay# bin/fcntl_ndelay -E -C 200 -L -S -W -N fcntl_ndelay -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_ndelay   1   1      0.95386          196        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.88909                 0.88909
#                    max      1.46893                 1.31789
#                   mean      1.00986                 0.99752
#                 median      0.95590                 0.95386
#                 stddev      0.12714                 0.10706
#         standard error      0.00895                 0.00765
#   99% confidence level      0.02081                 0.01779
#                   skew      1.66373                 1.53729
#               kurtosis      2.01066                 1.40617
#       time correlation     -0.00018                -0.00014
#
#           elasped time      0.20898
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                136      0.00000 |********************************     0.93791
#                 50      1.00000 |***********                          1.10048
#
#                 10        > 95% |**                                   1.29341
#
#        mean of 95%      0.98162
#          95th %ile      1.26797
 for      0.23623 seconds
 
Running:           lseek_t8k# bin/lseek -E -C 200 -L -S -W -N lseek_t8k -s 8k -I 50 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_t8k      1   1      0.76050          175        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.71096                 0.71096
#                    max      1.31551                 0.85483
#                   mean      0.79309                 0.76645
#                 median      0.76741                 0.76050
#                 stddev      0.08281                 0.03008
#         standard error      0.00583                 0.00227
#   99% confidence level      0.01355                 0.00529
#                   skew      2.84077                 0.80799
#               kurtosis     10.44596                 0.22635
#       time correlation     -0.00036                -0.00010
#
#           elasped time      0.32579
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                166      0.00000 |********************************     0.76238
#
#                  9        > 95% |*                                    0.84152
#
#        mean of 95%      0.76238
#          95th %ile      0.82642
 for      0.35083 seconds
Running:           lseek_u8k# bin/lseek -E -C 200 -L -S -W -N lseek_u8k -s 8k -I 50 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_u8k      1   1      0.78286          195        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.71131                 0.71131
#                    max      1.23790                 0.94836
#                   mean      0.81178                 0.80197
#                 median      0.78695                 0.78286
#                 stddev      0.07345                 0.04928
#         standard error      0.00517                 0.00353
#   99% confidence level      0.01202                 0.00821
#                   skew      2.64133                 0.95838
#               kurtosis     10.15594                 0.33241
#       time correlation     -0.00022                -0.00013
#
#           elasped time      0.33212
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.79525
#
#                 10        > 95% |*                                    0.92615
#
#        mean of 95%      0.79525
#          95th %ile      0.90843
 for      0.34650 seconds
 
Running:            open_tmp# bin/open -E -C 200 -L -S -W -N open_tmp -B 256 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
open_tmp       1   1    171.79232          186        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    165.21432               165.21432
#                    max    263.51032               190.13932
#                   mean    176.50470               173.32577
#                 median    172.48832               171.79232
#                 stddev     13.62474                 5.90999
#         standard error      0.95863                 0.43334
#   99% confidence level      2.22978                 1.00795
#                   skew      3.36381                 1.10671
#               kurtosis     14.09929                 0.57011
#       time correlation     -0.05974                -0.02289
#
#           elasped time      9.31740
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    165.00000 |*********                          165.56790
#                  8    166.00000 |***********                        166.52007
#                 14    167.00000 |*******************                167.56597
#                 17    168.00000 |***********************            168.52491
#                 12    169.00000 |****************                   169.35016
#                 20    170.00000 |***************************        170.54537
#                 16    171.00000 |**********************             171.31695
#                 23    172.00000 |********************************   172.57150
#                 11    173.00000 |***************                    173.57214
#                  7    174.00000 |*********                          174.45975
#                  5    175.00000 |******                             175.32832
#                  5    176.00000 |******                             176.41192
#                  3    177.00000 |****                               177.72732
#                  6    178.00000 |********                           178.45566
#                  2    179.00000 |**                                 179.75682
#                  6    180.00000 |********                           180.38899
#                  5    181.00000 |******                             181.40512
#                  3    182.00000 |****                               182.47699
#                  2    183.00000 |**                                 183.22432
#                  2    184.00000 |**                                 184.32532
#                  2    185.00000 |**                                 185.63382
#
#                 10        > 95% |*************                      188.74852
#
#        mean of 95%    172.44948
#          95th %ile    187.37832
 for      9.34341 seconds
Running:            open_usr# bin/open -E -C 200 -L -S -W -N open_usr -B 256 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp 
open_usr       1   1    190.48332          182        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    179.81932               179.81932
#                    max    262.78032               201.37032
#                   mean    192.99740               190.58613
#                 median    190.99632               190.48332
#                 stddev      9.20008                 3.87679
#         standard error      0.64732                 0.28737
#   99% confidence level      1.50566                 0.66842
#                   skew      3.41860                 0.16396
#               kurtosis     17.94123                 0.10044
#       time correlation     -0.01366                -0.00002
#
#           elasped time     10.16485
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    179.00000 |*                                  179.81932
#                  1    180.00000 |*                                  180.30732
#                  0    181.00000 |                                           -
#                  2    182.00000 |**                                 182.75532
#                  3    183.00000 |****                               183.73366
#                  5    184.00000 |******                             184.52592
#                  7    185.00000 |*********                          185.55732
#                 12    186.00000 |****************                   186.42699
#                 14    187.00000 |*******************                187.44104
#                 13    188.00000 |******************                 188.45763
#                 23    189.00000 |********************************   189.50315
#                 21    190.00000 |*****************************      190.48699
#                 22    191.00000 |******************************     191.42810
#                 17    192.00000 |***********************            192.51509
#                  7    193.00000 |*********                          193.50804
#                 12    194.00000 |****************                   194.67907
#                  5    195.00000 |******                             195.34772
#                  4    196.00000 |*****                              196.57732
#                  3    197.00000 |****                               197.26499
#
#                 10        > 95% |*************                      198.85362
#
#        mean of 95%    190.10546
#          95th %ile    197.50332
 for     10.17753 seconds
Running:           open_zero# bin/open -E -C 200 -L -S -W -N open_zero -B 256 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp 
open_zero      1   1     89.48027          197        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     84.72127                84.72127
#                    max    105.66727                99.71027
#                   mean     90.52762                90.22853
#                 median     89.56127                89.48027
#                 stddev      3.69031                 3.20241
#         standard error      0.25965                 0.22816
#   99% confidence level      0.60394                 0.53070
#                   skew      1.27618                 0.92870
#               kurtosis      1.60745                 0.27548
#       time correlation     -0.00568                -0.00412
#
#           elasped time      4.86845
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          187
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     84.00000 |*                                   84.72127
#                  4     85.00000 |***                                 85.78427
#                 22     86.00000 |*******************                 86.55354
#                 22     87.00000 |*******************                 87.51781
#                 37     88.00000 |********************************    88.44481
#                 30     89.00000 |*************************           89.54897
#                 15     90.00000 |************                        90.46247
#                 19     91.00000 |****************                    91.54448
#                 12     92.00000 |**********                          92.49285
#                  7     93.00000 |******                              93.48441
#                  7     94.00000 |******                              94.48598
#                  5     95.00000 |****                                95.33767
#                  6     96.00000 |*****                               96.29994
#
#                 10        > 95% |********                            98.21877
#
#        mean of 95%     89.80124
#          95th %ile     96.97627
 for      4.87866 seconds
 
Running:                 dup# bin/dup -E -C 200 -L -S -W -N dup -B 1024 
             prc thr   usecs/call      samples   errors cnt/samp 
dup            1   1      1.18558          173        0     1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.11683                 1.11683
#                    max      2.10733                 1.33183
#                   mean      1.24641                 1.19879
#                 median      1.19508                 1.18558
#                 stddev      0.14204                 0.04490
#         standard error      0.00999                 0.00341
#   99% confidence level      0.02325                 0.00794
#                   skew      2.90868                 0.87379
#               kurtosis     10.31300                 0.21059
#       time correlation     -0.00024                -0.00014
#
#           elasped time      0.46802
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          178
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                164      1.00000 |********************************     1.19277
#
#                  9        > 95% |*                                    1.30847
#
#        mean of 95%      1.19277
#          95th %ile      1.28308
 for      0.49789 seconds
 
Running:            socket_u# bin/socket -E -C 200 -L -S -W -N socket_u -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
socket_u       1   1     15.00700          196        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.67200                13.67200
#                    max     50.83600                19.10600
#                   mean     15.80457                15.44491
#                 median     15.03900                15.00700
#                 stddev      3.05078                 1.27541
#         standard error      0.21465                 0.09110
#   99% confidence level      0.49928                 0.21190
#                   skew      8.03680                 0.95710
#               kurtosis     85.18229                 0.07193
#       time correlation      0.00258                -0.00479
#
#           elasped time      1.52827
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9     13.00000 |***                                 13.86367
#                 88     14.00000 |********************************    14.50873
#                 40     15.00000 |**************                      15.40735
#                 33     16.00000 |************                        16.46352
#                 14     17.00000 |*****                               17.45200
#                  2     18.00000 |*                                   18.01600
#
#                 10        > 95% |***                                 18.57120
#
#        mean of 95%     15.27683
#          95th %ile     18.06200
 for      1.55742 seconds
Running:            socket_i# bin/socket -E -C 200 -L -S -W -N socket_i -B 256 -f PF_INET 
             prc thr   usecs/call      samples   errors cnt/samp 
socket_i       1   1     17.05500          187        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     14.16000                14.16000
#                    max     75.02700                22.12900
#                   mean     18.60821                17.30371
#                 median     17.24600                17.05500
#                 stddev      6.55612                 1.70577
#         standard error      0.46129                 0.12474
#   99% confidence level      1.07295                 0.29014
#                   skew      5.93587                 0.71671
#               kurtosis     41.84823                 0.06692
#       time correlation      0.00677                 0.00938
#
#           elasped time      1.82871
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     14.00000 |****                                14.75233
#                 42     15.00000 |******************************      15.44307
#                 40     16.00000 |*****************************       16.56570
#                 44     17.00000 |********************************    17.43420
#                 27     18.00000 |*******************                 18.49685
#                 12     19.00000 |********                            19.42633
#                  6     20.00000 |****                                20.30517
#
#                 10        > 95% |*******                             21.45750
#
#        mean of 95%     17.06903
#          95th %ile     20.59400
 for      1.84333 seconds
 
Running:          socketpair# bin/socketpair -E -C 200 -L -S -W -N socketpair -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
socketpair     1   1     79.82694          185        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     74.60694                74.60694
#                    max    139.81894                89.26494
#                   mean     82.84786                80.29416
#                 median     80.33494                79.82694
#                 stddev      9.76210                 3.33184
#         standard error      0.68686                 0.24496
#   99% confidence level      1.59763                 0.56978
#                   skew      3.13018                 0.54337
#               kurtosis     10.67709                -0.27254
#       time correlation      0.00098                 0.00499
#
#           elasped time      2.89295
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          136
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     74.00000 |****                                74.74094
#                 12     75.00000 |****************                    75.47810
#                 15     76.00000 |********************                76.42027
#                 20     77.00000 |***************************         77.54324
#                 23     78.00000 |********************************    78.42650
#                 22     79.00000 |******************************      79.44939
#                 20     80.00000 |***************************         80.47164
#                 19     81.00000 |**************************          81.52462
#                 13     82.00000 |******************                  82.65648
#                 11     83.00000 |***************                     83.45257
#                  9     84.00000 |************                        84.53916
#                  7     85.00000 |*********                           85.49037
#                  1     86.00000 |*                                   86.42094
#
#                 10        > 95% |*************                       87.89754
#
#        mean of 95%     79.85968
#          95th %ile     86.56894
 for      2.91926 seconds
 
Running:          setsockopt# bin/setsockopt -E -C 200 -L -S -W -N setsockopt -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
setsockopt     1   1     16.65963          193        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.78974                15.78974
#                    max     22.25170                18.72555
#                   mean     17.03038                16.85873
#                 median     16.68011                16.65963
#                 stddev      1.05612                 0.67606
#         standard error      0.07431                 0.04866
#   99% confidence level      0.17284                 0.11319
#                   skew      2.35618                 0.99796
#               kurtosis      6.99697                 0.32562
#       time correlation     -0.00068                -0.00313
#
#           elasped time      1.76127
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     15.00000 |*                                   15.89662
#                128     16.00000 |********************************    16.49028
#                 46     17.00000 |***********                         17.44579
#                  5     18.00000 |*                                   18.21253
#
#                 10        > 95% |**                                  18.58245
#
#        mean of 95%     16.76454
#          95th %ile     18.41374
 for      1.78556 seconds
 
Running:                bind# bin/bind -E -C 200 -L -S -W -N bind -B 200 
             prc thr   usecs/call      samples   errors cnt/samp 
bind           1   1     33.23940          195        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.68933                31.68933
#                    max     44.74916                37.19844
#                   mean     33.74616                33.52818
#                 median     33.27396                33.23940
#                 stddev      1.76348                 1.25410
#         standard error      0.12408                 0.08981
#   99% confidence level      0.28861                 0.20889
#                   skew      2.51478                 0.85923
#               kurtosis     10.51700                 0.00882
#       time correlation      0.00265                 0.00070
#
#           elasped time     17.44212
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10     31.00000 |****                                31.88542
#                 70     32.00000 |********************************    32.49978
#                 55     33.00000 |*************************           33.39754
#                 29     34.00000 |*************                       34.45545
#                 20     35.00000 |*********                           35.30840
#                  1     36.00000 |*                                   36.06436
#
#                 10        > 95% |****                                36.58507
#
#        mean of 95%     33.36294
#          95th %ile     36.10917
 for     17.46022 seconds
 
Running:              listen# bin/listen -E -C 200 -L -S -W -N listen -B 800 
             prc thr   usecs/call      samples   errors cnt/samp 
listen         1   1      1.40230          174        0      800 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.32710                 1.32710
#                    max      2.91846                 1.61094
#                   mean      1.48254                 1.42376
#                 median      1.40710                 1.40230
#                 stddev      0.18398                 0.06633
#         standard error      0.01294                 0.00503
#   99% confidence level      0.03011                 0.01170
#                   skew      3.45476                 1.14187
#               kurtosis     18.62850                 0.35875
#       time correlation     -0.00025                -0.00005
#
#           elasped time      0.24433
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      1.00000 |********************************     1.41477
#
#                  9        > 95% |*                                    1.58854
#
#        mean of 95%      1.41477
#          95th %ile      1.56838
 for      0.27586 seconds
 
Running:          connection# bin/connection -E -C 200 -L -S -W -N connection -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
connection     1   1    332.88235          194        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    315.12835               315.12835
#                    max    375.03835               356.48335
#                   mean    333.74706               332.43160
#                 median    333.41335               332.88235
#                 stddev     10.57342                 8.45992
#         standard error      0.74394                 0.60739
#   99% confidence level      1.73041                 1.41278
#                   skew      1.12078                 0.38318
#               kurtosis      1.90502                 0.02990
#       time correlation     -0.06389                -0.06255
#
#           elasped time     25.53126
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    314.00000 |***                                315.47068
#                  5    316.00000 |******                             317.45215
#                  4    318.00000 |****                               319.47860
#                 10    320.00000 |************                       321.05535
#                 12    322.00000 |**************                     323.40735
#                 13    324.00000 |****************                   325.30497
#                 16    326.00000 |*******************                327.15354
#                 18    328.00000 |**********************             329.09446
#                  7    330.00000 |********                           331.26549
#                 25    332.00000 |******************************     333.13759
#                 26    334.00000 |********************************   334.96174
#                 11    336.00000 |*************                      337.11826
#                 13    338.00000 |****************                   338.93343
#                  8    340.00000 |*********                          340.67773
#                  3    342.00000 |***                                343.25702
#                  7    344.00000 |********                           345.10207
#                  3    346.00000 |***                                346.83768
#
#                 10        > 95% |************                       351.94215
#
#        mean of 95%    331.37125
#          95th %ile    347.22135
 for     25.55170 seconds
 
Running:             poll_10# bin/poll -E -C 200 -L -S -W -N poll_10 -n 10 -I 250 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_10        1   1     73.62705          176        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     71.40241                71.40241
#                    max     93.14449                77.22257
#                   mean     74.70671                73.68302
#                 median     73.79921                73.62705
#                 stddev      3.18413                 1.21498
#         standard error      0.22403                 0.09158
#   99% confidence level      0.52110                 0.21302
#                   skew      2.60770                 0.58293
#               kurtosis      8.52993                 0.08067
#       time correlation     -0.00607                 0.00090
#
#           elasped time      6.04354
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          188
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 13     71.00000 |*******                             71.79744
#                 46     72.00000 |**************************          72.59673
#                 56     73.00000 |********************************    73.56982
#                 36     74.00000 |********************                74.44197
#                 16     75.00000 |*********                           75.38441
#
#                  9        > 95% |*****                               76.60277
#
#        mean of 95%     73.52567
#          95th %ile     75.80689
 for      6.06932 seconds
Running:            poll_100# bin/poll -E -C 200 -L -S -W -N poll_100 -n 100 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_100       1   1    554.67895          169        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    541.98903               541.98903
#                    max    682.75831               587.24983
#                   mean    566.88952               556.62035
#                 median    556.95991               554.67895
#                 stddev     26.92770                10.26150
#         standard error      1.89463                 0.78935
#   99% confidence level      4.40690                 1.83602
#                   skew      1.95065                 1.14318
#               kurtosis      3.61289                 0.79959
#       time correlation     -0.05696                -0.02256
#
#           elasped time     11.45772
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead          137
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    540.00000 |*                                  541.98903
#                  1    542.00000 |*                                  543.20759
#                 18    544.00000 |********************************   545.20681
#                 15    546.00000 |**************************         547.05698
#                 16    548.00000 |****************************       548.95495
#                 15    550.00000 |**************************         550.77358
#                 12    552.00000 |*********************              552.98124
#                 18    554.00000 |********************************   554.92243
#                 14    556.00000 |************************           557.16124
#                 11    558.00000 |*******************                558.79799
#                 13    560.00000 |***********************            560.62819
#                  5    562.00000 |********                           562.75831
#                  2    564.00000 |***                                564.26359
#                  4    566.00000 |*******                            566.96375
#                  4    568.00000 |*******                            568.98871
#                  3    570.00000 |*****                              571.28311
#                  1    572.00000 |*                                  572.34807
#                  2    574.00000 |***                                574.57911
#                  4    576.00000 |*******                            577.07383
#                  1    578.00000 |*                                  579.52887
#
#                  9        > 95% |****************                   583.36603
#
#        mean of 95%    555.11591
#          95th %ile    579.61847
 for     11.47556 seconds
Running:           poll_1000# bin/poll -E -C 200 -L -S -W -N poll_1000 -n 1000 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_1000      1   1   5723.05070          192        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   5578.69230              5578.69230
#                    max   6879.69710              6235.79310
#                   mean   5809.97125              5774.69803
#                 median   5729.94990              5723.05070
#                 stddev    222.69999               159.01133
#         standard error     15.66912                11.47565
#   99% confidence level     36.44636                26.69237
#                   skew      1.91612                 1.28827
#               kurtosis      4.06598                 0.81474
#       time correlation     -0.44010                -0.24259
#
#           elasped time     23.47916
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   5560.00000 |*                                 5578.69230
#                  7   5580.00000 |***********                       5588.92681
#                  9   5600.00000 |**************                    5611.08199
#                 12   5620.00000 |*******************               5629.87310
#                 15   5640.00000 |************************          5650.59587
#                 16   5660.00000 |*************************         5671.32590
#                 14   5680.00000 |**********************            5691.66144
#                 20   5700.00000 |********************************  5710.22574
#                 17   5720.00000 |***************************       5731.03338
#                  8   5740.00000 |************                      5750.57390
#                 10   5760.00000 |****************                  5768.56238
#                  4   5780.00000 |******                            5788.34030
#                 11   5800.00000 |*****************                 5809.40881
#                  5   5820.00000 |********                          5827.43214
#                  3   5840.00000 |****                              5849.87310
#                  3   5860.00000 |****                              5866.85870
#                  2   5880.00000 |***                               5893.51470
#                  2   5900.00000 |***                               5915.11470
#                  4   5920.00000 |******                            5925.47630
#                  0   5940.00000 |                                           -
#                  2   5960.00000 |***                               5975.56910
#                  1   5980.00000 |*                                 5991.30030
#                  5   6000.00000 |********                          6011.78286
#                  3   6020.00000 |****                              6028.30937
#                  1   6040.00000 |*                                 6056.43950
#                  1   6060.00000 |*                                 6078.09710
#                  0   6080.00000 |                                           -
#                  3   6100.00000 |****                              6110.89497
#                  3   6120.00000 |****                              6127.30883
#
#                 10        > 95% |****************                  6187.81102
#
#        mean of 95%   5751.99952
#          95th %ile   6138.14190
 for     23.53831 seconds
 
Running:            poll_w10# bin/poll -E -C 200 -L -S -W -N poll_w10 -n 10 -I 250 -w 1 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w10       1   1     72.15956          176        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     70.44436                70.44436
#                    max     90.96980                75.27188
#                   mean     73.18901                72.26960
#                 median     72.29460                72.15956
#                 stddev      2.86180                 1.02326
#         standard error      0.20136                 0.07713
#   99% confidence level      0.46835                 0.17941
#                   skew      2.78645                 0.54808
#               kurtosis      9.96691                 0.07842
#       time correlation      0.00397                -0.00253
#
#           elasped time      5.91984
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 21     70.00000 |*********                           70.73099
#                 50     71.00000 |***********************             71.61272
#                 69     72.00000 |********************************    72.39830
#                 23     73.00000 |**********                          73.44607
#                  4     74.00000 |*                                   74.13828
#
#                  9        > 95% |****                                74.68521
#
#        mean of 95%     72.13941
#          95th %ile     74.18196
 for      5.93169 seconds
Running:           poll_w100# bin/poll -E -C 200 -L -S -W -N poll_w100 -n 100 -I 2000 -w 10 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w100      1   1    548.21516          180        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    534.37580               534.37580
#                    max    659.11948               571.43948
#                   mean    555.38273               549.10325
#                 median    549.92012               548.21516
#                 stddev     20.88722                 8.12572
#         standard error      1.46962                 0.60566
#   99% confidence level      3.41833                 1.40875
#                   skew      2.49666                 0.55998
#               kurtosis      6.84040                -0.46965
#       time correlation     -0.03359                -0.00822
#
#           elasped time      5.61543
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          186
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    534.00000 |**                                 534.69580
#                  2    536.00000 |**                                 537.39916
#                 14    538.00000 |****************                   539.02769
#                 27    540.00000 |********************************   541.09855
#                 20    542.00000 |***********************            542.86655
#                 12    544.00000 |**************                     545.08129
#                 11    546.00000 |*************                      547.02313
#                 16    548.00000 |******************                 548.98860
#                 12    550.00000 |**************                     551.04524
#                 16    552.00000 |******************                 553.22476
#                 12    554.00000 |**************                     555.10284
#                 10    556.00000 |***********                        556.74764
#                  5    558.00000 |*****                              558.86783
#                  6    560.00000 |*******                            561.08172
#                  6    562.00000 |*******                            563.26967
#
#                  9        > 95% |**********                         567.29683
#
#        mean of 95%    548.14570
#          95th %ile    564.19468
 for      5.63195 seconds
Running:          poll_w1000# bin/poll -E -C 200 -L -S -W -N poll_w1000 -n 1000 -I 20000 -w 100 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w1000     1   1   5712.96640          191        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   5488.76160              5488.76160
#                    max   7614.79040              6278.57280
#                   mean   5812.68195              5764.68617
#                 median   5730.57920              5712.96640
#                 stddev    275.22531               172.38281
#         standard error     19.36479                12.47318
#   99% confidence level     45.04249                29.01262
#                   skew      2.73365                 1.36312
#               kurtosis     10.83906                 1.31682
#       time correlation     -1.70003                -1.08810
#
#           elasped time      5.87746
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   5460.00000 |*                                 5488.76160
#                  1   5490.00000 |*                                 5512.16000
#                  2   5520.00000 |**                                5538.06720
#                  7   5550.00000 |********                          5565.79566
#                  9   5580.00000 |**********                        5594.93902
#                 20   5610.00000 |***********************           5626.52544
#                 22   5640.00000 |**************************        5655.95287
#                 27   5670.00000 |********************************  5685.98590
#                 12   5700.00000 |**************                    5714.16960
#                 23   5730.00000 |***************************       5742.50657
#                  7   5760.00000 |********                          5776.79817
#                 11   5790.00000 |*************                     5807.19767
#                  9   5820.00000 |**********                        5832.28516
#                  8   5850.00000 |*********                         5862.66240
#                  1   5880.00000 |*                                 5904.14720
#                  5   5910.00000 |*****                             5921.92384
#                  4   5940.00000 |****                              5960.22400
#                  1   5970.00000 |*                                 5981.76640
#                  2   6000.00000 |**                                6009.46560
#                  1   6030.00000 |*                                 6042.59200
#                  2   6060.00000 |**                                6073.44000
#                  0   6090.00000 |                                           -
#                  2   6120.00000 |**                                6135.54560
#                  4   6150.00000 |****                              6162.56640
#
#                 10        > 95% |***********                       6235.73888
#
#        mean of 95%   5738.66116
#          95th %ile   6196.96000
 for      5.93712 seconds
 
Running:           select_10# bin/select -E -C 200 -L -S -W -N select_10 -n 10 -I 250 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_10      1   1     32.76234          186        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.73962                31.73962
#                    max     40.73674                34.54474
#                   mean     33.13164                32.82578
#                 median     32.79690                32.76234
#                 stddev      1.29708                 0.59904
#         standard error      0.09126                 0.04392
#   99% confidence level      0.21228                 0.10217
#                   skew      2.93599                 0.72726
#               kurtosis     10.59904                 0.05720
#       time correlation     -0.00175                -0.00308
#
#           elasped time      2.68278
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9     31.00000 |**                                  31.90957
#                120     32.00000 |********************************    32.54927
#                 47     33.00000 |************                        33.41315
#
#                 10        > 95% |**                                  34.20778
#
#        mean of 95%     32.74725
#          95th %ile     34.00714
 for      2.71000 seconds
Running:          select_100# bin/select -E -C 200 -L -S -W -N select_100 -n 100 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_100     1   1     61.10801          177        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     58.69905                58.69905
#                    max    114.69905                65.06833
#                   mean     63.14619                61.36065
#                 median     61.26673                61.10801
#                 stddev      6.84985                 1.27097
#         standard error      0.48195                 0.09553
#   99% confidence level      1.12102                 0.22221
#                   skew      4.95360                 0.76108
#               kurtosis     28.07335                 0.22534
#       time correlation     -0.02133                 0.00336
#
#           elasped time      1.28009
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          175
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     58.00000 |*                                   58.69905
#                 18     59.00000 |*********                           59.68778
#                 63     60.00000 |********************************    60.53916
#                 48     61.00000 |************************            61.41500
#                 28     62.00000 |**************                      62.56648
#                 10     63.00000 |*****                               63.32599
#
#                  9        > 95% |****                                64.52760
#
#        mean of 95%     61.19100
#          95th %ile     63.74993
 for      1.30425 seconds
Running:         select_1000# bin/select -E -C 200 -L -S -W -N select_1000 -n 1000 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_1000    1   1    365.84095          175        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    350.18655               350.18655
#                    max    635.24255               391.59455
#                   mean    375.67705               367.19599
#                 median    367.13375               365.84095
#                 stddev     28.77258                 8.15004
#         standard error      2.02443                 0.61609
#   99% confidence level      4.70883                 1.43301
#                   skew      4.71334                 1.12332
#               kurtosis     33.03606                 1.39838
#       time correlation     -0.01005                 0.01488
#
#           elasped time      1.52333
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    350.00000 |*                                  350.18655
#                  1    352.00000 |*                                  352.79775
#                  7    354.00000 |*********                          355.16941
#                  6    356.00000 |********                           356.84895
#                  9    358.00000 |************                       358.84077
#                 18    360.00000 |************************           361.20593
#                 24    362.00000 |********************************   363.30495
#                 24    364.00000 |********************************   364.99775
#                 20    366.00000 |**************************         367.02559
#                 20    368.00000 |**************************         368.80095
#                 14    370.00000 |******************                 370.74518
#                  9    372.00000 |************                       372.93073
#                  2    374.00000 |**                                 374.78815
#                  2    376.00000 |**                                 377.11135
#                  0    378.00000 |                                           -
#                  4    380.00000 |*****                              380.36575
#                  1    382.00000 |*                                  382.68575
#                  3    384.00000 |****                               385.37375
#                  1    386.00000 |*                                  386.14175
#
#                  9        > 95% |************                       389.43846
#
#        mean of 95%    365.99008
#          95th %ile    386.29535
 for      1.58726 seconds
 
Running:          select_w10# bin/select -E -C 200 -L -S -W -N select_w10 -n 10 -I 250 -w 1 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w10     1   1     46.50696          180        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     45.41705                45.41705
#                    max     59.86953                48.82953
#                   mean     47.24667                46.65505
#                 median     46.59464                46.50696
#                 stddev      2.00371                 0.72760
#         standard error      0.14098                 0.05423
#   99% confidence level      0.32792                 0.12614
#                   skew      2.89477                 0.85948
#               kurtosis     10.30823                 0.06421
#       time correlation     -0.00982                -0.00096
#
#           elasped time      3.82296
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 31     45.00000 |*********                           45.82958
#                106     46.00000 |********************************    46.45603
#                 33     47.00000 |*********                           47.54475
#                  1     48.00000 |*                                   48.06153
#
#                  9        > 95% |**                                  48.42391
#
#        mean of 95%     46.56196
#          95th %ile     48.22664
 for      3.83676 seconds
Running:         select_w100# bin/select -E -C 200 -L -S -W -N select_w100 -n 100 -I 2000 -w 10 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w100    1   1     73.93460          174        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     70.59636                70.59636
#                    max    147.63700                78.83444
#                   mean     76.27297                74.12116
#                 median     74.11380                73.93460
#                 stddev      7.80929                 1.59245
#         standard error      0.54946                 0.12072
#   99% confidence level      1.27804                 0.28080
#                   skew      5.52671                 0.93396
#               kurtosis     39.55154                 0.66057
#       time correlation     -0.01890                -0.01272
#
#           elasped time      0.77484
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     70.00000 |*                                   70.59636
#                  6     71.00000 |****                                71.70996
#                 37     72.00000 |*************************           72.62734
#                 47     73.00000 |********************************    73.46214
#                 45     74.00000 |******************************      74.37799
#                 15     75.00000 |**********                          75.45797
#                 11     76.00000 |*******                             76.48529
#                  3     77.00000 |**                                  77.36329
#
#                  9        > 95% |******                              78.22061
#
#        mean of 95%     73.89755
#          95th %ile     77.51860
 for      0.79701 seconds
Running:        select_w1000# bin/select -E -C 200 -L -S -W -N select_w1000 -n 1000 -I 20000 -w 100 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w1000   1   1    379.36400          180        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    362.57040               362.57040
#                    max    672.99600               417.96880
#                   mean    394.07082               381.63216
#                 median    381.77040               379.36400
#                 stddev     43.68071                12.16872
#         standard error      3.07336                 0.90700
#   99% confidence level      7.14865                 2.10969
#                   skew      3.70416                 0.76698
#               kurtosis     16.53149                -0.06391
#       time correlation     -0.06183                -0.03188
#
#           elasped time      0.40279
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          140
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    362.00000 |**                                 362.57040
#                  8    364.00000 |****************                   365.34160
#                 12    366.00000 |************************           367.31493
#                 14    368.00000 |****************************       369.29223
#                  9    370.00000 |******************                 371.13218
#                 16    372.00000 |********************************   372.83600
#                 11    374.00000 |**********************             375.07716
#                 11    376.00000 |**********************             377.25084
#                 12    378.00000 |************************           379.16347
#                 11    380.00000 |**********************             381.37476
#                 11    382.00000 |**********************             383.10160
#                  9    384.00000 |******************                 385.30320
#                  9    386.00000 |******************                 387.23173
#                  6    388.00000 |************                       389.10053
#                  4    390.00000 |********                           390.83280
#                  7    392.00000 |**************                     393.26846
#                  3    394.00000 |******                             395.16773
#                  5    396.00000 |**********                         396.97680
#                  1    398.00000 |**                                 398.00080
#                  8    400.00000 |****************                   401.06000
#                  1    402.00000 |**                                 402.14800
#                  2    404.00000 |****                               405.34800
#
#                  9        > 95% |******************                 410.76667
#
#        mean of 95%    380.09876
#          95th %ile    405.78320
 for      0.46288 seconds
 
Running:               semop# bin/semop -E -C 200 -L -S -W -N semop -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
semop          1   1     30.38730          192        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     29.02179                29.02179
#                    max     35.63786                32.42198
#                   mean     30.61375                30.43684
#                 median     30.44771                30.38730
#                 stddev      1.11414                 0.79419
#         standard error      0.07839                 0.05732
#   99% confidence level      0.18234                 0.13332
#                   skew      1.60041                 0.38875
#               kurtosis      3.84236                -0.46610
#       time correlation     -0.00523                -0.00144
#
#           elasped time      3.11423
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          208
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 64     29.00000 |***********************             29.58611
#                 87     30.00000 |********************************    30.51391
#                 31     31.00000 |***********                         31.41926
#
#                 10        > 95% |***                                 32.16547
#
#        mean of 95%     30.34186
#          95th %ile     31.88336
 for      3.13916 seconds
 
Running:           sigaction# bin/sigaction -E -C 200 -L -S -W -N sigaction -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
sigaction      1   1     19.99496          179        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.56181                19.56181
#                    max     25.90882                20.84693
#                   mean     20.32185                20.08124
#                 median     20.05384                19.99496
#                 stddev      0.81913                 0.31031
#         standard error      0.05763                 0.02319
#   99% confidence level      0.13406                 0.05395
#                   skew      3.09141                 0.54720
#               kurtosis     13.09881                -0.64626
#       time correlation     -0.00114                -0.00010
#
#           elasped time      4.11213
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 94     19.00000 |********************************    19.83721
#                 76     20.00000 |*************************           20.30337
#
#                  9        > 95% |***                                 20.75417
#
#        mean of 95%     20.04561
#          95th %ile     20.68591
 for      4.13868 seconds
Running:              signal# bin/signal -E -C 200 -L -S -W -N signal -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
signal         1   1    149.17423          175        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    143.20431               143.20431
#                    max    302.62831               164.67375
#                   mean    156.63945               150.54575
#                 median    149.73999               149.17423
#                 stddev     19.40573                 4.77715
#         standard error      1.36538                 0.36112
#   99% confidence level      3.17588                 0.83996
#                   skew      3.82367                 1.03697
#               kurtosis     19.33821                 0.48164
#       time correlation      0.02903                -0.00092
#
#           elasped time      6.33626
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5    143.00000 |*****                              143.53916
#                  9    144.00000 |**********                         144.55528
#                 10    145.00000 |***********                        145.60585
#                 13    146.00000 |**************                     146.66129
#                 17    147.00000 |*******************                147.59388
#                 28    148.00000 |********************************   148.49391
#                 24    149.00000 |***************************        149.47994
#                  9    150.00000 |**********                         150.43674
#                 12    151.00000 |*************                      151.47300
#                  8    152.00000 |*********                          152.54111
#                  6    153.00000 |******                             153.45391
#                  3    154.00000 |***                                154.59887
#                  4    155.00000 |****                               155.55887
#                  6    156.00000 |******                             156.51994
#                  2    157.00000 |**                                 157.53391
#                  3    158.00000 |***                                158.22895
#                  4    159.00000 |****                               159.56815
#                  3    160.00000 |***                                160.24538
#
#                  9        > 95% |**********                         162.57114
#
#        mean of 95%    149.89378
#          95th %ile    160.82863
 for      6.36587 seconds
Running:         sigprocmask# bin/sigprocmask -E -C 200 -L -S -W -N sigprocmask -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
sigprocmask    1   1     18.71878          174        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     18.08185                18.08185
#                    max     25.86681                19.86387
#                   mean     19.14494                18.74202
#                 median     18.75667                18.71878
#                 stddev      1.17921                 0.38937
#         standard error      0.08297                 0.02952
#   99% confidence level      0.19299                 0.06866
#                   skew      2.56460                 0.73142
#               kurtosis      7.54221                -0.02863
#       time correlation     -0.00007                -0.00160
#
#           elasped time      3.87432
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          199
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                136     18.00000 |********************************    18.57607
#                 29     19.00000 |******                              19.23810
#
#                  9        > 95% |**                                  19.65116
#
#        mean of 95%     18.69243
#          95th %ile     19.53874
 for      3.90027 seconds
 
Running:          pthread_16# bin/pthread_create -E -C 200 -L -S -W -N pthread_16 -B 16 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_16     1   1    366.24388          190        0       16 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    329.36388               329.36388
#                    max    752.05187               427.61987
#                   mean    375.61219               368.15385
#                 median    366.80388               366.24388
#                 stddev     41.58397                20.46203
#         standard error      2.92584                 1.48447
#   99% confidence level      6.80550                 3.45288
#                   skew      4.65016                 0.71360
#               kurtosis     33.89164                 0.35360
#       time correlation      0.01995                 0.06047
#
#           elasped time      3.09087
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          194
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    327.00000 |***                                329.64387
#                  1    330.00000 |*                                  332.73987
#                  2    333.00000 |***                                333.96388
#                  3    336.00000 |*****                              337.40654
#                  5    339.00000 |*********                          340.31107
#                 12    342.00000 |**********************             343.73054
#                  6    345.00000 |***********                        346.21454
#                  8    348.00000 |***************                    349.46787
#                  7    351.00000 |*************                      352.79473
#                  9    354.00000 |****************                   355.66965
#                 16    357.00000 |******************************     358.35588
#                 10    360.00000 |******************                 361.34467
#                 13    363.00000 |************************           364.49864
#                 17    366.00000 |********************************   367.29893
#                 11    369.00000 |********************               370.52460
#                  7    372.00000 |*************                      373.57873
#                 10    375.00000 |******************                 376.09187
#                 11    378.00000 |********************               379.18206
#                  7    381.00000 |*************                      383.07130
#                  3    384.00000 |*****                              385.92921
#                  6    387.00000 |***********                        388.58787
#                  3    390.00000 |*****                              391.90788
#                  1    393.00000 |*                                  395.04388
#                  4    396.00000 |*******                            397.47187
#                  2    399.00000 |***                                401.45988
#                  0    402.00000 |                                           -
#                  2    405.00000 |***                                406.52387
#                  2    408.00000 |***                                410.08388
#
#                 10        > 95% |******************                 418.70628
#
#        mean of 95%    365.34539
#          95th %ile    411.42787
 for      3.18028 seconds
Running:          pthread_32# bin/pthread_create -E -C 200 -L -S -W -N pthread_32 -B 32 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_32     1   1    378.65081          187        0       32 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    352.12281               352.12281
#                    max    586.96281               425.53081
#                   mean    388.57228               382.06339
#                 median    379.37081               378.65081
#                 stddev     29.61739                15.31808
#         standard error      2.08387                 1.12017
#   99% confidence level      4.84709                 2.60551
#                   skew      2.95438                 0.67365
#               kurtosis     12.71108                 0.03883
#       time correlation      0.04772                 0.03822
#
#           elasped time      6.78042
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    352.00000 |***                                353.05881
#                  2    354.00000 |***                                354.93081
#                  2    356.00000 |***                                357.01081
#                  1    358.00000 |*                                  358.83481
#                  3    360.00000 |****                               361.06681
#                  9    362.00000 |**************                     363.11570
#                  6    364.00000 |*********                          365.26548
#                  7    366.00000 |***********                        366.73538
#                  4    368.00000 |******                             369.25281
#                  6    370.00000 |*********                          370.55215
#                 14    372.00000 |**********************             373.03196
#                 20    374.00000 |********************************   375.00121
#                 10    376.00000 |****************                   377.09401
#                 19    378.00000 |******************************     378.83902
#                  6    380.00000 |*********                          380.95881
#                  9    382.00000 |**************                     383.19570
#                 10    384.00000 |****************                   385.08361
#                  5    386.00000 |********                           386.90041
#                  1    388.00000 |*                                  389.42681
#                  4    390.00000 |******                             390.58881
#                  4    392.00000 |******                             392.95081
#                  7    394.00000 |***********                        395.39596
#                  5    396.00000 |********                           396.96601
#                  4    398.00000 |******                             398.81481
#                  2    400.00000 |***                                400.53881
#                  6    402.00000 |*********                          403.02948
#                  2    404.00000 |***                                404.57081
#                  2    406.00000 |***                                407.82281
#                  5    408.00000 |********                           408.81881
#
#                 10        > 95% |****************                   417.59241
#
#        mean of 95%    380.05610
#          95th %ile    409.93081
 for      6.79451 seconds
Running:         pthread_128# bin/pthread_create -E -C 200 -L -S -W -N pthread_128 -B 128 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_128    1   1    397.52098          199        0      128 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    363.30298               363.30298
#                    max    499.95298               429.03698
#                   mean    397.46739               396.54963
#                 median    397.60698               397.52098
#                 stddev     15.31004                12.95503
#         standard error      1.07721                 0.91836
#   99% confidence level      2.50559                 2.13610
#                   skew      1.41369                -0.20507
#               kurtosis      9.05657                 0.18177
#       time correlation     -0.04648                -0.02474
#
#           elasped time     29.58248
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          131
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    362.00000 |*                                  363.30298
#                  1    364.00000 |*                                  364.04698
#                  4    366.00000 |*******                            366.90498
#                  1    368.00000 |*                                  369.04498
#                  4    370.00000 |*******                            370.92298
#                  1    372.00000 |*                                  372.53698
#                  4    374.00000 |*******                            375.18798
#                  5    376.00000 |********                           377.11818
#                  1    378.00000 |*                                  379.97498
#                  2    380.00000 |***                                381.40098
#                  7    382.00000 |************                       382.92155
#                  6    384.00000 |**********                         385.04431
#                  9    386.00000 |****************                   386.80275
#                  6    388.00000 |**********                         389.49531
#                 11    390.00000 |*******************                390.96716
#                 11    392.00000 |*******************                393.10916
#                 12    394.00000 |*********************              394.86898
#                 18    396.00000 |********************************   397.01209
#                 14    398.00000 |************************           398.88926
#                 16    400.00000 |****************************       401.07485
#                 15    402.00000 |**************************         402.94631
#                 11    404.00000 |*******************                404.89079
#                  9    406.00000 |****************                   407.09409
#                  6    408.00000 |**********                         408.82698
#                  3    410.00000 |*****                              411.06164
#                  3    412.00000 |*****                              412.54164
#                  6    414.00000 |**********                         415.14864
#                  2    416.00000 |***                                417.12398
#
#                 10        > 95% |*****************                  423.32158
#
#        mean of 95%    395.13312
#          95th %ile    417.74098
 for     29.59728 seconds
Running:         pthread_512# bin/pthread_create -E -C 200 -L -S -W -N pthread_512 -B 512 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_512    1   1    382.28114          196        0      512 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    368.22814               368.22814
#                    max    436.61914               409.03264
#                   mean    384.04770               382.96196
#                 median    382.63814               382.28114
#                 stddev     10.80089                 8.83391
#         standard error      0.75995                 0.63099
#   99% confidence level      1.76764                 1.46769
#                   skew      1.37469                 0.59170
#               kurtosis      3.11947                -0.06675
#       time correlation      0.01083                 0.02081
#
#           elasped time    122.83216
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          182
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10    368.00000 |*************                      369.00444
#                  8    370.00000 |***********                        370.95177
#                 11    372.00000 |***************                    373.04460
#                 18    374.00000 |*************************          374.98717
#                 18    376.00000 |*************************          377.24367
#                 16    378.00000 |**********************             378.82868
#                 14    380.00000 |*******************                381.06300
#                 23    382.00000 |********************************   382.97421
#                 15    384.00000 |********************               384.76731
#                 11    386.00000 |***************                    386.66296
#                  8    388.00000 |***********                        388.97914
#                 11    390.00000 |***************                    390.90642
#                 10    392.00000 |*************                      392.84434
#                  6    394.00000 |********                           395.06306
#                  4    396.00000 |*****                              396.82677
#                  3    398.00000 |****                               398.68514
#
#                 10        > 95% |*************                      403.59024
#
#        mean of 95%    381.85292
#          95th %ile    399.40614
 for    122.85253 seconds
 
Running:             fork_10# bin/fork -E -C 200 -L -S -W -N fork_10 -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_10        1   1    683.46930          190        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    581.37650               581.37650
#                    max   1203.86610               804.65970
#                   mean    700.51484               687.28020
#                 median    687.69330               683.46930
#                 stddev     73.40510                45.96595
#         standard error      5.16477                 3.33472
#   99% confidence level     12.01324                 7.75656
#                   skew      2.52872                 0.26545
#               kurtosis     11.86712                -0.22643
#       time correlation     -0.32918                -0.22174
#
#           elasped time      1.87336
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          251
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    581.00000 |**                                 581.37650
#                  2    588.00000 |****                               592.76850
#                  1    595.00000 |**                                 598.65650
#                  2    602.00000 |****                               608.01330
#                  5    609.00000 |**********                         612.42930
#                  4    616.00000 |********                           618.82930
#                  3    623.00000 |******                             628.01117
#                 11    630.00000 |**********************             632.23439
#                  7    637.00000 |**************                     639.58724
#                  3    644.00000 |******                             645.60690
#                  7    651.00000 |**************                     653.88301
#                 10    658.00000 |********************               661.88850
#                 15    665.00000 |******************************     668.23559
#                 16    672.00000 |********************************   676.43890
#                 13    679.00000 |**************************         682.48075
#                 10    686.00000 |********************               689.95378
#                  9    693.00000 |******************                 696.53099
#                 15    700.00000 |******************************     702.79047
#                  8    707.00000 |****************                   710.53810
#                  7    714.00000 |**************                     717.89764
#                  5    721.00000 |**********                         725.10002
#                  5    728.00000 |**********                         730.79346
#                  9    735.00000 |******************                 738.45810
#                  4    742.00000 |********                           745.79890
#                  3    749.00000 |******                             752.23943
#                  2    756.00000 |****                               758.38770
#                  1    763.00000 |**                                 769.79250
#                  2    770.00000 |****                               772.21170
#
#                 10        > 95% |********************               788.05042
#
#        mean of 95%    681.68185
#          95th %ile    775.68050
 for      1.90058 seconds
Running:            fork_100# bin/fork -E -C 200 -L -S -W -N fork_100 -B 100 -C 100 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_100       1   1    617.68721          100        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    564.75921               564.75921
#                    max    735.39857               706.11729
#                   mean    624.76305               622.66623
#                 median    617.73841               617.68721
#                 stddev     32.27026                28.90043
#         standard error      3.19523                 2.89004
#   99% confidence level      7.43211                 6.72224
#                   skew      1.11823                 0.84023
#               kurtosis      1.27881                 0.46982
#       time correlation     -0.06951                -0.06962
#
#           elasped time      7.81816
#      number of samples          100
#     number of outliers            2
#      getnsecs overhead          239
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    564.00000 |****                               566.25809
#                  0    568.00000 |                                           -
#                  0    572.00000 |                                           -
#                  2    576.00000 |****                               578.35793
#                  1    580.00000 |**                                 580.24721
#                  2    584.00000 |****                               587.34225
#                  1    588.00000 |**                                 590.30545
#                  7    592.00000 |****************                   594.56419
#                  3    596.00000 |******                             598.13052
#                  6    600.00000 |*************                      602.50470
#                 11    604.00000 |*************************          605.34731
#                  3    608.00000 |******                             610.02940
#                  7    612.00000 |****************                   613.46614
#                 14    616.00000 |********************************   618.15002
#                  4    620.00000 |*********                          622.30929
#                  4    624.00000 |*********                          626.02129
#                  6    628.00000 |*************                      629.87622
#                  2    632.00000 |****                               634.23121
#                  2    636.00000 |****                               637.37105
#                  4    640.00000 |*********                          641.86001
#                  2    644.00000 |****                               646.08273
#                  4    648.00000 |*********                          649.86769
#                  0    652.00000 |                                           -
#                  0    656.00000 |                                           -
#                  1    660.00000 |**                                 661.65777
#                  1    664.00000 |**                                 665.84849
#                  3    668.00000 |******                             670.02129
#                  0    672.00000 |                                           -
#                  3    676.00000 |******                             678.27814
#
#                  5        > 95% |***********                        695.24958
#
#        mean of 95%    618.84605
#          95th %ile    685.95729
 for      7.83364 seconds
Running:           fork_1000# bin/fork -E -C 200 -L -S -W -N fork_1000 -B 1000 -C 50 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_1000      1   1   1129.43676           52        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    750.41187               750.41187
#                    max   1362.18479              1362.18479
#                   mean   1109.51390              1109.51390
#                 median   1129.43676              1129.43676
#                 stddev    145.37502               145.37502
#         standard error     20.15989                20.15989
#   99% confidence level     46.89190                46.89190
#                   skew     -1.05162                -1.05162
#               kurtosis      1.08318                 1.08318
#       time correlation     -1.04217                -1.04217
#
#           elasped time     67.92293
#      number of samples           52
#     number of outliers            0
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    740.00000 |*******                            752.77078
#                  2    760.00000 |*******                            765.98089
#                  2    780.00000 |*******                            792.65238
#                  0    800.00000 |                                           -
#                  0    820.00000 |                                           -
#                  0    840.00000 |                                           -
#                  0    860.00000 |                                           -
#                  0    880.00000 |                                           -
#                  0    900.00000 |                                           -
#                  0    920.00000 |                                           -
#                  0    940.00000 |                                           -
#                  0    960.00000 |                                           -
#                  0    980.00000 |                                           -
#                  0   1000.00000 |                                           -
#                  1   1020.00000 |***                               1037.42780
#                  3   1040.00000 |**********                        1055.63648
#                  3   1060.00000 |**********                        1070.45991
#                  4   1080.00000 |**************                    1091.34460
#                  6   1100.00000 |*********************             1106.14324
#                  9   1120.00000 |********************************  1129.54232
#                  5   1140.00000 |*****************                 1152.30463
#                  3   1160.00000 |**********                        1170.55488
#                  2   1180.00000 |*******                           1184.80086
#                  0   1200.00000 |                                           -
#                  3   1220.00000 |**********                        1226.32517
#                  0   1240.00000 |                                           -
#                  3   1260.00000 |**********                        1269.69780
#                  0   1280.00000 |                                           -
#                  1   1300.00000 |***                               1315.35599
#
#                  3        > 95% |**********                        1347.28815
#
#        mean of 95%   1094.95629
#          95th %ile   1326.70396
 for     67.93717 seconds
 
Running:             exit_10# bin/exit -E -C 200 -L -S -W -N exit_10 -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_10        1   1    357.56030          201        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    272.08190               272.08190
#                    max    493.88030               473.98910
#                   mean    358.49571               357.82216
#                 median    357.96990               357.56030
#                 stddev     41.16350                40.13484
#         standard error      2.89625                 2.83089
#   99% confidence level      6.73669                 6.58466
#                   skew      0.53255                 0.43656
#               kurtosis      0.25968                 0.00834
#       time correlation     -0.08788                -0.07102
#
#           elasped time      1.86911
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    270.00000 |***                                273.97630
#                  0    276.00000 |                                           -
#                  4    282.00000 |*******                            285.63710
#                  1    288.00000 |*                                  290.48830
#                  4    294.00000 |*******                            297.02910
#                 10    300.00000 |*****************                  303.53918
#                  4    306.00000 |*******                            308.25470
#                 10    312.00000 |*****************                  315.62494
#                  8    318.00000 |**************                     322.47550
#                  8    324.00000 |**************                     327.40030
#                 12    330.00000 |*********************              333.45577
#                 10    336.00000 |*****************                  339.93726
#                  8    342.00000 |**************                     344.36990
#                 14    348.00000 |************************           349.80167
#                 13    354.00000 |***********************            357.42442
#                 18    360.00000 |********************************   362.41434
#                 11    366.00000 |*******************                368.55899
#                  8    372.00000 |**************                     375.24030
#                  9    378.00000 |****************                   381.47070
#                  8    384.00000 |**************                     386.18110
#                  6    390.00000 |**********                         392.93097
#                  6    396.00000 |**********                         398.78483
#                  5    402.00000 |********                           405.08926
#                  2    408.00000 |***                                410.33470
#                  4    414.00000 |*******                            416.33150
#                  5    420.00000 |********                           423.01950
#
#                 11        > 95% |*******************                450.08103
#
#        mean of 95%    352.48086
#          95th %ile    430.39230
 for      1.89414 seconds
Running:            exit_100# bin/exit -E -C 200 -L -S -W -N exit_100 -B 100 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_100       1   1    208.24064          195        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    171.82976               171.82976
#                    max    288.36096               254.64064
#                   mean    211.68262               209.45130
#                 median    208.75776               208.24064
#                 stddev     19.74567                15.99008
#         standard error      1.38930                 1.14507
#   99% confidence level      3.23151                 2.66344
#                   skew      1.06227                 0.20838
#               kurtosis      2.26221                 0.12144
#       time correlation     -0.04389                 0.00646
#
#           elasped time     15.77496
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    171.00000 |**                                 172.90880
#                  1    174.00000 |*                                  174.02112
#                  5    177.00000 |*******                            178.02598
#                  1    180.00000 |*                                  180.34176
#                  6    183.00000 |********                           183.80501
#                  5    186.00000 |*******                            187.07814
#                  3    189.00000 |****                               190.50411
#                  5    192.00000 |*******                            193.82477
#                 15    195.00000 |*********************              196.34210
#                 12    198.00000 |*****************                  199.13856
#                 11    201.00000 |****************                   202.45388
#                 22    204.00000 |********************************   205.71450
#                 18    207.00000 |**************************         208.26126
#                 17    210.00000 |************************           211.51307
#                 12    213.00000 |*****************                  214.40021
#                 11    216.00000 |****************                   217.19529
#                 12    219.00000 |*****************                  220.14613
#                  6    222.00000 |********                           223.36896
#                  5    225.00000 |*******                            225.99014
#                  6    228.00000 |********                           230.23701
#                  5    231.00000 |*******                            232.81818
#                  5    234.00000 |*******                            235.90195
#
#                 10        > 95% |**************                     244.30131
#
#        mean of 95%    207.56751
#          95th %ile    237.07904
 for     15.78758 seconds
Running:           exit_1000# bin/exit -E -C 200 -L -S -W -N exit_1000 -B 1000 -C 50 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_1000      1   1    832.95291           52        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    354.13973               354.13973
#                    max   1000.75477              1000.75477
#                   mean    769.82422               769.82422
#                 median    832.95291               832.95291
#                 stddev    169.35204               169.35204
#         standard error     23.48490                23.48490
#   99% confidence level     54.62588                54.62588
#                   skew     -1.72098                -1.72098
#               kurtosis      1.51123                 1.51123
#       time correlation      1.34295                 1.34295
#
#           elasped time     68.58453
#      number of samples           52
#     number of outliers            0
#      getnsecs overhead          175
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    340.00000 |**                                 354.13973
#                  5    360.00000 |************                       364.55483
#                  1    380.00000 |**                                 381.23195
#                  0    400.00000 |                                           -
#                  0    420.00000 |                                           -
#                  0    440.00000 |                                           -
#                  0    460.00000 |                                           -
#                  0    480.00000 |                                           -
#                  0    500.00000 |                                           -
#                  0    520.00000 |                                           -
#                  0    540.00000 |                                           -
#                  0    560.00000 |                                           -
#                  0    580.00000 |                                           -
#                  0    600.00000 |                                           -
#                  1    620.00000 |**                                 631.19701
#                  1    640.00000 |**                                 654.51272
#                  0    660.00000 |                                           -
#                  0    680.00000 |                                           -
#                  0    700.00000 |                                           -
#                  1    720.00000 |**                                 737.67278
#                  0    740.00000 |                                           -
#                  0    760.00000 |                                           -
#                  0    780.00000 |                                           -
#                 13    800.00000 |********************************   812.27367
#                  9    820.00000 |**********************             831.72107
#                 10    840.00000 |************************           850.55437
#                  6    860.00000 |**************                     868.40972
#                  1    880.00000 |**                                 880.85179
#
#                  3        > 95% |*******                            935.81004
#
#        mean of 95%    759.66183
#          95th %ile    893.48974
 for     68.59898 seconds
 
Running:      exit_10_nolibc# bin/exit -E -C 200 -L -S -W -N exit_10_nolibc -e -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_10_nolibc   1   1    261.19680          199        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    191.30880               191.30880
#                    max    393.49760               355.81440
#                   mean    263.43946               261.51751
#                 median    261.68320               261.19680
#                 stddev     35.09566                31.62717
#         standard error      2.46932                 2.24199
#   99% confidence level      5.74364                 5.21487
#                   skew      0.69584                 0.15798
#               kurtosis      1.26771                -0.40618
#       time correlation     -0.00142                -0.00000
#
#           elasped time      1.67170
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    190.00000 |**                                 191.30880
#                  3    195.00000 |******                             197.59787
#                  2    200.00000 |****                               201.19040
#                  4    205.00000 |********                           207.27040
#                  6    210.00000 |************                       212.46720
#                  3    215.00000 |******                             217.36960
#                  5    220.00000 |**********                         222.20288
#                  6    225.00000 |************                       227.76747
#                 10    230.00000 |********************               232.91648
#                 13    235.00000 |**************************         237.09145
#                 10    240.00000 |********************               242.94144
#                 13    245.00000 |**************************         247.93206
#                 12    250.00000 |************************           253.12640
#                  8    255.00000 |****************                   257.41440
#                 14    260.00000 |****************************       262.11840
#                 16    265.00000 |********************************   267.78240
#                 13    270.00000 |**************************         272.75028
#                  7    275.00000 |**************                     277.41257
#                  8    280.00000 |****************                   282.36160
#                  5    285.00000 |**********                         288.08192
#                  5    290.00000 |**********                         292.73600
#                  8    295.00000 |****************                   297.36640
#                  4    300.00000 |********                           301.40160
#                  8    305.00000 |****************                   307.87200
#                  5    310.00000 |**********                         312.29952
#
#                 10        > 95% |********************               324.73600
#
#        mean of 95%    258.17261
#          95th %ile    315.31520
 for      1.68483 seconds
 
Running:                exec# bin/exec -E -C 200 -L -S -W -N exec -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exec           1   1   7598.38720          195        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   6991.59040              6991.59040
#                    max  10764.51840              8403.30240
#                   mean   7686.53662              7638.33620
#                 median   7613.79840              7598.38720
#                 stddev    408.07099               294.46730
#         standard error     28.71177                21.08724
#   99% confidence level     66.78359                49.04892
#                   skew      2.67888                 0.57093
#               kurtosis     15.11644                -0.14531
#       time correlation     -1.10453                -0.80363
#
#           elasped time     15.56598
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   6960.00000 |**                                6991.59040
#                  0   7000.00000 |                                           -
#                  0   7040.00000 |                                           -
#                  1   7080.00000 |**                                7103.48800
#                  3   7120.00000 |******                            7140.03627
#                  3   7160.00000 |******                            7184.30720
#                  2   7200.00000 |****                              7220.90240
#                  6   7240.00000 |************                      7257.01120
#                  6   7280.00000 |************                      7304.23893
#                 11   7320.00000 |***********************           7343.49033
#                  8   7360.00000 |*****************                 7381.35360
#                 15   7400.00000 |********************************  7421.94859
#                 14   7440.00000 |*****************************     7461.75634
#                 10   7480.00000 |*********************             7502.00064
#                 10   7520.00000 |*********************             7542.65600
#                  9   7560.00000 |*******************               7584.05689
#                  9   7600.00000 |*******************               7622.18667
#                  6   7640.00000 |************                      7671.08693
#                 11   7680.00000 |***********************           7696.65396
#                 12   7720.00000 |*************************         7733.13493
#                  7   7760.00000 |**************                    7773.01577
#                  8   7800.00000 |*****************                 7821.93920
#                  4   7840.00000 |********                          7865.42080
#                  6   7880.00000 |************                      7889.76640
#                  3   7920.00000 |******                            7934.72853
#                  4   7960.00000 |********                          7983.32160
#                  4   8000.00000 |********                          8022.60480
#                  3   8040.00000 |******                            8046.26773
#                  2   8080.00000 |****                              8093.50400
#                  5   8120.00000 |**********                        8129.40288
#                  2   8160.00000 |****                              8164.14720
#
#                 10        > 95% |*********************             8326.90944
#
#        mean of 95%   7601.11602
#          95th %ile   8222.31040
 for     15.58991 seconds
 
Running:              system# bin/system -E -C 200 -L -S -W -N system -I 1000000 
             prc thr   usecs/call      samples   errors cnt/samp  command
system         1   1  47420.92800          192        0        1     A=$$
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  44755.96800             44755.96800
#                    max 151410.94400             51037.95200
#                   mean  48388.32919             47519.95467
#                 median  47463.93600             47420.92800
#                 stddev   7710.81370              1197.01939
#         standard error    542.53096                86.38743
#   99% confidence level   1261.92701               200.93717
#                   skew     12.02478                 0.40180
#               kurtosis    155.51463                -0.11828
#       time correlation    -10.50247                -5.58791
#
#           elasped time      9.78277
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  44600.00000 |*                                44755.96800
#                  0  44800.00000 |                                           -
#                  1  45000.00000 |*                                45097.98400
#                  2  45200.00000 |***                              45357.44000
#                  4  45400.00000 |*******                          45494.27200
#                  4  45600.00000 |*******                          45752.19200
#                  3  45800.00000 |*****                            45867.94667
#                  7  46000.00000 |*************                    46089.43543
#                 11  46200.00000 |********************             46259.47927
#                 15  46400.00000 |****************************     46509.20960
#                 11  46600.00000 |********************             46674.38545
#                  5  46800.00000 |*********                        46910.15680
#                 14  47000.00000 |**************************       47100.14171
#                 16  47200.00000 |******************************   47313.37600
#                 17  47400.00000 |******************************** 47487.17176
#                 11  47600.00000 |********************             47707.27564
#                 11  47800.00000 |********************             47913.89091
#                  8  48000.00000 |***************                  48097.82400
#                 10  48200.00000 |******************               48304.20480
#                  4  48400.00000 |*******                          48519.42400
#                  6  48600.00000 |***********                      48694.95467
#                  8  48800.00000 |***************                  48911.96800
#                  5  49000.00000 |*********                        49109.35040
#                  3  49200.00000 |*****                            49315.07200
#                  3  49400.00000 |*****                            49414.40000
#                  2  49600.00000 |***                              49617.40800
#
#                 10        > 95% |******************               50171.67360
#
#        mean of 95%  47374.25582
#          95th %ile  49632.00000
 for      9.80890 seconds
 
Running:             recurse# bin/recurse -E -C 200 -L -S -W -N recurse -B 512 
             prc thr   usecs/call      samples   errors cnt/samp 
recurse        1   1      1.91963          169        0      512 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.84513                 1.84513
#                    max      3.45863                 2.11663
#                   mean      2.05804                 1.93973
#                 median      1.93513                 1.91963
#                 stddev      0.32372                 0.06082
#         standard error      0.02278                 0.00468
#   99% confidence level      0.05298                 0.01088
#                   skew      2.74090                 0.91807
#               kurtosis      6.98170                -0.09037
#       time correlation     -0.00039                 0.00005
#
#           elasped time      0.21800
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead          187
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                135      1.00000 |********************************     1.91357
#                 25      2.00000 |*****                                2.03011
#
#                  9        > 95% |**                                   2.08097
#
#        mean of 95%      1.93178
#          95th %ile      2.05813
 for      0.24335 seconds
 
Running:            read_t1k# bin/read -E -C 200 -L -S -W -N read_t1k -s 1k -B 800 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t1k       1   1     20.12367          181        0      800     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.55727                19.55727
#                    max     25.73103                20.91087
#                   mean     20.36426                20.13542
#                 median     20.16239                20.12367
#                 stddev      0.82872                 0.28452
#         standard error      0.05831                 0.02115
#   99% confidence level      0.13562                 0.04919
#                   skew      3.34114                 0.44911
#               kurtosis     13.64584                -0.23382
#       time correlation      0.00058                -0.00007
#
#           elasped time      3.29899
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          135
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 66     19.00000 |********************                19.84970
#                105     20.00000 |********************************    20.25496
#
#                 10        > 95% |***                                 20.76601
#
#        mean of 95%     20.09854
#          95th %ile     20.64591
 for      3.32381 seconds
Running:           read_t10k# bin/read -E -C 200 -L -S -W -N read_t10k -s 10k -B 200 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t10k      1   1     49.90883          176        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.21923                48.21923
#                    max     73.06404                52.42404
#                   mean     51.01279                50.03025
#                 median     50.00868                49.90883
#                 stddev      3.33953                 0.81677
#         standard error      0.23497                 0.06157
#   99% confidence level      0.54654                 0.14320
#                   skew      3.79718                 0.78033
#               kurtosis     16.46937                 0.26136
#       time correlation      0.00629                 0.00112
#
#           elasped time      2.06780
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          185
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 14     48.00000 |*****                               48.81306
#                 87     49.00000 |********************************    49.59743
#                 51     50.00000 |******************                  50.35091
#                 15     51.00000 |*****                               51.40626
#
#                  9        > 95% |***                                 51.99708
#
#        mean of 95%     49.92425
#          95th %ile     51.82371
 for      2.07853 seconds
Running:          read_t100k# bin/read -E -C 200 -L -S -W -N read_t100k -s 100k -B 20 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t100k     1   1    369.64115          169        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    356.94355               356.94355
#                    max    632.23315               387.79155
#                   mean    388.42990               370.07900
#                 median    370.99795               369.64115
#                 stddev     52.98401                 6.04815
#         standard error      3.72794                 0.46524
#   99% confidence level      8.67119                 1.08215
#                   skew      3.18518                 0.71880
#               kurtosis      9.67962                 0.71285
#       time correlation     -0.16734                -0.03744
#
#           elasped time      1.57570
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    356.00000 |**                                 356.94355
#                  1    357.00000 |**                                 357.34035
#                  1    358.00000 |**                                 358.33875
#                  1    359.00000 |**                                 359.19635
#                  2    360.00000 |****                               360.39315
#                  4    361.00000 |********                           361.60275
#                  6    362.00000 |************                       362.49022
#                  5    363.00000 |**********                         363.34867
#                 10    364.00000 |*********************              364.69779
#                 14    365.00000 |*****************************      365.61098
#                 12    366.00000 |*************************          366.50302
#                 12    367.00000 |*************************          367.51315
#                  7    368.00000 |**************                     368.39589
#                 13    369.00000 |***************************        369.52792
#                 13    370.00000 |***************************        370.46527
#                 15    371.00000 |********************************   371.40755
#                  7    372.00000 |**************                     372.53578
#                  8    373.00000 |*****************                  373.33395
#                 10    374.00000 |*********************              374.56275
#                  6    375.00000 |************                       375.60595
#                  1    376.00000 |**                                 376.73235
#                  3    377.00000 |******                             377.44488
#                  3    378.00000 |******                             378.62248
#                  3    379.00000 |******                             379.35635
#                  1    380.00000 |**                                 380.99475
#                  1    381.00000 |**                                 381.13555
#
#                  9        > 95% |*******************                385.58995
#
#        mean of 95%    369.20651
#          95th %ile    381.28915
 for      1.59136 seconds
 
Running:            read_u1k# bin/read -E -C 200 -L -S -W -N read_u1k -s 1k -B 500 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u1k       1   1     19.22611          176        0      500     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     18.75200                18.75200
#                    max     35.31418                20.61005
#                   mean     19.93612                19.33847
#                 median     19.27578                19.22611
#                 stddev      2.16209                 0.42720
#         standard error      0.15212                 0.03220
#   99% confidence level      0.35384                 0.07490
#                   skew      4.70688                 1.14976
#               kurtosis     26.11742                 0.53723
#       time correlation     -0.00680                -0.00055
#
#           elasped time      2.01978
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 34     18.00000 |********                            18.90830
#                123     19.00000 |********************************    19.31449
#                 10     20.00000 |**                                  20.11075
#
#                  9        > 95% |**                                  20.43324
#
#        mean of 95%     19.27947
#          95th %ile     20.25011
 for      2.03874 seconds
Running:           read_u10k# bin/read -E -C 200 -L -S -W -N read_u10k -s 10k -B 200 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u10k      1   1     41.19429          188        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     39.76325                39.76325
#                    max     56.71813                44.32900
#                   mean     41.81041                41.40078
#                 median     41.27364                41.19429
#                 stddev      1.94886                 0.98011
#         standard error      0.13712                 0.07148
#   99% confidence level      0.31894                 0.16627
#                   skew      3.45543                 0.93648
#               kurtosis     18.24645                 0.37482
#       time correlation     -0.00402                 0.00017
#
#           elasped time      1.69579
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          247
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     39.00000 |*                                   39.87493
#                 73     40.00000 |********************************    40.58583
#                 67     41.00000 |*****************************       41.41674
#                 31     42.00000 |*************                       42.49757
#                  3     43.00000 |*                                   43.28410
#
#                 10        > 95% |****                                43.88830
#
#        mean of 95%     41.26103
#          95th %ile     43.47396
 for      1.71205 seconds
Running:          read_u100k# bin/read -E -C 200 -L -S -W -N read_u100k -s 100k -B 20 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u100k     1   1    271.44290          188        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    258.50210               258.50210
#                    max    442.54050               302.79010
#                   mean    277.78974               273.87824
#                 median    272.04450               271.44290
#                 stddev     19.42052                 9.64628
#         standard error      1.36642                 0.70353
#   99% confidence level      3.17830                 1.63641
#                   skew      4.08898                 1.22088
#               kurtosis     26.20378                 0.96830
#       time correlation     -0.10999                -0.06233
#
#           elasped time      1.12890
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          134
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    258.00000 |****                               259.27010
#                  5    260.00000 |******                             261.45122
#                  5    262.00000 |******                             263.39426
#                 18    264.00000 |**********************             265.21072
#                 22    266.00000 |***************************        267.14035
#                 26    268.00000 |********************************   269.01927
#                 21    270.00000 |*************************          271.14972
#                 25    272.00000 |******************************     272.90261
#                  7    274.00000 |********                           275.11284
#                 10    276.00000 |************                       277.14146
#                  6    278.00000 |*******                            278.98637
#                  9    280.00000 |***********                        280.68308
#                  2    282.00000 |**                                 282.55970
#                  8    284.00000 |*********                          285.22850
#                  0    286.00000 |                                           -
#                  1    288.00000 |*                                  288.74850
#                  4    290.00000 |****                               291.14210
#                  2    292.00000 |**                                 293.02370
#                  2    294.00000 |**                                 295.36610
#                  1    296.00000 |*                                  297.35010
#
#                 10        > 95% |************                       299.40450
#
#        mean of 95%    272.44418
#          95th %ile    297.40130
 for      1.14878 seconds
 
Running:            read_z1k# bin/read -E -C 200 -L -S -W -N read_z1k -s 1k -B 600 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z1k       1   1     14.28657          190        0      600     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.88167                13.88167
#                    max     20.81287                15.48465
#                   mean     14.54526                14.39423
#                 median     14.31089                14.28657
#                 stddev      0.77518                 0.36688
#         standard error      0.05454                 0.02662
#   99% confidence level      0.12686                 0.06191
#                   skew      3.99800                 1.20952
#               kurtosis     23.12475                 0.74013
#       time correlation     -0.00189                -0.00029
#
#           elasped time      1.76887
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7     13.00000 |*                                   13.95402
#                167     14.00000 |********************************    14.32856
#                  6     15.00000 |*                                   15.12270
#
#                 10        > 95% |*                                   15.36194
#
#        mean of 95%     14.34047
#          95th %ile     15.23463
 for      1.77917 seconds
Running:           read_z10k# bin/read -E -C 200 -L -S -W -N read_z10k -s 10k -B 200 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z10k      1   1     31.06473          170        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     30.03817                30.03817
#                    max     43.86857                32.54953
#                   mean     31.74987                31.12019
#                 median     31.25929                31.06473
#                 stddev      1.83616                 0.52094
#         standard error      0.12919                 0.03995
#   99% confidence level      0.30050                 0.09293
#                   skew      3.46935                 0.33785
#               kurtosis     16.39500                -0.04432
#       time correlation     -0.00681                -0.00115
#
#           elasped time      1.28821
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 74     30.00000 |***************************         30.65767
#                 87     31.00000 |********************************    31.38920
#
#                  9        > 95% |***                                 32.32269
#
#        mean of 95%     31.05297
#          95th %ile     32.00937
 for      1.31030 seconds
Running:          read_z100k# bin/read -E -C 200 -L -S -W -N read_z100k -s 100k -B 40 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z100k     1   1    220.49920          170        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    215.34720               215.34720
#                    max    345.15200               232.72320
#                   mean    226.73594               221.26366
#                 median    221.35040               220.49920
#                 stddev     16.20964                 3.87981
#         standard error      1.14051                 0.29757
#   99% confidence level      2.65282                 0.69214
#                   skew      3.62939                 0.97950
#               kurtosis     17.31311                 0.64323
#       time correlation     -0.03371                -0.01688
#
#           elasped time      1.83796
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    215.00000 |********                           215.61173
#                  9    216.00000 |*************                      216.61511
#                 22    217.00000 |********************************   217.59011
#                 22    218.00000 |********************************   218.55127
#                 13    219.00000 |******************                 219.48062
#                 21    220.00000 |******************************     220.38461
#                 15    221.00000 |*********************              221.37387
#                 14    222.00000 |********************               222.42240
#                 15    223.00000 |*********************              223.50421
#                  5    224.00000 |*******                            224.45952
#                  7    225.00000 |**********                         225.39611
#                  8    226.00000 |***********                        226.34400
#                  1    227.00000 |*                                  227.14880
#                  2    228.00000 |**                                 228.88640
#                  1    229.00000 |*                                  229.37600
#
#                  9        > 95% |*************                      231.44178
#
#        mean of 95%    220.69470
#          95th %ile    229.95200
 for      1.84990 seconds
Running:         read_zw100k# bin/read -E -C 200 -L -S -W -N read_zw100k -s 100k -B 40 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_zw100k    1   1    219.79625          179        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    212.07145               212.07145
#                    max    339.09225               236.19945
#                   mean    225.45369               220.57147
#                 median    220.21865               219.79625
#                 stddev     16.51265                 5.27668
#         standard error      1.16183                 0.39440
#   99% confidence level      2.70241                 0.91737
#                   skew      3.28046                 1.19116
#               kurtosis     13.54718                 1.21828
#       time correlation     -0.04127                -0.01829
#
#           elasped time      1.82784
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    212.00000 |****                               212.65385
#                  5    213.00000 |******                             213.60745
#                 10    214.00000 |*************                      214.58537
#                 14    215.00000 |*******************                215.31625
#                 16    216.00000 |**********************             216.46465
#                 10    217.00000 |*************                      217.48713
#                 14    218.00000 |*******************                218.68768
#                 23    219.00000 |********************************   219.54248
#                 21    220.00000 |*****************************      220.43838
#                 18    221.00000 |*************************          221.49829
#                  9    222.00000 |************                       222.46861
#                  4    223.00000 |*****                              223.50825
#                  4    224.00000 |*****                              224.54825
#                  4    225.00000 |*****                              225.36265
#                  1    226.00000 |*                                  226.84905
#                  5    227.00000 |******                             227.63369
#                  2    228.00000 |**                                 228.69225
#                  3    229.00000 |****                               229.55198
#                  1    230.00000 |*                                  230.56745
#                  2    231.00000 |**                                 231.95625
#                  1    232.00000 |*                                  232.26985
#
#                  9        > 95% |************                       235.19181
#
#        mean of 95%    219.79745
#          95th %ile    232.66665
 for      1.83994 seconds
 
Running:           write_t1k# bin/write -E -C 200 -L -S -W -N write_t1k -s 1k -B 200 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t1k      1   1     32.56997          183        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.48325                31.48325
#                    max     52.04389                34.59365
#                   mean     33.23435                32.68302
#                 median     32.62886                32.56997
#                 stddev      2.41427                 0.67979
#         standard error      0.16987                 0.05025
#   99% confidence level      0.39511                 0.11689
#                   skew      5.30196                 0.92718
#               kurtosis     33.77175                 0.45480
#       time correlation     -0.00292                 0.00251
#
#           elasped time      1.34942
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 21     31.00000 |******                              31.80642
#                112     32.00000 |********************************    32.44248
#                 38     33.00000 |**********                          33.34929
#                  2     34.00000 |*                                   34.11942
#
#                 10        > 95% |**                                  34.39884
#
#        mean of 95%     32.58384
#          95th %ile     34.20965
 for      1.37421 seconds
Running:          write_t10k# bin/write -E -C 200 -L -S -W -N write_t10k -s 10k -B 100 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t10k     1   1     93.05695          182        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     89.94655                89.94655
#                    max    129.35775                99.38783
#                   mean     94.63413                93.33982
#                 median     93.30015                93.05695
#                 stddev      5.10698                 2.01672
#         standard error      0.35933                 0.14949
#   99% confidence level      0.83579                 0.34771
#                   skew      3.69171                 0.92464
#               kurtosis     17.68682                 0.53191
#       time correlation      0.00355                -0.00406
#
#           elasped time      1.91811
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     89.00000 |*                                   89.94655
#                 14     90.00000 |**********                          90.64653
#                 38     91.00000 |*****************************       91.54399
#                 35     92.00000 |***************************         92.50428
#                 41     93.00000 |********************************    93.44919
#                 20     94.00000 |***************                     94.40735
#                 12     95.00000 |*********                           95.48575
#                  9     96.00000 |*******                             96.40543
#                  2     97.00000 |*                                   97.14271
#
#                 10        > 95% |*******                             98.51999
#
#        mean of 95%     93.03864
#          95th %ile     97.48063
 for      1.93214 seconds
Running:         write_t100k# bin/write -E -C 200 -L -S -W -N write_t100k -s 100k -B 10 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t100k    1   1    749.99280          166        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    720.98800               720.98800
#                    max   1067.89360               784.57840
#                   mean    773.07272               750.10831
#                 median    753.67920               749.99280
#                 stddev     61.36269                12.09158
#         standard error      4.31746                 0.93849
#   99% confidence level     10.04242                 2.18293
#                   skew      2.74949                 0.25812
#               kurtosis      7.24579                -0.21878
#       time correlation      0.00892                -0.02034
#
#           elasped time      1.56784
#      number of samples          166
#     number of outliers           36
#      getnsecs overhead          104
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    720.00000 |**                                 720.98800
#                  0    722.00000 |                                           -
#                  1    724.00000 |**                                 725.08400
#                  0    726.00000 |                                           -
#                  4    728.00000 |*********                          728.59760
#                  5    730.00000 |************                       731.09488
#                  1    732.00000 |**                                 732.71280
#                  3    734.00000 |*******                            735.02533
#                 13    736.00000 |********************************   737.05495
#                 11    738.00000 |***************************        738.90335
#                  9    740.00000 |**********************             740.75973
#                  7    742.00000 |*****************                  742.79554
#                 10    744.00000 |************************           745.15440
#                 11    746.00000 |***************************        747.06276
#                  8    748.00000 |*******************                749.22480
#                  9    750.00000 |**********************             751.03956
#                 11    752.00000 |***************************        753.15789
#                  9    754.00000 |**********************             754.62924
#                 11    756.00000 |***************************        757.03280
#                  6    758.00000 |**************                     758.75227
#                  5    760.00000 |************                       760.83184
#                 13    762.00000 |********************************   763.23194
#                  5    764.00000 |************                       765.00976
#                  2    766.00000 |****                               767.14480
#                  2    768.00000 |****                               769.03920
#
#                  9        > 95% |**********************             776.21573
#
#        mean of 95%    748.61170
#          95th %ile    769.88400
 for      1.58129 seconds
 
Running:           write_u1k# bin/write -E -C 200 -L -S -W -N write_u1k -s 1k -B 200 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u1k      1   1     36.55040          169        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     35.28448                35.28448
#                    max     65.99936                38.00960
#                   mean     37.64787                36.58766
#                 median     36.72064                36.55040
#                 stddev      3.47267                 0.56640
#         standard error      0.24434                 0.04357
#   99% confidence level      0.56833                 0.10134
#                   skew      4.97176                 0.28852
#               kurtosis     31.36631                -0.36749
#       time correlation     -0.00446                 0.00225
#
#           elasped time      1.52733
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 25     35.00000 |*******                             35.76330
#                105     36.00000 |********************************    36.49062
#                 30     37.00000 |*********                           37.25687
#
#                  9        > 95% |**                                  37.77906
#
#        mean of 95%     36.52065
#          95th %ile     37.57056
 for      1.53783 seconds
Running:          write_u10k# bin/write -E -C 200 -L -S -W -N write_u10k -s 10k -B 100 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u10k     1   1    107.22836          184        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    103.24756               103.24756
#                    max    154.70868               112.26644
#                   mean    108.86758               107.33358
#                 median    107.52788               107.22836
#                 stddev      6.30434                 1.71461
#         standard error      0.44357                 0.12640
#   99% confidence level      1.03175                 0.29401
#                   skew      4.35233                 0.32749
#               kurtosis     22.23842                -0.21837
#       time correlation     -0.02754                -0.00151
#
#           elasped time      2.20657
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          236
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    103.00000 |**                                 103.57780
#                 10    104.00000 |*******                            104.76897
#                 31    105.00000 |************************           105.52670
#                 41    106.00000 |********************************   106.51936
#                 32    107.00000 |************************           107.47460
#                 38    108.00000 |*****************************      108.42893
#                 14    109.00000 |**********                         109.36724
#                  5    110.00000 |***                                110.18516
#
#                 10        > 95% |*******                            111.07809
#
#        mean of 95%    107.11838
#          95th %ile    110.35668
 for      2.21817 seconds
Running:         write_u100k# bin/write -E -C 200 -L -S -W -N write_u100k -s 100k -B 10 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u100k    1   1    825.27390          179        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    796.67870               796.67870
#                    max   1272.37790               872.58270
#                   mean    844.94699               825.94708
#                 median    828.06430               825.27390
#                 stddev     64.94924                16.72928
#         standard error      4.56981                 1.25040
#   99% confidence level     10.62938                 2.90844
#                   skew      3.46567                 0.46181
#               kurtosis     13.73158                -0.13873
#       time correlation     -0.20743                -0.05608
#
#           elasped time      1.71337
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          189
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    795.00000 |****                               797.17790
#                  6    798.00000 |*************                      799.37523
#                  9    801.00000 |********************               802.32777
#                 11    804.00000 |*************************          804.99172
#                  4    807.00000 |*********                          809.33790
#                 11    810.00000 |*************************          811.86881
#                 12    813.00000 |***************************        814.62217
#                 14    816.00000 |********************************   817.76761
#                  9    819.00000 |********************               820.55212
#                 10    822.00000 |**********************             823.46654
#                 13    825.00000 |*****************************      826.57950
#                 13    828.00000 |*****************************      829.27932
#                  7    831.00000 |****************                   832.40167
#                 12    834.00000 |***************************        835.33470
#                 12    837.00000 |***************************        838.17203
#                  8    840.00000 |******************                 841.08830
#                  9    843.00000 |********************               844.41701
#                  3    846.00000 |******                             848.14323
#                  2    849.00000 |****                               850.42590
#                  0    852.00000 |                                           -
#                  3    855.00000 |******                             855.88297
#
#                  9        > 95% |********************               865.53986
#
#        mean of 95%    823.85099
#          95th %ile    860.08990
 for      1.73208 seconds
 
Running:           write_n1k# bin/write -E -C 200 -L -S -W -N write_n1k -s 1k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n1k      1   1      0.92288          184        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.87603                 0.87603
#                    max      1.62995                 1.11590
#                   mean      0.97632                 0.94550
#                 median      0.92595                 0.92288
#                 stddev      0.11926                 0.05690
#         standard error      0.00839                 0.00419
#   99% confidence level      0.01952                 0.00976
#                   skew      2.62779                 1.53549
#               kurtosis      8.21364                 1.40423
#       time correlation     -0.00036                -0.00010
#
#           elasped time      0.20108
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                151      0.00000 |********************************     0.92214
#                 23      1.00000 |****                                 1.03005
#
#                 10        > 95% |**                                   1.10380
#
#        mean of 95%      0.93641
#          95th %ile      1.09414
 for      0.21247 seconds
Running:          write_n10k# bin/write -E -C 200 -L -S -W -N write_n10k -s 10k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n10k     1   1      0.92994          193        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.87490                 0.87490
#                    max      1.88585                 1.32777
#                   mean      1.00762                 0.98561
#                 median      0.93378                 0.92994
#                 stddev      0.15813                 0.11820
#         standard error      0.01113                 0.00851
#   99% confidence level      0.02588                 0.01979
#                   skew      2.04255                 1.41582
#               kurtosis      5.25869                 0.90995
#       time correlation      0.00008                 0.00004
#
#           elasped time      0.20800
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          106
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                137      0.00000 |********************************     0.91872
#                 46      1.00000 |**********                           1.11515
#
#                 10        > 95% |**                                   1.30616
#
#        mean of 95%      0.96809
#          95th %ile      1.28399
 for      0.21851 seconds
Running:         write_n100k# bin/write -E -C 200 -L -S -W -N write_n100k -s 100k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n100k    1   1      0.92582          185        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.88384                 0.88384
#                    max      1.43168                 1.07686
#                   mean      0.96869                 0.94462
#                 median      0.92787                 0.92582
#                 stddev      0.09610                 0.04678
#         standard error      0.00676                 0.00344
#   99% confidence level      0.01573                 0.00800
#                   skew      2.47802                 1.30651
#               kurtosis      6.54055                 0.59901
#       time correlation     -0.00007                 0.00007
#
#           elasped time      0.19962
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          133
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                153      0.00000 |********************************     0.92623
#                 22      1.00000 |****                                 1.01794
#
#                 10        > 95% |**                                   1.06470
#
#        mean of 95%      0.93776
#          95th %ile      1.05408
 for      0.20948 seconds
 
Running:          writev_t1k# bin/writev -E -C 200 -L -S -W -N writev_t1k -s 1k -B 200 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t1k     1   1    193.94952          166        0      200     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    188.68359               188.68359
#                    max    276.58375               202.25415
#                   mean    198.96158               194.09662
#                 median    195.03880               193.94952
#                 stddev     12.88015                 2.77063
#         standard error      0.90624                 0.21504
#   99% confidence level      2.10792                 0.50019
#                   skew      3.11613                 0.57371
#               kurtosis     12.18394                 0.17768
#       time correlation      0.01773                -0.00526
#
#           elasped time      8.04708
#      number of samples          166
#     number of outliers           36
#      getnsecs overhead          241
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    188.00000 |*                                  188.68359
#                  3    189.00000 |**                                 189.63847
#                 21    190.00000 |*******************                190.48443
#                 16    191.00000 |**************                     191.46599
#                 25    192.00000 |**********************             192.54433
#                 19    193.00000 |*****************                  193.63275
#                 16    194.00000 |**************                     194.60567
#                 35    195.00000 |********************************   195.49499
#                  9    196.00000 |********                           196.36331
#                  6    197.00000 |*****                              197.41810
#                  5    198.00000 |****                               198.50785
#                  1    199.00000 |*                                  199.13480
#
#                  9        > 95% |********                           200.74589
#
#        mean of 95%    193.71545
#          95th %ile    199.31784
 for      8.07243 seconds
Running:         writev_t10k# bin/writev -E -C 200 -L -S -W -N writev_t10k -s 10k -B 10 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t10k    1   1    836.89320          177        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    816.87400               816.87400
#                    max   1527.58120               878.28840
#                   mean    859.73347               839.22410
#                 median    840.88680               836.89320
#                 stddev     74.00411                13.85924
#         standard error      5.20691                 1.04172
#   99% confidence level     12.11127                 2.42305
#                   skew      5.01765                 0.51588
#               kurtosis     34.16155                -0.36150
#       time correlation     -0.49696                -0.07139
#
#           elasped time      1.74408
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    816.00000 |*********                          817.54600
#                  7    818.00000 |****************                   819.11949
#                  6    820.00000 |*************                      821.01267
#                 10    822.00000 |**********************             823.05896
#                  8    824.00000 |******************                 825.09800
#                 10    826.00000 |**********************             826.90920
#                  6    828.00000 |*************                      829.39240
#                 10    830.00000 |**********************             830.99752
#                  8    832.00000 |******************                 833.26120
#                 14    834.00000 |********************************   835.05914
#                 11    836.00000 |*************************          836.86062
#                  2    838.00000 |****                               839.23560
#                 11    840.00000 |*************************          840.92404
#                  8    842.00000 |******************                 842.92200
#                  5    844.00000 |***********                        845.36168
#                 11    846.00000 |*************************          846.96098
#                 12    848.00000 |***************************        849.30280
#                  5    850.00000 |***********                        850.91688
#                  5    852.00000 |***********                        853.25672
#                  2    854.00000 |****                               855.46600
#                  3    856.00000 |******                             857.07453
#                  3    858.00000 |******                             859.10547
#                  1    860.00000 |**                                 860.16360
#                  5    862.00000 |***********                        863.05640
#                  1    864.00000 |**                                 864.18280
#
#                  9        > 95% |********************               870.71080
#
#        mean of 95%    837.53731
#          95th %ile    865.87240
 for      1.75954 seconds
Running:        writev_t100k# bin/writev -E -C 200 -L -S -W -N writev_t100k -s 100k -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t100k   1   1   7605.76100          170        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7360.51300              7360.51300
#                    max  14493.69700              8046.84900
#                   mean   7911.77605              7624.87215
#                 median   7637.76100              7605.76100
#                 stddev    965.26590               143.80660
#         standard error     67.91587                11.02946
#   99% confidence level    157.97232                25.65453
#                   skew      4.74524                 0.61670
#               kurtosis     25.94658                -0.03298
#       time correlation     -2.54782                -0.21323
#
#           elasped time      1.60609
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead          255
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   7360.00000 |****                              7360.64100
#                  2   7380.00000 |****                              7398.27300
#                  4   7400.00000 |*********                         7406.91300
#                  3   7420.00000 |*******                           7427.07300
#                 11   7440.00000 |***************************       7450.67155
#                  5   7460.00000 |************                      7464.39780
#                  9   7480.00000 |**********************            7491.86944
#                  6   7500.00000 |**************                    7512.53433
#                  7   7520.00000 |*****************                 7529.47300
#                 11   7540.00000 |***************************       7550.44173
#                 10   7560.00000 |************************          7573.17220
#                 13   7580.00000 |********************************  7591.85823
#                 10   7600.00000 |************************          7610.21540
#                 11   7620.00000 |***************************       7631.38427
#                  7   7640.00000 |*****************                 7650.34157
#                  9   7660.00000 |**********************            7669.81789
#                  6   7680.00000 |**************                    7691.22233
#                  7   7700.00000 |*****************                 7711.92786
#                  4   7720.00000 |*********                         7732.28900
#                  5   7740.00000 |************                      7753.11460
#                  1   7760.00000 |**                                7763.71300
#                  4   7780.00000 |*********                         7786.30500
#                  5   7800.00000 |************                      7811.12420
#                  1   7820.00000 |**                                7821.82500
#                  3   7840.00000 |*******                           7853.73967
#                  4   7860.00000 |*********                         7871.10500
#                  1   7880.00000 |**                                7881.72900
#
#                  9        > 95% |**********************            7962.85256
#
#        mean of 95%   7605.97884
#          95th %ile   7906.56100
 for      1.62142 seconds
 
Running:          writev_u1k# bin/writev -E -C 200 -L -S -W -N writev_u1k -s 1k -B 100 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u1k     1   1    203.54899          183        0      100     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    198.17811               198.17811
#                    max    256.00851               213.42803
#                   mean    206.60762               204.15368
#                 median    204.56787               203.54899
#                 stddev      9.22174                 3.24270
#         standard error      0.64884                 0.23971
#   99% confidence level      1.50920                 0.55756
#                   skew      3.22988                 0.63186
#               kurtosis     11.74334                -0.32690
#       time correlation     -0.03898                 0.00859
#
#           elasped time      4.18103
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    198.00000 |*                                  198.17811
#                  7    199.00000 |*******                            199.74849
#                 25    200.00000 |***************************        200.53741
#                 29    201.00000 |********************************   201.51820
#                 20    202.00000 |**********************             202.42080
#                 14    203.00000 |***************                    203.40837
#                 17    204.00000 |******************                 204.60898
#                 19    205.00000 |********************               205.53205
#                 18    206.00000 |*******************                206.57605
#                  9    207.00000 |*********                          207.31503
#                  5    208.00000 |*****                              208.55225
#                  9    209.00000 |*********                          209.25608
#
#                 10        > 95% |***********                        211.63782
#
#        mean of 95%    203.72107
#          95th %ile    210.68627
 for      4.19237 seconds
Running:         writev_u10k# bin/writev -E -C 200 -L -S -W -N writev_u10k -s 10k -B 10 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u10k    1   1    898.58560          165        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    879.69280               879.69280
#                    max   1168.17920               924.31360
#                   mean    916.00551               899.34910
#                 median    901.60640               898.58560
#                 stddev     46.50982                 8.42911
#         standard error      3.27242                 0.65621
#   99% confidence level      7.61165                 1.52633
#                   skew      3.37429                 0.47479
#               kurtosis     12.48298                -0.08721
#       time correlation     -0.25691                -0.00754
#
#           elasped time      1.85763
#      number of samples          165
#     number of outliers           37
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    878.00000 |**                                 879.69280
#                  0    880.00000 |                                           -
#                  1    882.00000 |**                                 883.68640
#                  1    884.00000 |**                                 884.19840
#                  7    886.00000 |**************                     887.36914
#                 13    888.00000 |**************************         888.97575
#                 11    890.00000 |**********************             890.85440
#                 14    892.00000 |****************************       892.93897
#                 15    894.00000 |******************************     895.01184
#                 14    896.00000 |****************************       896.72046
#                 12    898.00000 |************************           898.75840
#                 16    900.00000 |********************************   901.05120
#                 14    902.00000 |****************************       902.79314
#                 14    904.00000 |****************************       904.76434
#                  7    906.00000 |**************                     906.55086
#                  6    908.00000 |************                       908.85120
#                  2    910.00000 |****                               911.70560
#                  7    912.00000 |**************                     912.96914
#                  1    914.00000 |**                                 914.30400
#
#                  9        > 95% |******************                 917.97333
#
#        mean of 95%    898.27463
#          95th %ile    914.48320
 for      1.87005 seconds
Running:        writev_u100k# bin/writev -E -C 200 -L -S -W -N writev_u100k -s 100k -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u100k   1   1   8082.72600          187        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7844.90200              7844.90200
#                    max  15153.70200              8495.91000
#                   mean   8208.07602              8110.19877
#                 median   8097.83000              8082.72600
#                 stddev    578.87095               132.59696
#         standard error     40.72922                 9.69645
#   99% confidence level     94.73616                22.55394
#                   skew      9.16225                 0.81158
#               kurtosis    101.88624                 0.22630
#       time correlation     -1.62388                -0.19619
#
#           elasped time      1.66495
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7840.00000 |*                                 7844.90200
#                  1   7860.00000 |*                                 7879.71800
#                  1   7880.00000 |*                                 7880.74200
#                  0   7900.00000 |                                           -
#                  6   7920.00000 |*********                         7928.05933
#                  8   7940.00000 |************                      7951.87800
#                  5   7960.00000 |********                          7977.76600
#                 20   7980.00000 |********************************  7991.91000
#                 13   8000.00000 |********************              8008.72231
#                 11   8020.00000 |*****************                 8033.64382
#                 18   8040.00000 |****************************      8050.52689
#                  9   8060.00000 |**************                    8072.25844
#                 10   8080.00000 |****************                  8091.30200
#                  9   8100.00000 |**************                    8107.78556
#                 11   8120.00000 |*****************                 8131.17982
#                  5   8140.00000 |********                          8147.80120
#                  6   8160.00000 |*********                         8172.45400
#                  8   8180.00000 |************                      8190.31000
#                 11   8200.00000 |*****************                 8210.53982
#                  8   8220.00000 |************                      8227.62200
#                  6   8240.00000 |*********                         8254.16067
#                  0   8260.00000 |                                           -
#                  2   8280.00000 |***                               8290.21400
#                  1   8300.00000 |*                                 8309.79800
#                  1   8320.00000 |*                                 8337.95800
#                  2   8340.00000 |***                               8350.24600
#                  1   8360.00000 |*                                 8362.79000
#                  3   8380.00000 |****                              8385.83000
#
#                 10        > 95% |****************                  8431.50040
#
#        mean of 95%   8092.04614
#          95th %ile   8391.71800
 for      1.68439 seconds
 
Running:          writev_n1k# bin/writev -E -C 200 -L -S -W -N writev_n1k -s 1k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n1k     1   1     18.02074          190        0     1000     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.39584                17.39584
#                    max     23.53190                19.09184
#                   mean     18.18868                18.04437
#                 median     18.04583                18.02074
#                 stddev      0.74685                 0.37198
#         standard error      0.05255                 0.02699
#   99% confidence level      0.12223                 0.06277
#                   skew      3.59280                 0.67518
#               kurtosis     18.43087                 0.09645
#       time correlation     -0.00159                -0.00009
#
#           elasped time      3.68097
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          127
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 89     17.00000 |*******************************     17.73978
#                 91     18.00000 |********************************    18.24422
#
#                 10        > 95% |***                                 18.93665
#
#        mean of 95%     17.99480
#          95th %ile     18.78797
 for      3.69020 seconds
Running:         writev_n10k# bin/writev -E -C 200 -L -S -W -N writev_n10k -s 10k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n10k    1   1     17.84685          186        0     1000    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.37580                17.37580
#                    max     24.59091                18.75565
#                   mean     18.04523                17.88039
#                 median     17.88499                17.84685
#                 stddev      0.74625                 0.29654
#         standard error      0.05251                 0.02174
#   99% confidence level      0.12213                 0.05057
#                   skew      4.60049                 0.74554
#               kurtosis     30.94305                 0.26622
#       time correlation     -0.00057                 0.00006
#
#           elasped time      3.65344
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                132     17.00000 |********************************    17.72877
#                 44     18.00000 |**********                          18.16811
#
#                 10        > 95% |**                                  18.61577
#
#        mean of 95%     17.83861
#          95th %ile     18.44691
 for      3.66247 seconds
Running:        writev_n100k# bin/writev -E -C 200 -L -S -W -N writev_n100k -s 100k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n100k   1   1     17.73983          191        0     1000   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.32869                17.32869
#                    max     22.21983                18.74770
#                   mean     17.91222                17.81843
#                 median     17.75877                17.73983
#                 stddev      0.53748                 0.31090
#         standard error      0.03782                 0.02250
#   99% confidence level      0.08796                 0.05233
#                   skew      3.49870                 1.05119
#               kurtosis     20.43389                 0.86433
#       time correlation     -0.00147                 0.00005
#
#           elasped time      3.62610
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          206
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                150     17.00000 |********************************    17.68732
#                 31     18.00000 |******                              18.18350
#
#                 10        > 95% |**                                  18.65331
#
#        mean of 95%     17.77230
#          95th %ile     18.48095
 for      3.63642 seconds
 
Running:           pread_t1k# bin/pread -E -C 200 -L -S -W -N pread_t1k -s 1k -I 150 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t1k      1   1     19.19056          188        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     18.62128                18.62128
#                    max     27.07966                20.39483
#                   mean     19.41889                19.26457
#                 median     19.21900                19.19056
#                 stddev      0.81030                 0.39480
#         standard error      0.05701                 0.02879
#   99% confidence level      0.13261                 0.06698
#                   skew      4.93163                 0.81755
#               kurtosis     39.10059                -0.07919
#       time correlation     -0.00123                -0.00055
#
#           elasped time      2.61860
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          145
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 56     18.00000 |**************                      18.86734
#                121     19.00000 |********************************    19.36448
#                  1     20.00000 |*                                   20.05388
#
#                 10        > 95% |**                                  20.20118
#
#        mean of 95%     19.21195
#          95th %ile     20.08540
 for      2.64604 seconds
Running:          pread_t10k# bin/pread -E -C 200 -L -S -W -N pread_t10k -s 10k -I 500 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t10k     1   1     45.91021          187        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     44.09901                44.09901
#                    max     62.30957                49.39949
#                   mean     46.67824                46.19067
#                 median     46.04333                45.91021
#                 stddev      2.18438                 1.11714
#         standard error      0.15369                 0.08169
#   99% confidence level      0.35749                 0.19002
#                   skew      3.03784                 0.88081
#               kurtosis     13.98669                 0.08041
#       time correlation     -0.00895                -0.00261
#
#           elasped time      1.89094
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 16     44.00000 |******                              44.75277
#                 84     45.00000 |********************************    45.47829
#                 45     46.00000 |*****************                   46.41015
#                 24     47.00000 |*********                           47.44482
#                  8     48.00000 |***                                 48.21533
#
#                 10        > 95% |***                                 48.85805
#
#        mean of 95%     46.03997
#          95th %ile     48.42413
 for      1.90724 seconds
Running:         pread_t100k# bin/pread -E -C 200 -L -S -W -N pread_t100k -s 100k -I 5000 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t100k    1   1    340.68445          182        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    328.98525               328.98525
#                    max    503.93565               356.58205
#                   mean    345.68982               341.46680
#                 median    341.42685               340.68445
#                 stddev     17.91967                 5.45351
#         standard error      1.26082                 0.40424
#   99% confidence level      2.93268                 0.94027
#                   skew      5.23507                 0.64816
#               kurtosis     35.93592                 0.46964
#       time correlation     -0.04212                -0.03169
#
#           elasped time      1.40115
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          263
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    328.00000 |*                                  328.98525
#                  0    329.00000 |                                           -
#                  2    330.00000 |***                                330.44445
#                  2    331.00000 |***                                331.64125
#                  1    332.00000 |*                                  332.82525
#                  5    333.00000 |********                           333.69565
#                  6    334.00000 |**********                         334.34632
#                  7    335.00000 |***********                        335.48582
#                  9    336.00000 |***************                    336.43769
#                 14    337.00000 |***********************            337.52559
#                 14    338.00000 |***********************            338.55965
#                 15    339.00000 |*************************          339.48296
#                 19    340.00000 |********************************   340.46011
#                 16    341.00000 |**************************         341.42525
#                 11    342.00000 |******************                 342.51020
#                 15    343.00000 |*************************          343.51154
#                  4    344.00000 |******                             344.64925
#                 10    345.00000 |****************                   345.66109
#                  9    346.00000 |***************                    346.64641
#                  3    347.00000 |*****                              347.61778
#                  1    348.00000 |*                                  348.74845
#                  2    349.00000 |***                                349.43965
#                  2    350.00000 |***                                350.48285
#                  4    351.00000 |******                             351.34045
#
#                 10        > 95% |****************                   354.89757
#
#        mean of 95%    340.68594
#          95th %ile    351.53885
 for      1.41381 seconds
 
Running:           pread_u1k# bin/pread -E -C 200 -L -S -W -N pread_u1k -s 1k -I 150 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u1k      1   1     18.43978          188        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.97429                17.97429
#                    max     21.76394                19.66020
#                   mean     18.70336                18.56634
#                 median     18.50743                18.43978
#                 stddev      0.66455                 0.41594
#         standard error      0.04676                 0.03034
#   99% confidence level      0.10876                 0.07056
#                   skew      1.98566                 0.82569
#               kurtosis      4.88150                -0.22331
#       time correlation     -0.00264                -0.00043
#
#           elasped time      2.52149
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          193
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     17.00000 |*                                   17.97429
#                157     18.00000 |********************************    18.42840
#                 20     19.00000 |****                                19.18553
#
#                 10        > 95% |**                                  19.55281
#
#        mean of 95%     18.51092
#          95th %ile     19.42919
 for      2.53178 seconds
Running:          pread_u10k# bin/pread -E -C 200 -L -S -W -N pread_u10k -s 10k -I 500 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u10k     1   1     39.28360          182        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     38.05864                38.05864
#                    max     51.12488                43.09416
#                   mean     40.29613                39.68621
#                 median     39.36424                39.28360
#                 stddev      2.26686                 1.22998
#         standard error      0.15950                 0.09117
#   99% confidence level      0.37099                 0.21207
#                   skew      2.00670                 1.23694
#               kurtosis      4.29106                 0.52469
#       time correlation     -0.00749                 0.00070
#
#           elasped time      1.63252
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 58     38.00000 |**********************              38.64903
#                 81     39.00000 |********************************    39.38992
#                  8     40.00000 |***                                 40.40728
#                 20     41.00000 |*******                             41.42056
#                  5     42.00000 |*                                   42.22530
#
#                 10        > 95% |***                                 42.78670
#
#        mean of 95%     39.50595
#          95th %ile     42.42856
 for      1.64312 seconds
Running:         pread_u100k# bin/pread -E -C 200 -L -S -W -N pread_u100k -s 100k -I 5000 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u100k    1   1    264.84480          179        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    256.55040               256.55040
#                    max    364.49280               278.29760
#                   mean    269.25592               265.28644
#                 median    265.54880               264.84480
#                 stddev     13.53115                 4.42137
#         standard error      0.95205                 0.33047
#   99% confidence level      2.21447                 0.76867
#                   skew      3.43307                 0.61103
#               kurtosis     15.58600                 0.31057
#       time correlation     -0.05514                -0.01447
#
#           elasped time      1.09268
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    256.00000 |***                                256.57600
#                  3    257.00000 |****                               257.55733
#                  4    258.00000 |******                             258.43520
#                 10    259.00000 |****************                   259.59168
#                  9    260.00000 |**************                     260.46009
#                 11    261.00000 |*****************                  261.44233
#                 18    262.00000 |****************************       262.40071
#                 16    263.00000 |*************************          263.40000
#                 18    264.00000 |****************************       264.40320
#                 20    265.00000 |********************************   265.46624
#                 13    266.00000 |********************               266.56886
#                 12    267.00000 |*******************                267.41440
#                  9    268.00000 |**************                     268.61796
#                 11    269.00000 |*****************                  269.61105
#                  5    270.00000 |********                           270.65088
#                  4    271.00000 |******                             271.31200
#                  5    272.00000 |********                           272.50432
#
#                  9        > 95% |**************                     276.21262
#
#        mean of 95%    264.70799
#          95th %ile    273.10080
 for      1.10452 seconds
 
Running:           pread_z1k# bin/pread -E -C 200 -L -S -W -N pread_z1k -s 1k -I 150 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z1k      1   1     14.12420          192        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.67832                13.67832
#                    max     18.21713                15.50261
#                   mean     14.36956                14.24898
#                 median     14.14381                14.12420
#                 stddev      0.70501                 0.42542
#         standard error      0.04960                 0.03070
#   99% confidence level      0.11538                 0.07141
#                   skew      2.80550                 1.37112
#               kurtosis     10.09277                 1.07144
#       time correlation     -0.00357                -0.00196
#
#           elasped time      1.93875
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          256
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 66     13.00000 |*******************                 13.90268
#                107     14.00000 |********************************    14.28279
#                  9     15.00000 |**                                  15.11220
#
#                 10        > 95% |**                                  15.39586
#
#        mean of 95%     14.18596
#          95th %ile     15.31195
 for      1.95055 seconds
Running:          pread_z10k# bin/pread -E -C 200 -L -S -W -N pread_z10k -s 10k -I 500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z10k     1   1     30.57958          177        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     29.68485                29.68485
#                    max     39.83910                32.71845
#                   mean     31.27051                30.77439
#                 median     30.61926                30.57958
#                 stddev      1.59509                 0.66921
#         standard error      0.11223                 0.05030
#   99% confidence level      0.26105                 0.11700
#                   skew      2.53182                 1.15681
#               kurtosis      7.90061                 0.64308
#       time correlation     -0.01239                -0.00465
#
#           elasped time      1.26813
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     29.00000 |*                                   29.88923
#                122     30.00000 |********************************    30.44990
#                 34     31.00000 |********                            31.39215
#                  6     32.00000 |*                                   32.12731
#
#                  9        > 95% |**                                  32.52745
#
#        mean of 95%     30.68047
#          95th %ile     32.23974
 for      1.28083 seconds
Running:         pread_z100k# bin/pread -E -C 200 -L -S -W -N pread_z100k -s 100k -I 2000 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z100k    1   1    211.93192          182        0       50   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    205.37320               205.37320
#                    max    272.93160               223.25224
#                   mean    214.89871               212.53265
#                 median    212.39272               211.93192
#                 stddev      9.03825                 3.60949
#         standard error      0.63593                 0.26755
#   99% confidence level      1.47917                 0.62233
#                   skew      3.49783                 0.99222
#               kurtosis     16.25601                 0.71365
#       time correlation     -0.04454                -0.00908
#
#           elasped time      2.17573
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          268
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    205.00000 |*                                  205.37320
#                  1    206.00000 |*                                  206.93480
#                  6    207.00000 |*******                            207.56712
#                 14    208.00000 |****************                   208.56881
#                 27    209.00000 |********************************   209.47034
#                 22    210.00000 |**************************         210.42431
#                 23    211.00000 |***************************        211.52944
#                 23    212.00000 |***************************        212.50491
#                 15    213.00000 |*****************                  213.45768
#                 13    214.00000 |***************                    214.51161
#                 11    215.00000 |*************                      215.40049
#                  4    216.00000 |****                               216.53608
#                  2    217.00000 |**                                 217.49480
#                  8    218.00000 |*********                          218.34280
#                  2    219.00000 |**                                 219.41224
#
#                 10        > 95% |***********                        221.88213
#
#        mean of 95%    211.98907
#          95th %ile    219.91400
 for      2.19106 seconds
Running:        pread_zw100k# bin/pread -E -C 200 -L -S -W -N pread_zw100k -s 100k -w -I 2500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_zw100k   1   1    219.29850          191        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    211.64410               211.64410
#                    max    301.22490               231.29850
#                   mean    221.50403               219.63777
#                 median    219.39450               219.29850
#                 stddev     10.28343                 3.94323
#         standard error      0.72354                 0.28532
#   99% confidence level      1.68295                 0.66366
#                   skew      4.83684                 0.78888
#               kurtosis     28.65375                 0.62452
#       time correlation     -0.05576                -0.01412
#
#           elasped time      1.79469
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    211.00000 |*                                  211.64410
#                  2    212.00000 |**                                 212.48250
#                  7    213.00000 |*******                            213.52387
#                 10    214.00000 |**********                         214.67386
#                 12    215.00000 |************                       215.53050
#                 19    216.00000 |*******************                216.49631
#                 13    217.00000 |*************                      217.69308
#                 21    218.00000 |*********************              218.62132
#                 32    219.00000 |********************************   219.42830
#                 24    220.00000 |************************           220.55290
#                 14    221.00000 |**************                     221.37941
#                  6    222.00000 |******                             222.43450
#                  5    223.00000 |*****                              223.60698
#                  4    224.00000 |****                               224.69050
#                  4    225.00000 |****                               225.58170
#                  4    226.00000 |****                               226.32250
#                  3    227.00000 |***                                227.36037
#
#                 10        > 95% |**********                         229.65562
#
#        mean of 95%    219.08429
#          95th %ile    227.89370
 for      1.81232 seconds
 
Running:          pwrite_t1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t1k -s 1k -I 500 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t1k     1   1     34.23931          190        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.66875                32.66875
#                    max     58.28539                37.38939
#                   mean     34.88197                34.44478
#                 median     34.30971                34.23931
#                 stddev      2.39811                 1.02459
#         standard error      0.16873                 0.07433
#   99% confidence level      0.39247                 0.17290
#                   skew      5.53658                 1.16373
#               kurtosis     45.06890                 0.82439
#       time correlation      0.00009                -0.00078
#
#           elasped time      1.41685
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          139
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     32.00000 |*                                   32.89019
#                 74     33.00000 |*******************************     33.65921
#                 75     34.00000 |********************************    34.43731
#                 16     35.00000 |******                              35.46683
#                 11     36.00000 |****                                36.45487
#
#                 10        > 95% |****                                37.08948
#
#        mean of 95%     34.29785
#          95th %ile     36.71867
 for      1.44273 seconds
Running:         pwrite_t10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t10k -s 10k -I 1000 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t10k    1   1     95.10028          185        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     91.27820                91.27820
#                    max    145.30700               100.64012
#                   mean     96.66372                95.39299
#                 median     95.22828                95.10028
#                 stddev      6.01085                 1.77595
#         standard error      0.42292                 0.13057
#   99% confidence level      0.98372                 0.30371
#                   skew      5.73802                 0.67202
#               kurtosis     40.12078                 0.41351
#       time correlation     -0.00964                -0.00759
#
#           elasped time      1.95799
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          116
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     91.00000 |**                                  91.61100
#                  5     92.00000 |***                                 92.78706
#                 28     93.00000 |*****************                   93.56410
#                 52     94.00000 |********************************    94.56337
#                 43     95.00000 |**************************          95.46082
#                 20     96.00000 |************                        96.47142
#                 15     97.00000 |*********                           97.49951
#                  8     98.00000 |****                                98.33100
#
#                 10        > 95% |******                              99.68498
#
#        mean of 95%     95.14774
#          95th %ile     98.83788
 for      1.96883 seconds
Running:        pwrite_t100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t100k -s 100k -I 10000 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t100k   1   1    740.58190          185        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    704.97230               704.97230
#                    max   1316.99150               795.08430
#                   mean    756.77732               743.26423
#                 median    742.16910               740.58190
#                 stddev     59.01428                17.97588
#         standard error      4.15223                 1.32161
#   99% confidence level      9.65809                 3.07407
#                   skew      5.38539                 0.79166
#               kurtosis     40.91108                 0.50498
#       time correlation      0.04768                -0.09566
#
#           elasped time      1.53384
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          261
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    702.00000 |*                                  704.97230
#                  0    705.00000 |                                           -
#                  2    708.00000 |***                                709.88750
#                  1    711.00000 |*                                  713.18990
#                  5    714.00000 |********                           716.05710
#                  3    717.00000 |*****                              719.23150
#                  5    720.00000 |********                           722.07310
#                 12    723.00000 |*********************              724.84217
#                  7    726.00000 |************                       727.37961
#                 11    729.00000 |*******************                730.78874
#                 18    732.00000 |********************************   733.36554
#                 16    735.00000 |****************************       736.28110
#                 13    738.00000 |***********************            739.50473
#                 14    741.00000 |************************           742.20933
#                 10    744.00000 |*****************                  745.23598
#                 16    747.00000 |****************************       748.05550
#                  9    750.00000 |****************                   751.69799
#                 10    753.00000 |*****************                  754.61070
#                  4    756.00000 |*******                            757.05550
#                  1    759.00000 |*                                  761.47150
#                  1    762.00000 |*                                  762.08590
#                  4    765.00000 |*******                            767.00110
#                  3    768.00000 |*****                              768.64803
#                  6    771.00000 |**********                         772.82510
#                  2    774.00000 |***                                775.18030
#                  1    777.00000 |*                                  777.77870
#
#                 10        > 95% |*****************                  788.01358
#
#        mean of 95%    740.70712
#          95th %ile    778.98190
 for      1.54627 seconds
 
Running:          pwrite_u1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u1k -s 1k -I 500 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u1k     1   1     35.87877          174        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     34.27364                34.27364
#                    max     56.52388                38.36453
#                   mean     37.02385                36.00390
#                 median     36.11941                35.87877
#                 stddev      3.25077                 0.89322
#         standard error      0.22872                 0.06771
#   99% confidence level      0.53201                 0.15750
#                   skew      3.43807                 0.48300
#               kurtosis     13.98270                -0.27532
#       time correlation     -0.00134                 0.00154
#
#           elasped time      1.50082
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 22     34.00000 |*********                           34.72758
#                 73     35.00000 |********************************    35.52249
#                 54     36.00000 |***********************             36.45420
#                 16     37.00000 |*******                             37.29845
#
#                  9        > 95% |***                                 38.02547
#
#        mean of 95%     35.89364
#          95th %ile     37.56964
 for      1.51126 seconds
Running:         pwrite_u10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u10k -s 10k -I 1000 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u10k    1   1     99.38944          190        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     96.37120                96.37120
#                    max    129.75872               105.54880
#                   mean    100.25268                99.60995
#                 median     99.52000                99.38944
#                 stddev      3.59866                 2.02260
#         standard error      0.25320                 0.14674
#   99% confidence level      0.58894                 0.34131
#                   skew      3.72421                 0.88157
#               kurtosis     23.04467                 0.41855
#       time correlation     -0.01574                -0.00597
#
#           elasped time      2.03060
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 13     96.00000 |********                            96.77312
#                 31     97.00000 |********************                97.57721
#                 35     98.00000 |***********************             98.50229
#                 48     99.00000 |********************************    99.50784
#                 25    100.00000 |****************                   100.42030
#                 13    101.00000 |********                           101.45162
#                 10    102.00000 |******                             102.56205
#                  5    103.00000 |***                                103.39994
#
#                 10        > 95% |******                             104.69914
#
#        mean of 95%     99.32722
#          95th %ile    104.02048
 for      2.04127 seconds
Running:        pwrite_u100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u100k -s 100k -I 10000 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u100k   1   1    789.69410          175        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    768.08770               768.08770
#                    max   1069.06690               817.39330
#                   mean    802.60499               790.15973
#                 median    791.58850               789.69410
#                 stddev     41.23439                 9.65304
#         standard error      2.90124                 0.72970
#   99% confidence level      6.74829                 1.69728
#                   skew      4.02817                 0.45964
#               kurtosis     19.62240                 0.04505
#       time correlation     -0.16364                 0.01819
#
#           elasped time      1.62623
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          147
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    768.00000 |***                                768.34370
#                  1    770.00000 |*                                  770.87810
#                  1    772.00000 |*                                  773.28450
#                  2    774.00000 |***                                774.78210
#                 12    776.00000 |********************               777.48717
#                  8    778.00000 |*************                      779.14690
#                  9    780.00000 |***************                    781.08966
#                 16    782.00000 |**************************         783.15650
#                 13    784.00000 |*********************              785.04475
#                 15    786.00000 |*************************          786.87298
#                 10    788.00000 |****************                   789.08482
#                 19    790.00000 |********************************   791.27187
#                 14    792.00000 |***********************            793.11170
#                  8    794.00000 |*************                      794.69250
#                 10    796.00000 |****************                   797.08738
#                 12    798.00000 |********************               799.02103
#                  4    800.00000 |******                             800.73410
#                  3    802.00000 |*****                              803.04877
#                  3    804.00000 |*****                              805.19063
#                  2    806.00000 |***                                806.03970
#                  2    808.00000 |***                                808.74050
#
#                  9        > 95% |***************                    812.56343
#
#        mean of 95%    788.94507
#          95th %ile    809.09890
 for      1.63854 seconds
 
Running:          pwrite_n1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n1k -s 1k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n1k     1   1      0.87603          181        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.83098                 0.83098
#                    max      1.51219                 0.99610
#                   mean      0.91418                 0.88569
#                 median      0.87885                 0.87603
#                 stddev      0.10193                 0.03883
#         standard error      0.00717                 0.00289
#   99% confidence level      0.01668                 0.00671
#                   skew      3.08201                 1.20588
#               kurtosis     11.46087                 0.66315
#       time correlation     -0.00024                -0.00006
#
#           elasped time      0.18796
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.87988
#
#                 10        > 95% |*                                    0.98491
#
#        mean of 95%      0.87988
#          95th %ile      0.97587
 for      0.19894 seconds
Running:         pwrite_n10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n10k -s 10k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n10k    1   1      0.87886          183        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.81691                 0.81691
#                    max      1.76180                 1.10977
#                   mean      0.94457                 0.90880
#                 median      0.88270                 0.87886
#                 stddev      0.13563                 0.06738
#         standard error      0.00954                 0.00498
#   99% confidence level      0.02220                 0.01159
#                   skew      2.48198                 1.32258
#               kurtosis      7.87397                 0.70629
#       time correlation     -0.00005                 0.00000
#
#           elasped time      0.19448
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          246
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                160      0.00000 |********************************     0.88832
#                 13      1.00000 |**                                   1.02582
#
#                 10        > 95% |**                                   1.08435
#
#        mean of 95%      0.89865
#          95th %ile      1.05780
 for      0.20915 seconds
Running:        pwrite_n100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n100k -s 100k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n100k   1   1      0.89395          198        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.83994                 0.83994
#                    max      1.82707                 1.42490
#                   mean      0.98381                 0.97169
#                 median      0.89498                 0.89395
#                 stddev      0.17437                 0.15213
#         standard error      0.01227                 0.01081
#   99% confidence level      0.02854                 0.02515
#                   skew      1.74253                 1.44635
#               kurtosis      2.82899                 0.81889
#       time correlation      0.00007                 0.00002
#
#           elasped time      0.20231
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                143      0.00000 |********************************     0.88751
#                 45      1.00000 |**********                           1.15083
#
#                 10        > 95% |**                                   1.36919
#
#        mean of 95%      0.95054
#          95th %ile      1.31405
 for      0.21240 seconds
 
Running:            mmap_z8k# bin/mmap -E -C 200 -L -S -W -N mmap_z8k -l 8k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z8k       1   1     10.69357          185        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.08163                10.08163
#                    max     21.77845                11.89823
#                   mean     11.02736                10.78212
#                 median     10.75661                10.69357
#                 stddev      1.16194                 0.38231
#         standard error      0.08175                 0.02811
#   99% confidence level      0.19016                 0.06538
#                   skew      5.66335                 0.78873
#               kurtosis     42.09853                 0.26471
#       time correlation     -0.00149                -0.00017
#
#           elasped time      1.57879
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                139     10.00000 |********************************    10.60552
#                 36     11.00000 |********                            11.20034
#
#                 10        > 95% |**                                  11.73126
#
#        mean of 95%     10.72788
#          95th %ile     11.60072
 for      1.60332 seconds
Running:          mmap_z128k# bin/mmap -E -C 200 -L -S -W -N mmap_z128k -l 128k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z128k     1   1     11.09878          185        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.59370                10.59370
#                    max     17.20050                12.14661
#                   mean     11.32038                11.15735
#                 median     11.14952                11.09878
#                 stddev      0.71217                 0.33002
#         standard error      0.05011                 0.02426
#   99% confidence level      0.11655                 0.05644
#                   skew      3.89817                 0.92401
#               kurtosis     23.90922                 0.55530
#       time correlation     -0.00116                -0.00033
#
#           elasped time      1.62546
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 73     10.00000 |**********************              10.86477
#                102     11.00000 |********************************    11.28303
#
#                 10        > 95% |***                                 12.01123
#
#        mean of 95%     11.10855
#          95th %ile     11.87600
 for      1.63607 seconds
Running:            mmap_t8k# bin/mmap -E -C 200 -L -S -W -N mmap_t8k -l 8k -I 300 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t8k       1   1     11.35032          176        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.67226                10.67226
#                    max     15.82840                12.14599
#                   mean     11.60980                11.38072
#                 median     11.42258                11.35032
#                 stddev      0.72105                 0.28368
#         standard error      0.05073                 0.02138
#   99% confidence level      0.11800                 0.04974
#                   skew      2.63643                 0.29241
#               kurtosis      9.15904                -0.39150
#       time correlation     -0.00336                 0.00073
#
#           elasped time      1.60320
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          184
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 13     10.00000 |**                                  10.91100
#                154     11.00000 |********************************    11.38441
#
#                  9        > 95% |*                                   11.99600
#
#        mean of 95%     11.34756
#          95th %ile     11.88231
 for      1.61625 seconds
Running:          mmap_t128k# bin/mmap -E -C 200 -L -S -W -N mmap_t128k -l 128k -I 300 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t128k     1   1     11.27266          185        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.54925                10.54925
#                    max     15.06500                12.06834
#                   mean     11.40627                11.26399
#                 median     11.30264                11.27266
#                 stddev      0.58761                 0.28683
#         standard error      0.04134                 0.02109
#   99% confidence level      0.09617                 0.04905
#                   skew      2.75945                 0.25804
#               kurtosis     10.77922                -0.07669
#       time correlation     -0.00329                -0.00112
#
#           elasped time      1.59626
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          188
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 34     10.00000 |*******                             10.86888
#                141     11.00000 |********************************    11.31440
#
#                 10        > 95% |**                                  11.89659
#
#        mean of 95%     11.22784
#          95th %ile     11.72931
 for      1.60591 seconds
Running:            mmap_u8k# bin/mmap -E -C 200 -L -S -W -N mmap_u8k -l 8k -I 300 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u8k       1   1     11.14960          176        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.61454                10.61454
#                    max     18.47366                11.85533
#                   mean     11.45793                11.16501
#                 median     11.19189                11.14960
#                 stddev      0.96405                 0.23927
#         standard error      0.06783                 0.01804
#   99% confidence level      0.15777                 0.04195
#                   skew      3.89910                 0.34429
#               kurtosis     19.49901                 0.06872
#       time correlation     -0.00395                -0.00028
#
#           elasped time      1.60598
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          206
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 48     10.00000 |************                        10.88904
#                119     11.00000 |********************************    11.23486
#
#                  9        > 95% |**                                  11.71320
#
#        mean of 95%     11.13546
#          95th %ile     11.58242
 for      1.61736 seconds
Running:          mmap_u128k# bin/mmap -E -C 200 -L -S -W -N mmap_u128k -l 128k -I 300 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u128k     1   1     11.01740          186        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.37164                10.37164
#                    max     22.14687                12.19439
#                   mean     11.28611                11.07538
#                 median     11.05661                11.01740
#                 stddev      1.05009                 0.37406
#         standard error      0.07388                 0.02743
#   99% confidence level      0.17185                 0.06380
#                   skew      6.40460                 0.90535
#               kurtosis     57.43380                 0.52619
#       time correlation     -0.00526                -0.00199
#
#           elasped time      1.57459
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          197
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 87     10.00000 |*******************************     10.76807
#                 89     11.00000 |********************************    11.26690
#
#                 10        > 95% |***                                 12.04448
#
#        mean of 95%     11.02032
#          95th %ile     11.87074
 for      1.59312 seconds
Running:            mmap_a8k# bin/mmap -E -C 200 -L -S -W -N mmap_a8k -l 8k -I 200 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a8k       1   1      6.02010          169        0      500     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.78202                 5.78202
#                    max     11.64032                 6.45990
#                   mean      6.23012                 6.03260
#                 median      6.05594                 6.02010
#                 stddev      0.60720                 0.14728
#         standard error      0.04272                 0.01133
#   99% confidence level      0.09937                 0.02635
#                   skew      4.67610                 0.68550
#               kurtosis     32.18038                 0.16602
#       time correlation     -0.00050                 0.00054
#
#           elasped time      2.72864
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 75      5.00000 |****************************         5.90402
#                 85      6.00000 |********************************     6.10853
#
#                  9        > 95% |***                                  6.38703
#
#        mean of 95%      6.01266
#          95th %ile      6.31808
 for      2.74227 seconds
Running:          mmap_a128k# bin/mmap -E -C 200 -L -S -W -N mmap_a128k -l 128k -I 200 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a128k     1   1      6.14991          176        0      500   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.84578                 5.84578
#                    max      9.40982                 6.64758
#                   mean      6.33343                 6.16653
#                 median      6.18985                 6.14991
#                 stddev      0.54307                 0.16967
#         standard error      0.03821                 0.01279
#   99% confidence level      0.08888                 0.02975
#                   skew      3.29814                 0.53790
#               kurtosis     13.19554                -0.12662
#       time correlation      0.00011                -0.00050
#
#           elasped time      2.77910
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          116
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 31      5.00000 |*******                              5.94524
#                136      6.00000 |********************************     6.19047
#
#                  9        > 95% |**                                   6.56702
#
#        mean of 95%      6.14495
#          95th %ile      6.51343
 for      2.79029 seconds
 
Running:           mmap_rz8k# bin/mmap -E -C 200 -L -S -W -N mmap_rz8k -l 8k -I 1000 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz8k      1   1     63.82748          176        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     60.43804                60.43804
#                    max    135.89916                72.19868
#                   mean     67.88246                64.56067
#                 median     64.11932                63.82748
#                 stddev     11.19004                 2.55258
#         standard error      0.78733                 0.19241
#   99% confidence level      1.83133                 0.44754
#                   skew      3.71375                 1.00293
#               kurtosis     15.09114                 0.36197
#       time correlation     -0.04432                -0.01029
#
#           elasped time      2.29682
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          100
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     60.00000 |**                                  60.78812
#                 16     61.00000 |***********                         61.64092
#                 32     62.00000 |**********************              62.54580
#                 46     63.00000 |********************************    63.51538
#                 22     64.00000 |***************                     64.50123
#                 11     65.00000 |*******                             65.28552
#                 10     66.00000 |******                              66.44534
#                 15     67.00000 |**********                          67.41745
#                  6     68.00000 |****                                68.60188
#                  5     69.00000 |***                                 69.33506
#
#                  9        > 95% |******                              70.99207
#
#        mean of 95%     64.21407
#          95th %ile     69.84860
 for      2.32553 seconds
Running:         mmap_rz128k# bin/mmap -E -C 200 -L -S -W -N mmap_rz128k -l 128k -I 1000 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz128k    1   1    511.38884          186        0      100   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    495.23780               495.23780
#                    max    700.14788               551.68836
#                   mean    520.55446               514.26294
#                 median    512.04932               511.38884
#                 stddev     27.49393                12.56022
#         standard error      1.93447                 0.92096
#   99% confidence level      4.49957                 2.14215
#                   skew      3.39861                 1.13196
#               kurtosis     15.18365                 0.87460
#       time correlation     -0.09941                -0.03756
#
#           elasped time     11.49201
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          188
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    494.00000 |****                               495.39823
#                  4    496.00000 |******                             497.19108
#                  4    498.00000 |******                             498.98244
#                 10    500.00000 |***************                    500.93508
#                 10    502.00000 |***************                    503.11006
#                 21    504.00000 |********************************   505.06479
#                 19    506.00000 |****************************       506.99992
#                 15    508.00000 |**********************             508.91315
#                 14    510.00000 |*********************              511.14454
#                 11    512.00000 |****************                   512.73261
#                 12    514.00000 |******************                 515.35897
#                 11    516.00000 |****************                   517.11230
#                  2    518.00000 |***                                519.36836
#                 10    520.00000 |***************                    521.04849
#                  8    522.00000 |************                       523.07940
#                  5    524.00000 |*******                            524.61585
#                  3    526.00000 |****                               526.43396
#                  2    528.00000 |***                                528.59332
#                  2    530.00000 |***                                531.07652
#                  1    532.00000 |*                                  533.51748
#                  3    534.00000 |****                               534.92207
#                  4    536.00000 |******                             537.02724
#                  1    538.00000 |*                                  538.59908
#                  1    540.00000 |*                                  541.09764
#
#                 10        > 95% |***************                    547.82174
#
#        mean of 95%    512.35619
#          95th %ile    543.52964
 for     11.50682 seconds
Running:           mmap_rt8k# bin/mmap -E -C 200 -L -S -W -N mmap_rt8k -l 8k -I 1000 -r -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt8k      1   1     64.93844          178        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     62.63956                62.63956
#                    max     87.24884                68.98836
#                   mean     66.08768                65.03992
#                 median     65.05876                64.93844
#                 stddev      3.59271                 1.37511
#         standard error      0.25278                 0.10307
#   99% confidence level      0.58797                 0.23974
#                   skew      3.21785                 0.86221
#               kurtosis     13.56116                 0.63791
#       time correlation     -0.00890                -0.00191
#
#           elasped time      2.33963
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          108
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     62.00000 |***                                 62.79316
#                 34     63.00000 |*******************                 63.57050
#                 56     64.00000 |********************************    64.52207
#                 51     65.00000 |*****************************       65.43749
#                 15     66.00000 |********                            66.52120
#                  6     67.00000 |***                                 67.48863
#                  1     68.00000 |*                                   68.10004
#
#                  9        > 95% |*****                               68.61688
#
#        mean of 95%     64.84943
#          95th %ile     68.17940
 for      2.35031 seconds
Running:         mmap_rt128k# bin/mmap -E -C 200 -L -S -W -N mmap_rt128k -l 128k -I 10000 -r -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt128k    1   1    318.88520          183        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    300.09480               300.09480
#                    max    444.29960               345.58600
#                   mean    325.72484               320.56025
#                 median    320.67720               318.88520
#                 stddev     19.61946                 8.38294
#         standard error      1.38042                 0.61968
#   99% confidence level      3.21086                 1.44139
#                   skew      2.88643                 0.44257
#               kurtosis     10.63708                 0.05848
#       time correlation     -0.06554                -0.03531
#
#           elasped time      0.84012
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          140
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    300.00000 |*                                  300.09480
#                  3    302.00000 |***                                303.32040
#                  2    304.00000 |**                                 305.38120
#                  1    306.00000 |*                                  307.69800
#                  4    308.00000 |****                               309.06120
#                 14    310.00000 |***************                    310.83583
#                 14    312.00000 |***************                    312.94051
#                 16    314.00000 |*****************                  314.97960
#                 29    316.00000 |********************************   317.25739
#                 13    318.00000 |**************                     318.90292
#                 16    320.00000 |*****************                  321.10760
#                 11    322.00000 |************                       322.86949
#                 15    324.00000 |****************                   324.85683
#                 10    326.00000 |***********                        327.01832
#                  8    328.00000 |********                           329.27240
#                  7    330.00000 |*******                            331.04520
#                  8    332.00000 |********                           333.47400
#                  1    334.00000 |*                                  335.06440
#
#                 10        > 95% |***********                        339.23464
#
#        mean of 95%    319.48081
#          95th %ile    335.37160
 for      0.85140 seconds
Running:           mmap_ru8k# bin/mmap -E -C 200 -L -S -W -N mmap_ru8k -l 8k -I 1000 -r -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru8k      1   1     65.03936          189        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     62.11072                62.11072
#                    max    116.00896                73.35936
#                   mean     67.14061                65.79442
#                 median     65.24928                65.03936
#                 stddev      6.51528                 2.59536
#         standard error      0.45841                 0.18878
#   99% confidence level      1.06627                 0.43911
#                   skew      4.36428                 1.12301
#               kurtosis     24.94743                 0.62571
#       time correlation     -0.01947                -0.00599
#
#           elasped time      2.40353
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 15     62.00000 |***********                         62.68535
#                 34     63.00000 |*************************           63.55720
#                 43     64.00000 |********************************    64.42835
#                 30     65.00000 |**********************              65.44077
#                 19     66.00000 |**************                      66.52160
#                 16     67.00000 |***********                         67.43408
#                  7     68.00000 |*****                               68.65079
#                  6     69.00000 |****                                69.51296
#                  8     70.00000 |*****                               70.36928
#                  1     71.00000 |*                                   71.09888
#
#                 10        > 95% |*******                             72.57370
#
#        mean of 95%     65.41569
#          95th %ile     71.23968
 for      2.41436 seconds
Running:         mmap_ru128k# bin/mmap -E -C 200 -L -S -W -N mmap_ru128k -l 128k -I 10000 -r -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru128k    1   1    327.06950          173        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    308.07430               308.07430
#                    max    660.17670               348.77830
#                   mean    339.73478               327.47229
#                 median    328.98950               327.06950
#                 stddev     41.56335                 8.14415
#         standard error      2.92439                 0.61919
#   99% confidence level      6.80212                 1.44023
#                   skew      4.59746                 0.13092
#               kurtosis     26.00008                -0.26438
#       time correlation     -0.20690                -0.03773
#
#           elasped time      0.87608
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    308.00000 |**                                 308.57350
#                  1    310.00000 |*                                  311.58150
#                  6    312.00000 |********                           313.10043
#                  7    314.00000 |*********                          314.73396
#                  5    316.00000 |******                             317.22374
#                 12    318.00000 |****************                   319.17617
#                  9    320.00000 |************                       321.07910
#                 15    322.00000 |********************               323.15270
#                 17    324.00000 |***********************            325.03656
#                 17    326.00000 |***********************            326.73519
#                 23    328.00000 |********************************   328.94720
#                 11    330.00000 |***************                    330.97466
#                 12    332.00000 |****************                   332.93830
#                  8    334.00000 |***********                        334.93510
#                 10    336.00000 |*************                      337.03814
#                  4    338.00000 |*****                              338.25030
#                  5    340.00000 |******                             340.57606
#
#                  9        > 95% |************                       344.59697
#
#        mean of 95%    326.53252
#          95th %ile    341.76390
 for      0.89147 seconds
Running:           mmap_ra8k# bin/mmap -E -C 200 -L -S -W -N mmap_ra8k -l 8k -I 500 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra8k      1   1     50.40456          192        0      200     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.74824                48.74824
#                    max     60.58952                54.02952
#                   mean     51.01814                50.71091
#                 median     50.49928                50.40456
#                 stddev      1.81630                 1.15811
#         standard error      0.12779                 0.08358
#   99% confidence level      0.29725                 0.19440
#                   skew      2.39162                 1.03988
#               kurtosis      7.53169                 0.35437
#       time correlation     -0.00566                -0.00115
#
#           elasped time      4.27888
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          112
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     48.00000 |*                                   48.74824
#                 63     49.00000 |*****************************       49.66381
#                 69     50.00000 |********************************    50.46081
#                 32     51.00000 |**************                      51.40764
#                 14     52.00000 |******                              52.63331
#                  3     53.00000 |*                                   53.08147
#
#                 10        > 95% |****                                53.59765
#
#        mean of 95%     50.55230
#          95th %ile     53.24488
 for      4.28911 seconds
Running:         mmap_ra128k# bin/mmap -E -C 200 -L -S -W -N mmap_ra128k -l 128k -I 5000 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra128k    1   1    468.18695          178        0       20   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    451.43175               451.43175
#                    max    745.38375               503.93735
#                   mean    480.64135               471.36236
#                 median    469.49255               468.18695
#                 stddev     32.55846                11.07132
#         standard error      2.29080                 0.82983
#   99% confidence level      5.32841                 1.93019
#                   skew      3.96608                 1.12153
#               kurtosis     22.90095                 0.72805
#       time correlation     -0.17403                -0.03306
#
#           elasped time      2.19665
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    450.00000 |*                                  451.43175
#                  1    452.00000 |*                                  453.78695
#                  1    454.00000 |*                                  455.93735
#                  4    456.00000 |*****                              456.97735
#                 10    458.00000 |**************                     459.10663
#                  9    460.00000 |*************                      461.15406
#                 21    462.00000 |******************************     463.24005
#                 22    464.00000 |********************************   465.04804
#                 20    466.00000 |*****************************      467.03431
#                 16    468.00000 |***********************            469.12135
#                 10    470.00000 |**************                     470.92487
#                  9    472.00000 |*************                      472.82482
#                 11    474.00000 |****************                   474.69866
#                  1    476.00000 |*                                  476.59655
#                  8    478.00000 |***********                        479.10055
#                  4    480.00000 |*****                              480.96775
#                  6    482.00000 |********                           483.28668
#                  3    484.00000 |****                               484.25948
#                  3    486.00000 |****                               486.47388
#                  2    488.00000 |**                                 488.73735
#                  2    490.00000 |**                                 490.91335
#                  1    492.00000 |*                                  492.18695
#                  4    494.00000 |*****                              495.15335
#
#                  9        > 95% |*************                      500.28935
#
#        mean of 95%    469.82187
#          95th %ile    496.59015
 for      2.21477 seconds
 
Running:           mmap_wz8k# bin/mmap -E -C 200 -L -S -W -N mmap_wz8k -l 8k -I 1250 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz8k      1   1    107.74796          192        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    103.43436               103.43436
#                    max    178.63436               114.74956
#                   mean    109.00266               108.10173
#                 median    107.99756               107.74796
#                 stddev      6.09344                 2.39376
#         standard error      0.42873                 0.17275
#   99% confidence level      0.99723                 0.40183
#                   skew      7.81799                 0.66436
#               kurtosis     82.82513                 0.07510
#       time correlation     -0.01810                -0.00083
#
#           elasped time      2.92154
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    103.00000 |**                                 103.64236
#                 11    104.00000 |*********                          104.65822
#                 22    105.00000 |*******************                105.61138
#                 36    106.00000 |********************************   106.47792
#                 30    107.00000 |**************************         107.50935
#                 31    108.00000 |***************************        108.51266
#                 25    109.00000 |**********************             109.51807
#                 11    110.00000 |*********                          110.49909
#                  7    111.00000 |******                             111.57653
#                  6    112.00000 |*****                              112.28396
#
#                 10        > 95% |********                           113.93548
#
#        mean of 95%    107.78119
#          95th %ile    113.40876
 for      2.93362 seconds
Running:         mmap_wz128k# bin/mmap -E -C 200 -L -S -W -N mmap_wz128k -l 128k -I 25000 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz128k    1   1    952.71725          186        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    904.20525               904.20525
#                    max   1186.44525              1017.74125
#                   mean    965.42410               954.87226
#                 median    955.40525               952.71725
#                 stddev     44.18208                21.56889
#         standard error      3.10864                 1.58151
#   99% confidence level      7.23070                 3.67859
#                   skew      2.58514                 0.46873
#               kurtosis      8.13682                -0.07664
#       time correlation     -0.13985                -0.06339
#
#           elasped time      0.91177
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    903.00000 |**                                 904.20525
#                  0    906.00000 |                                           -
#                  1    909.00000 |**                                 909.38925
#                  1    912.00000 |**                                 914.95725
#                  2    915.00000 |****                               915.43725
#                  0    918.00000 |                                           -
#                  4    921.00000 |*********                          922.44525
#                  2    924.00000 |****                               926.18925
#                  8    927.00000 |*******************                928.50925
#                  6    930.00000 |**************                     931.86392
#                 12    933.00000 |*****************************      934.80258
#                 13    936.00000 |********************************   938.14002
#                 12    939.00000 |*****************************      940.38125
#                 10    942.00000 |************************           943.96845
#                  5    945.00000 |************                       945.98445
#                 12    948.00000 |*****************************      950.09858
#                 10    951.00000 |************************           952.74925
#                  8    954.00000 |*******************                955.62125
#                  7    957.00000 |*****************                  958.73325
#                 11    960.00000 |***************************        961.35143
#                  8    963.00000 |*******************                964.43725
#                 10    966.00000 |************************           967.80205
#                  5    969.00000 |************                       970.89325
#                  7    972.00000 |*****************                  973.15154
#                  3    975.00000 |*******                            976.11992
#                  4    978.00000 |*********                          979.82125
#                  2    981.00000 |****                               982.18925
#                  6    984.00000 |**************                     985.48525
#                  4    987.00000 |*********                          988.20525
#                  2    990.00000 |****                               990.57325
#
#                 10        > 95% |************************          1003.91725
#
#        mean of 95%    952.08561
#          95th %ile    992.71725
 for      0.93112 seconds
Running:           mmap_wt8k# bin/mmap -E -C 200 -L -S -W -N mmap_wt8k -l 8k -I 1250 -w -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt8k      1   1    122.75693          192        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    117.74573               117.74573
#                    max    162.23212               133.88333
#                   mean    124.42268               123.31279
#                 median    122.98413               122.75693
#                 stddev      6.23963                 3.60968
#         standard error      0.43902                 0.26051
#   99% confidence level      1.02116                 0.60594
#                   skew      2.72842                 0.73415
#               kurtosis     10.19339                -0.02284
#       time correlation     -0.01050                -0.01258
#
#           elasped time      3.16671
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          374
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    117.00000 |********                           117.82466
#                  7    118.00000 |*********                          118.30801
#                 22    119.00000 |*****************************      119.56623
#                 24    120.00000 |********************************   120.35559
#                 23    121.00000 |******************************     121.58726
#                 20    122.00000 |**************************         122.53853
#                 18    123.00000 |************************           123.44599
#                 19    124.00000 |*************************          124.48526
#                 14    125.00000 |******************                 125.53727
#                  9    126.00000 |************                       126.45861
#                  6    127.00000 |********                           127.40119
#                  7    128.00000 |*********                          128.52607
#                  4    129.00000 |*****                              129.58652
#                  3    130.00000 |****                               130.31213
#
#                 10        > 95% |*************                      131.84141
#
#        mean of 95%    122.84419
#          95th %ile    130.80812
 for      3.17888 seconds
Running:         mmap_wt128k# bin/mmap -E -C 200 -L -S -W -N mmap_wt128k -l 128k -I 25000 -w -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt128k    1   1   1214.92775          188        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1154.70375              1154.70375
#                    max   1497.42375              1321.42375
#                   mean   1233.31825              1220.93047
#                 median   1216.71975              1214.92775
#                 stddev     58.41059                36.10685
#         standard error      4.10975                 2.63336
#   99% confidence level      9.55929                 6.12520
#                   skew      1.92905                 1.00714
#               kurtosis      4.05481                 0.44736
#       time correlation     -0.37450                -0.21694
#
#           elasped time      1.14263
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          193
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1150.00000 |*                                 1154.70375
#                  0   1155.00000 |                                           -
#                  0   1160.00000 |                                           -
#                  1   1165.00000 |*                                 1169.16775
#                  6   1170.00000 |***********                       1172.62375
#                  6   1175.00000 |***********                       1177.81842
#                  9   1180.00000 |****************                  1182.69308
#                 10   1185.00000 |******************                1187.15175
#                 13   1190.00000 |************************          1192.40467
#                 17   1195.00000 |********************************  1197.90751
#                  9   1200.00000 |****************                  1202.49753
#                 14   1205.00000 |**************************        1207.35746
#                  9   1210.00000 |****************                  1212.46019
#                 15   1215.00000 |****************************      1217.33415
#                 14   1220.00000 |**************************        1222.90946
#                  9   1225.00000 |****************                  1227.74908
#                  9   1230.00000 |****************                  1232.85486
#                  9   1235.00000 |****************                  1238.25219
#                  1   1240.00000 |*                                 1241.74375
#                  4   1245.00000 |*******                           1247.80775
#                  2   1250.00000 |***                               1253.83975
#                  0   1255.00000 |                                           -
#                  3   1260.00000 |*****                             1263.88775
#                  4   1265.00000 |*******                           1268.39975
#                  3   1270.00000 |*****                             1273.29575
#                  2   1275.00000 |***                               1278.60775
#                  3   1280.00000 |*****                             1281.01842
#                  0   1285.00000 |                                           -
#                  3   1290.00000 |*****                             1292.81575
#                  2   1295.00000 |***                               1298.57575
#
#                 10        > 95% |******************                1311.72135
#
#        mean of 95%   1215.82986
#          95th %ile   1303.95175
 for      1.16007 seconds
Running:           mmap_wu8k# bin/mmap -E -C 200 -L -S -W -N mmap_wu8k -l 8k -I 1250 -w -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu8k      1   1    116.43584          180        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    111.01184               111.01184
#                    max    178.75904               126.48704
#                   mean    119.55017               116.93831
#                 median    116.67264               116.43584
#                 stddev      9.04611                 3.20490
#         standard error      0.63648                 0.23888
#   99% confidence level      1.48046                 0.55563
#                   skew      3.11819                 0.90325
#               kurtosis     12.11123                 0.40130
#       time correlation     -0.01577                -0.00276
#
#           elasped time      3.09262
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5    111.00000 |****                               111.66208
#                 11    112.00000 |*********                          112.67816
#                 12    113.00000 |**********                         113.71477
#                 20    114.00000 |****************                   114.53760
#                 27    115.00000 |**********************             115.48342
#                 38    116.00000 |********************************   116.51129
#                 22    117.00000 |******************                 117.39846
#                  7    118.00000 |*****                              118.31881
#                  9    119.00000 |*******                            119.54517
#                  5    120.00000 |****                               120.40000
#                  5    121.00000 |****                               121.42272
#                  4    122.00000 |***                                122.69184
#                  6    123.00000 |*****                              123.40597
#
#                  9        > 95% |*******                            124.78819
#
#        mean of 95%    116.52516
#          95th %ile    123.84704
 for      3.10330 seconds
Running:         mmap_wu128k# bin/mmap -E -C 200 -L -S -W -N mmap_wu128k -l 128k -I 12500 -w -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu128k    1   1   1188.48450          181        0        8   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1141.22050              1141.22050
#                    max   1741.22050              1282.08450
#                   mean   1213.96331              1192.90899
#                 median   1193.86050              1188.48450
#                 stddev     75.48067                30.43358
#         standard error      5.31080                 2.26211
#   99% confidence level     12.35292                 5.26167
#                   skew      3.10537                 0.90962
#               kurtosis     13.43055                 0.43944
#       time correlation     -0.29689                 0.00417
#
#           elasped time      2.24820
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1140.00000 |****                              1142.10050
#                  3   1144.00000 |******                            1146.02050
#                  1   1148.00000 |**                                1151.58850
#                  4   1152.00000 |********                          1153.28450
#                  6   1156.00000 |************                      1157.97250
#                 10   1160.00000 |********************              1162.27010
#                 10   1164.00000 |********************              1166.18690
#                 15   1168.00000 |******************************    1169.67277
#                 15   1172.00000 |******************************    1174.34477
#                 12   1176.00000 |************************          1178.07650
#                  8   1180.00000 |****************                  1182.45250
#                  4   1184.00000 |********                          1186.43650
#                  5   1188.00000 |**********                        1189.95650
#                 16   1192.00000 |********************************  1194.04050
#                 10   1196.00000 |********************              1197.44770
#                  7   1200.00000 |**************                    1201.44907
#                  9   1204.00000 |******************                1205.94583
#                  7   1208.00000 |**************                    1210.41364
#                  2   1212.00000 |****                              1214.70850
#                  3   1216.00000 |******                            1218.30850
#                  3   1220.00000 |******                            1222.89517
#                  2   1224.00000 |****                              1224.74050
#                  5   1228.00000 |**********                        1229.39970
#                  3   1232.00000 |******                            1233.23117
#                  3   1236.00000 |******                            1237.01783
#                  3   1240.00000 |******                            1241.51917
#                  2   1244.00000 |****                              1245.65250
#                  1   1248.00000 |**                                1248.99650
#
#                 10        > 95% |********************              1270.40130
#
#        mean of 95%   1188.37727
#          95th %ile   1257.73250
 for      2.26072 seconds
Running:           mmap_wa8k# bin/mmap -E -C 200 -L -S -W -N mmap_wa8k -l 8k -I 1500 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa8k      1   1     81.90488          179        0       66     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     78.84452                78.84452
#                    max    117.58585                87.98294
#                   mean     83.66324                82.07637
#                 median     82.11821                81.90488
#                 stddev      5.49813                 1.97877
#         standard error      0.38685                 0.14790
#   99% confidence level      0.89981                 0.34402
#                   skew      3.25158                 0.88104
#               kurtosis     13.16293                 0.48392
#       time correlation     -0.01872                 0.00195
#
#           elasped time      2.28758
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     78.00000 |*                                   78.89688
#                 21     79.00000 |****************                    79.61085
#                 42     80.00000 |********************************    80.54342
#                 31     81.00000 |***********************             81.57431
#                 37     82.00000 |****************************        82.49456
#                 19     83.00000 |**************                      83.48048
#                 12     84.00000 |*********                           84.35078
#                  4     85.00000 |***                                 85.46658
#                  2     86.00000 |*                                   86.49542
#
#                  9        > 95% |******                              87.21408
#
#        mean of 95%     81.80437
#          95th %ile     86.70682
 for      2.30221 seconds
Running:         mmap_wa128k# bin/mmap -E -C 200 -L -S -W -N mmap_wa128k -l 128k -I 25000 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa128k    1   1    937.44100          174        0        4   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    895.39300               895.39300
#                    max   1291.36100              1002.65700
#                   mean    960.03870               940.98528
#                 median    939.93700               937.44100
#                 stddev     57.46080                22.28722
#         standard error      4.04293                 1.68959
#   99% confidence level      9.40385                 3.92999
#                   skew      2.57966                 0.76326
#               kurtosis      8.50898                 0.26664
#       time correlation     -0.49460                -0.18789
#
#           elasped time      0.92835
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          380
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    894.00000 |*                                  895.39300
#                  1    897.00000 |*                                  898.14500
#                  0    900.00000 |                                           -
#                  3    903.00000 |*****                              905.65433
#                  1    906.00000 |*                                  906.20900
#                  3    909.00000 |*****                              911.30767
#                 10    912.00000 |*****************                  913.63300
#                  4    915.00000 |*******                            916.17700
#                  5    918.00000 |********                           919.29060
#                 11    921.00000 |*******************                922.77918
#                  8    924.00000 |**************                     925.36100
#                 10    927.00000 |*****************                  928.25700
#                  9    930.00000 |****************                   931.51744
#                 12    933.00000 |*********************              934.79033
#                 18    936.00000 |********************************   937.59744
#                 13    939.00000 |***********************            940.40962
#                  7    942.00000 |************                       943.40214
#                  8    945.00000 |**************                     946.37700
#                  4    948.00000 |*******                            949.53700
#                  9    951.00000 |****************                   952.81522
#                  1    954.00000 |*                                  954.65700
#                  3    957.00000 |*****                              958.24100
#                  2    960.00000 |***                                961.76100
#                  8    963.00000 |**************                     963.96100
#                  4    966.00000 |*******                            967.68100
#                  1    969.00000 |*                                  969.95300
#                  1    972.00000 |*                                  973.66500
#                  0    975.00000 |                                           -
#                  2    978.00000 |***                                978.65700
#                  3    981.00000 |*****                              982.24100
#                  3    984.00000 |*****                              984.80100
#
#                  9        > 95% |****************                   995.37522
#
#        mean of 95%    938.01855
#          95th %ile    986.40100
 for      0.94286 seconds
 
Running:           unmap_z8k# bin/munmap -E -C 200 -L -S -W -N unmap_z8k -l 8k -I 250 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z8k      1   1     12.47443          188        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.96947                11.96947
#                    max     17.55667                13.58931
#                   mean     12.66520                12.53608
#                 median     12.49683                12.47443
#                 stddev      0.63733                 0.35441
#         standard error      0.04484                 0.02585
#   99% confidence level      0.10430                 0.06012
#                   skew      3.20664                 0.77909
#               kurtosis     17.40647                 0.23783
#       time correlation     -0.00296                -0.00116
#
#           elasped time      1.92895
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          179
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     11.00000 |*                                   11.98586
#                162     12.00000 |********************************    12.46127
#                 11     13.00000 |**                                  13.08982
#
#                 10        > 95% |*                                   13.41402
#
#        mean of 95%     12.48676
#          95th %ile     13.22899
 for      1.95322 seconds
Running:         unmap_z128k# bin/munmap -E -C 200 -L -S -W -N unmap_z128k -l 128k -I 250 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z128k    1   1     12.16960          189        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.56736                11.56736
#                    max     16.24768                13.42720
#                   mean     12.38784                12.26913
#                 median     12.19968                12.16960
#                 stddev      0.62210                 0.40225
#         standard error      0.04377                 0.02926
#   99% confidence level      0.10181                 0.06806
#                   skew      2.20419                 0.91669
#               kurtosis      7.61890                 0.39268
#       time correlation     -0.00150                -0.00026
#
#           elasped time      1.89986
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 49     11.00000 |************                        11.85368
#                127     12.00000 |********************************    12.33100
#                  3     13.00000 |*                                   13.05600
#
#                 10        > 95% |**                                  13.28307
#
#        mean of 95%     12.21248
#          95th %ile     13.12512
 for      1.91161 seconds
Running:           unmap_t8k# bin/munmap -E -C 200 -L -S -W -N unmap_t8k -l 8k -I 250 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t8k      1   1     12.20992          175        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.67232                11.67232
#                    max     28.82240                13.13984
#                   mean     12.67644                12.25936
#                 median     12.28288                12.20992
#                 stddev      1.66523                 0.29601
#         standard error      0.11717                 0.02238
#   99% confidence level      0.27253                 0.05205
#                   skew      6.07182                 0.59346
#               kurtosis     46.96374                -0.04181
#       time correlation     -0.00421                -0.00118
#
#           elasped time      1.96663
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 32     11.00000 |*******                             11.88318
#                134     12.00000 |********************************    12.30236
#
#                  9        > 95% |**                                  12.95673
#
#        mean of 95%     12.22155
#          95th %ile     12.81536
 for      1.97831 seconds
Running:         unmap_t128k# bin/munmap -E -C 200 -L -S -W -N unmap_t128k -l 128k -I 250 -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t128k    1   1     12.30227          194        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.56179                11.56179
#                    max     16.62675                13.89203
#                   mean     12.46698                12.36816
#                 median     12.31251                12.30227
#                 stddev      0.72291                 0.51453
#         standard error      0.05086                 0.03694
#   99% confidence level      0.11831                 0.08593
#                   skew      2.19175                 0.92301
#               kurtosis      7.25719                 0.43810
#       time correlation     -0.00232                -0.00238
#
#           elasped time      1.96297
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          179
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 49     11.00000 |************                        11.81653
#                121     12.00000 |********************************    12.38257
#                 14     13.00000 |***                                 13.25162
#
#                 10        > 95% |**                                  13.66003
#
#        mean of 95%     12.29795
#          95th %ile     13.45427
 for      1.97469 seconds
Running:           unmap_u8k# bin/munmap -E -C 200 -L -S -W -N unmap_u8k -l 8k -I 250 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u8k      1   1     12.39392          188        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.85888                11.85888
#                    max     18.96928                14.00160
#                   mean     12.70691                12.53487
#                 median     12.43104                12.39392
#                 stddev      0.84714                 0.49098
#         standard error      0.05960                 0.03581
#   99% confidence level      0.13864                 0.08329
#                   skew      3.01357                 1.37930
#               kurtosis     14.67875                 1.37597
#       time correlation     -0.00209                -0.00186
#
#           elasped time      1.97947
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          385
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 11     11.00000 |**                                  11.93812
#                150     12.00000 |********************************    12.39697
#                 17     13.00000 |***                                 13.33709
#
#                 10        > 95% |**                                  13.89606
#
#        mean of 95%     12.45840
#          95th %ile     13.71424
 for      1.99557 seconds
Running:         unmap_u128k# bin/munmap -E -C 200 -L -S -W -N unmap_u128k -l 128k -I 250 -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u128k    1   1     11.97701          194        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.49957                11.49957
#                    max     15.59685                13.80165
#                   mean     12.27063                12.18036
#                 median     12.02181                11.97701
#                 stddev      0.70016                 0.54219
#         standard error      0.04926                 0.03893
#   99% confidence level      0.11459                 0.09054
#                   skew      1.75745                 1.28838
#               kurtosis      3.27089                 0.91081
#       time correlation     -0.00124                -0.00089
#
#           elasped time      1.91297
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          237
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                100     11.00000 |********************************    11.79343
#                 73     12.00000 |***********************             12.36061
#                 11     13.00000 |***                                 13.18475
#
#                 10        > 95% |***                                 13.62898
#
#        mean of 95%     12.10163
#          95th %ile     13.46181
 for      1.92358 seconds
Running:           unmap_a8k# bin/munmap -E -C 200 -L -S -W -N unmap_a8k -l 8k -I 250 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a8k      1   1     20.02949          182        0      400     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.25700                19.25700
#                    max     27.67172                21.79397
#                   mean     20.55057                20.17149
#                 median     20.08708                20.02949
#                 stddev      1.39133                 0.54748
#         standard error      0.09789                 0.04058
#   99% confidence level      0.22770                 0.09439
#                   skew      2.92760                 1.02877
#               kurtosis      9.60545                 0.40341
#       time correlation      0.00175                -0.00007
#
#           elasped time      2.16303
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          238
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 88     19.00000 |********************************    19.74892
#                 77     20.00000 |****************************        20.38227
#                  7     21.00000 |**                                  21.19950
#
#                 10        > 95% |***                                 21.54757
#
#        mean of 95%     20.09149
#          95th %ile     21.37157
 for      2.18047 seconds
Running:         unmap_a128k# bin/munmap -E -C 200 -L -S -W -N unmap_a128k -l 128k -I 250 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a128k    1   1     19.86191          192        0      400   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     18.82959                18.82959
#                    max     27.49199                21.46447
#                   mean     20.15678                19.96573
#                 median     19.87727                19.86191
#                 stddev      1.05594                 0.50281
#         standard error      0.07430                 0.03629
#   99% confidence level      0.17281                 0.08440
#                   skew      3.79174                 0.78021
#               kurtosis     18.82197                 0.30850
#       time correlation     -0.00263                -0.00017
#
#           elasped time      2.12024
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     18.00000 |*                                   18.85839
#                117     19.00000 |********************************    19.66195
#                 62     20.00000 |****************                    20.36035
#                  1     21.00000 |*                                   21.01455
#
#                 10        > 95% |**                                  21.18998
#
#        mean of 95%     19.89847
#          95th %ile     21.04463
 for      2.13006 seconds
 
Running:          unmap_rz8k# bin/munmap -E -C 200 -L -S -W -N unmap_rz8k -l 8k -I 250 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz8k     1   1     43.50942          193        0      400     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     42.32733                42.32733
#                    max     51.73213                45.85437
#                   mean     43.86528                43.60876
#                 median     43.54718                43.50942
#                 stddev      1.49840                 0.80114
#         standard error      0.10543                 0.05767
#   99% confidence level      0.24522                 0.13413
#                   skew      3.14864                 0.74017
#               kurtosis     12.34215                 0.14092
#       time correlation     -0.00456                -0.00152
#
#           elasped time      8.96064
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          138
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 50     42.00000 |******************                  42.71020
#                 87     43.00000 |********************************    43.47919
#                 44     44.00000 |****************                    44.36957
#                  2     45.00000 |*                                   45.04829
#
#                 10        > 95% |***                                 45.59332
#
#        mean of 95%     43.50031
#          95th %ile     45.22205
 for      8.97081 seconds
Running:        unmap_rz128k# bin/munmap -E -C 200 -L -S -W -N unmap_rz128k -l 128k -I 500 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz128k   1   1     46.51429          193        0      200   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     44.79910                44.79910
#                    max     61.07429                50.32997
#                   mean     47.11449                46.77443
#                 median     46.58982                46.51429
#                 stddev      2.11766                 1.20080
#         standard error      0.14900                 0.08644
#   99% confidence level      0.34657                 0.20105
#                   skew      3.43296                 1.07835
#               kurtosis     16.35286                 0.83731
#       time correlation     -0.00261                -0.00137
#
#           elasped time     22.49261
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     44.00000 |*                                   44.88059
#                 53     45.00000 |***********************             45.63394
#                 73     46.00000 |********************************    46.48350
#                 41     47.00000 |*****************                   47.48435
#                  8     48.00000 |***                                 48.45206
#                  5     49.00000 |**                                  49.39097
#
#                 10        > 95% |****                                49.94982
#
#        mean of 95%     46.60091
#          95th %ile     49.65925
 for     22.50358 seconds
Running:          unmap_rt8k# bin/munmap -E -C 200 -L -S -W -N unmap_rt8k -l 8k -I 500 -r -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt8k     1   1     49.67370          188        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     47.57961                47.57961
#                    max     83.09962                53.84393
#                   mean     50.49329                49.85600
#                 median     49.74410                49.67370
#                 stddev      3.26431                 1.37092
#         standard error      0.22968                 0.09998
#   99% confidence level      0.53423                 0.23256
#                   skew      5.66328                 0.97128
#               kurtosis     48.49284                 0.89860
#       time correlation     -0.00206                 0.00051
#
#           elasped time      4.79920
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          109
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9     47.00000 |***                                 47.78897
#                 40     48.00000 |*****************                   48.50425
#                 74     49.00000 |********************************    49.56138
#                 35     50.00000 |***************                     50.44173
#                 13     51.00000 |*****                               51.39992
#                  7     52.00000 |***                                 52.34231
#
#                 10        > 95% |****                                53.50589
#
#        mean of 95%     49.65095
#          95th %ile     52.52938
 for      4.81003 seconds
Running:        unmap_rt128k# bin/munmap -E -C 200 -L -S -W -N unmap_rt128k -l 128k -I 1500 -r -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt128k   1   1     82.79629          181        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     78.20768                78.20768
#                    max    170.38708                88.14514
#                   mean     84.87227                82.99366
#                 median     83.05617                82.79629
#                 stddev      9.08014                 1.87973
#         standard error      0.63888                 0.13972
#   99% confidence level      1.48603                 0.32499
#                   skew      6.98487                 0.33843
#               kurtosis     56.62182                -0.13875
#       time correlation     -0.01014                 0.00018
#
#           elasped time      5.42535
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          277
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     78.00000 |*                                   78.46562
#                  4     79.00000 |***                                 79.62053
#                 16     80.00000 |*************                       80.55895
#                 39     81.00000 |********************************    81.52315
#                 37     82.00000 |******************************      82.50024
#                 28     83.00000 |**********************              83.44626
#                 28     84.00000 |**********************              84.43840
#                 16     85.00000 |*************                       85.45423
#                  1     86.00000 |*                                   86.11653
#
#                 10        > 95% |********                            87.14286
#
#        mean of 95%     82.75101
#          95th %ile     86.28332
 for      5.43619 seconds
Running:          unmap_ru8k# bin/munmap -E -C 200 -L -S -W -N unmap_ru8k -l 8k -I 500 -r -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru8k     1   1     49.75488          196        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     47.43424                47.43424
#                    max     63.49056                53.11488
#                   mean     50.11509                49.87600
#                 median     49.87520                49.75488
#                 stddev      1.87397                 1.09651
#         standard error      0.13185                 0.07832
#   99% confidence level      0.30669                 0.18218
#                   skew      3.87317                 0.64696
#               kurtosis     22.06595                 0.05147
#       time correlation     -0.00320                 0.00100
#
#           elasped time      4.76010
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     47.00000 |*                                   47.56416
#                 44     48.00000 |********************                48.67249
#                 69     49.00000 |********************************    49.49984
#                 49     50.00000 |**********************              50.32344
#                 19     51.00000 |********                            51.42690
#                  3     52.00000 |*                                   52.02645
#
#                 10        > 95% |****                                52.44506
#
#        mean of 95%     49.73788
#          95th %ile     52.09984
 for      4.77103 seconds
Running:        unmap_ru128k# bin/munmap -E -C 200 -L -S -W -N unmap_ru128k -l 128k -I 1500 -r -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru128k   1   1     83.51152          187        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     79.71030                79.71030
#                    max    124.45212                90.10158
#                   mean     85.20608                83.82425
#                 median     83.72485                83.51152
#                 stddev      6.17718                 2.11185
#         standard error      0.43462                 0.15443
#   99% confidence level      1.01094                 0.35921
#                   skew      4.18857                 0.62875
#               kurtosis     20.58802                 0.10741
#       time correlation      0.00480                -0.00201
#
#           elasped time      5.52627
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     79.00000 |*                                   79.71030
#                 10     80.00000 |********                            80.47792
#                 31     81.00000 |***************************         81.61491
#                 30     82.00000 |**************************          82.61513
#                 35     83.00000 |*******************************     83.44912
#                 36     84.00000 |********************************    84.47690
#                 16     85.00000 |**************                      85.52388
#                 11     86.00000 |*********                           86.48478
#                  7     87.00000 |******                              87.53326
#
#                 10        > 95% |********                            88.77930
#
#        mean of 95%     83.54430
#          95th %ile     87.89067
 for      5.54396 seconds
Running:          unmap_ra8k# bin/munmap -E -C 200 -L -S -W -N unmap_ra8k -l 8k -I 250 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra8k     1   1     53.95971          181        0      400     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     52.29636                52.29636
#                    max     73.33700                56.19651
#                   mean     54.72843                53.97903
#                 median     54.02692                53.95971
#                 stddev      2.72466                 0.77881
#         standard error      0.19171                 0.05789
#   99% confidence level      0.44591                 0.13465
#                   skew      3.75125                 0.28948
#               kurtosis     17.09058                -0.35785
#       time correlation      0.00292                -0.00067
#
#           elasped time      8.49584
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          242
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 18     52.00000 |*******                             52.74094
#                 80     53.00000 |********************************    53.53820
#                 66     54.00000 |**************************          54.48469
#                  7     55.00000 |**                                  55.10842
#
#                 10        > 95% |****                                55.60631
#
#        mean of 95%     53.88387
#          95th %ile     55.23459
 for      8.52074 seconds
Running:        unmap_ra128k# bin/munmap -E -C 200 -L -S -W -N unmap_ra128k -l 128k -I 500 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra128k   1   1     58.05470          189        0      200   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     55.56382                55.56382
#                    max     73.61950                61.02942
#                   mean     58.61021                58.14257
#                 median     58.15966                58.05470
#                 stddev      2.32537                 1.00421
#         standard error      0.16361                 0.07305
#   99% confidence level      0.38056                 0.16990
#                   skew      3.91892                 0.51474
#               kurtosis     19.54592                 0.11133
#       time correlation     -0.00528                -0.00175
#
#           elasped time     21.79119
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          197
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     55.00000 |*                                   55.56382
#                 19     56.00000 |********                            56.70618
#                 71     57.00000 |********************************    57.52012
#                 65     58.00000 |*****************************       58.45845
#                 22     59.00000 |*********                           59.41388
#                  1     60.00000 |*                                   60.05405
#
#                 10        > 95% |****                                60.50769
#
#        mean of 95%     58.01044
#          95th %ile     60.09501
 for     21.80070 seconds
 
Running:        conn_connect# bin/connection -E -C 200 -L -S -W -N conn_connect -B 256 -c 
             prc thr   usecs/call      samples   errors cnt/samp 
conn_connect   1   1     94.44200          186        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     90.04300                90.04300
#                    max    217.82400               106.95700
#                   mean     99.46549                95.71888
#                 median     94.66400                94.44200
#                 stddev     17.69417                 3.88428
#         standard error      1.24496                 0.28481
#   99% confidence level      2.89577                 0.66247
#                   skew      4.92307                 0.92747
#               kurtosis     24.91448                -0.09694
#       time correlation     -0.08618                 0.00316
#
#           elasped time      7.65170
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7     90.00000 |*******                             90.55700
#                 18     91.00000 |******************                  91.60206
#                 24     92.00000 |************************            92.56746
#                 32     93.00000 |********************************    93.46278
#                 26     94.00000 |**************************          94.46388
#                 15     95.00000 |***************                     95.45060
#                  7     96.00000 |*******                             96.63400
#                 10     97.00000 |**********                          97.55920
#                  9     98.00000 |*********                           98.45222
#                  7     99.00000 |*******                             99.54043
#                  6    100.00000 |******                             100.36133
#                  4    101.00000 |****                               101.35550
#                  9    102.00000 |*********                          102.65689
#                  2    103.00000 |**                                 103.22850
#
#                 10        > 95% |**********                         104.78860
#
#        mean of 95%     95.20356
#          95th %ile    103.72200
 for      7.67058 seconds
 
Running:          unmap_wz8k# bin/munmap -E -C 200 -L -S -W -N unmap_wz8k -l 8k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz8k     1   1     71.37024          186        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     68.34048                68.34048
#                    max    103.12576                76.24960
#                   mean     72.61500                71.55236
#                 median     71.49440                71.37024
#                 stddev      4.54243                 1.61280
#         standard error      0.31960                 0.11826
#   99% confidence level      0.74340                 0.27506
#                   skew      3.96532                 0.75141
#               kurtosis     19.35437                 0.01224
#       time correlation     -0.00707                -0.01019
#
#           elasped time      7.31864
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     68.00000 |*                                   68.57728
#                 23     69.00000 |*************                       69.60868
#                 55     70.00000 |********************************    70.40926
#                 42     71.00000 |************************            71.49690
#                 33     72.00000 |*******************                 72.40972
#                 12     73.00000 |******                              73.51115
#                  9     74.00000 |*****                               74.48604
#
#                 10        > 95% |*****                               75.31776
#
#        mean of 95%     71.33842
#          95th %ile     74.82496
 for      7.32913 seconds
Running:        unmap_wz128k# bin/munmap -E -C 200 -L -S -W -N unmap_wz128k -l 128k -I 4000 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz128k   1   1    156.67360          183        0       25   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    147.63168               147.63168
#                    max    217.23296               166.30944
#                   mean    159.06292               156.71781
#                 median    157.07296               156.67360
#                 stddev      8.79809                 3.31374
#         standard error      0.61903                 0.24496
#   99% confidence level      1.43987                 0.56977
#                   skew      3.18263                 0.16745
#               kurtosis     12.96700                -0.02424
#       time correlation     -0.01493                -0.00021
#
#           elasped time      5.74762
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    147.00000 |*                                  147.63168
#                  0    148.00000 |                                           -
#                  1    149.00000 |*                                  149.31104
#                  6    150.00000 |********                           150.72075
#                  6    151.00000 |********                           151.49557
#                  9    152.00000 |************                       152.70162
#                 15    153.00000 |********************               153.55040
#                 24    154.00000 |********************************   154.52917
#                 20    155.00000 |**************************         155.59021
#                 16    156.00000 |*********************              156.59552
#                 15    157.00000 |********************               157.46891
#                 24    158.00000 |********************************   158.49291
#                 20    159.00000 |**************************         159.40154
#                 11    160.00000 |**************                     160.43261
#                  5    161.00000 |******                             161.45978
#
#                 10        > 95% |*************                      163.95629
#
#        mean of 95%    156.29940
#          95th %ile    162.46944
 for      5.75855 seconds
Running:          unmap_wt8k# bin/munmap -E -C 200 -L -S -W -N unmap_wt8k -l 8k -I 500 -w -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt8k     1   1     70.32991          194        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     68.12319                68.12319
#                    max     89.66431                74.16863
#                   mean     70.85964                70.49591
#                 median     70.39007                70.32991
#                 stddev      2.39389                 1.32554
#         standard error      0.16843                 0.09517
#   99% confidence level      0.39178                 0.22136
#                   skew      3.79728                 0.53063
#               kurtosis     22.10134                -0.28734
#       time correlation     -0.00258                 0.00043
#
#           elasped time      7.76748
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          194
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 21     68.00000 |***********                         68.58314
#                 53     69.00000 |***************************         69.45736
#                 61     70.00000 |********************************    70.47826
#                 27     71.00000 |**************                      71.41620
#                 22     72.00000 |***********                         72.38908
#
#                 10        > 95% |*****                               73.47487
#
#        mean of 95%     70.33401
#          95th %ile     72.92831
 for      7.77716 seconds
Running:        unmap_wt128k# bin/munmap -E -C 200 -L -S -W -N unmap_wt128k -l 128k -I 5000 -w -f /tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt128k   1   1    149.68255          194        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    140.18495               140.18495
#                    max    187.42975               161.08735
#                   mean    150.88651               149.82289
#                 median    149.93855               149.68255
#                 stddev      6.78453                 4.21411
#         standard error      0.47736                 0.30256
#   99% confidence level      1.11033                 0.70374
#                   skew      2.41912                 0.21074
#               kurtosis      8.77503                -0.10617
#       time correlation      0.00554                 0.00224
#
#           elasped time      5.30282
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          269
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    140.00000 |*****                              140.61375
#                  2    141.00000 |**                                 141.26015
#                  4    142.00000 |*****                              142.60735
#                  4    143.00000 |*****                              143.59615
#                 11    144.00000 |***************                    144.52880
#                  8    145.00000 |***********                        145.57215
#                 12    146.00000 |****************                   146.41002
#                 22    147.00000 |******************************     147.59266
#                 23    148.00000 |********************************   148.47712
#                 13    149.00000 |******************                 149.54175
#                 18    150.00000 |*************************          150.48042
#                 22    151.00000 |******************************     151.56706
#                  6    152.00000 |********                           152.35135
#                 15    153.00000 |********************               153.59252
#                  8    154.00000 |***********                        154.46975
#                  7    155.00000 |*********                          155.41329
#                  4    156.00000 |*****                              156.52415
#                  1    157.00000 |*                                  157.02975
#
#                 10        > 95% |*************                      159.05855
#
#        mean of 95%    149.32095
#          95th %ile    157.13215
 for      5.31529 seconds
Running:          unmap_wu8k# bin/munmap -E -C 200 -L -S -W -N unmap_wu8k -l 8k -I 500 -w -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu8k     1   1     69.07412          195        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     66.63829                66.63829
#                    max     93.84341                73.71925
#                   mean     69.70600                69.36230
#                 median     69.12917                69.07412
#                 stddev      2.60330                 1.47538
#         standard error      0.18317                 0.10565
#   99% confidence level      0.42605                 0.24575
#                   skew      4.75677                 0.85782
#               kurtosis     36.53532                 0.36927
#       time correlation     -0.00333                -0.00085
#
#           elasped time      7.57322
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     66.00000 |*                                   66.65877
#                 23     67.00000 |**********                          67.65344
#                 68     68.00000 |********************************    68.42972
#                 43     69.00000 |********************                69.41719
#                 30     70.00000 |**************                      70.44902
#                 17     71.00000 |********                            71.43919
#                  1     72.00000 |*                                   72.30868
#
#                 10        > 95% |****                                73.12379
#
#        mean of 95%     69.15898
#          95th %ile     72.36885
 for      7.58453 seconds
Running:        unmap_wu128k# bin/munmap -E -C 200 -L -S -W -N unmap_wu128k -l 128k -I 5000 -w -f /var/tmp/libmicro.296104/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu128k   1   1    151.34105          193        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    141.84345               141.84345
#                    max    244.19225               164.44825
#                   mean    153.18697               151.65230
#                 median    151.54585               151.34105
#                 stddev      9.56063                 4.34124
#         standard error      0.67268                 0.31249
#   99% confidence level      1.56466                 0.72685
#                   skew      5.28686                 0.14454
#               kurtosis     41.75882                -0.33891
#       time correlation     -0.01571                -0.01417
#
#           elasped time      5.22475
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          123
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    141.00000 |***                                141.86905
#                  0    142.00000 |                                           -
#                  2    143.00000 |***                                143.64185
#                 11    144.00000 |****************                   144.58265
#                  8    145.00000 |************                       145.65625
#                  7    146.00000 |**********                         146.57762
#                 12    147.00000 |******************                 147.53092
#                 11    148.00000 |****************                   148.63909
#                 15    149.00000 |**********************             149.56697
#                 21    150.00000 |********************************   150.52490
#                 21    151.00000 |********************************   151.48855
#                  8    152.00000 |************                       152.59865
#                 14    153.00000 |*********************              153.52254
#                 17    154.00000 |*************************          154.44467
#                 14    155.00000 |*********************              155.55316
#                  5    156.00000 |*******                            156.67097
#                 14    157.00000 |*********************              157.43659
#                  1    158.00000 |*                                  158.03545
#
#                 10        > 95% |***************                    160.60697
#
#        mean of 95%    151.16297
#          95th %ile    158.79065
 for      5.23864 seconds
Running:          unmap_wa8k# bin/munmap -E -C 200 -L -S -W -N unmap_wa8k -l 8k -I 500 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa8k     1   1     83.76954          195        0      200     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     80.81785                80.81785
#                    max     97.69338                88.42362
#                   mean     84.13478                83.86087
#                 median     83.83353                83.76954
#                 stddev      2.23481                 1.57970
#         standard error      0.15724                 0.11312
#   99% confidence level      0.36574                 0.26313
#                   skew      2.49558                 0.45332
#               kurtosis     11.65804                -0.23413
#       time correlation     -0.00325                -0.00215
#
#           elasped time      6.83505
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          269
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     80.00000 |*                                   80.81785
#                 22     81.00000 |****************                    81.62577
#                 43     82.00000 |*******************************     82.53082
#                 44     83.00000 |********************************    83.49361
#                 40     84.00000 |*****************************       84.52787
#                 29     85.00000 |*********************               85.50910
#                  6     86.00000 |****                                86.29519
#
#                 10        > 95% |*******                             87.50918
#
#        mean of 95%     83.66367
#          95th %ile     86.58938
 for      6.85011 seconds
Running:        unmap_wa128k# bin/munmap -E -C 200 -L -S -W -N unmap_wa128k -l 128k -I 5000 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa128k   1   1    178.34470          192        0       20   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    169.14150               169.14150
#                    max    243.48390               190.69670
#                   mean    180.15172               178.70430
#                 median    178.79270               178.34470
#                 stddev      8.32246                 4.53331
#         standard error      0.58557                 0.32716
#   99% confidence level      1.36203                 0.76098
#                   skew      3.42532                 0.31052
#               kurtosis     18.69761                -0.18601
#       time correlation     -0.01321                -0.01019
#
#           elasped time      4.52536
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    169.00000 |**                                 169.39110
#                  5    170.00000 |*******                            170.27814
#                  7    171.00000 |**********                         171.76184
#                  7    172.00000 |**********                         172.44939
#                  7    173.00000 |**********                         173.51544
#                 12    174.00000 |*****************                  174.43217
#                 11    175.00000 |****************                   175.54499
#                 19    176.00000 |***************************        176.50487
#                 20    177.00000 |*****************************      177.62086
#                 18    178.00000 |**************************         178.56372
#                 22    179.00000 |********************************   179.48565
#                  5    180.00000 |*******                            180.57958
#                 10    181.00000 |**************                     181.41414
#                 12    182.00000 |*****************                  182.53563
#                 12    183.00000 |*****************                  183.54257
#                  9    184.00000 |*************                      184.41901
#                  1    185.00000 |*                                  185.64070
#                  3    186.00000 |****                               186.49403
#
#                 10        > 95% |**************                     188.90726
#
#        mean of 95%    178.14370
#          95th %ile    187.33030
 for      4.54242 seconds
 
Running:           mprot_z8k# bin/mprotect -E -C 200 -L -S -W -N mprot_z8k -l 8k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z8k      1   1     11.55802          191        0      333     8192 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.83768                10.83768
#                    max     15.18584                12.68734
#                   mean     11.72558                11.62490
#                 median     11.57570                11.55802
#                 stddev      0.57553                 0.36166
#         standard error      0.04049                 0.02617
#   99% confidence level      0.09419                 0.06087
#                   skew      2.53577                 0.90583
#               kurtosis      9.61555                 0.76096
#       time correlation     -0.00290                -0.00124
#
#           elasped time      0.79424
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          140
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     10.00000 |*                                   10.86459
#                162     11.00000 |********************************    11.51972
#                 17     12.00000 |***                                 12.16227
#
#                 10        > 95% |*                                   12.56741
#
#        mean of 95%     11.57283
#          95th %ile     12.42903
 for      0.81858 seconds
Running:         mprot_z128k# bin/mprotect -E -C 200 -L -S -W -N mprot_z128k -l 128k -I 500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z128k    1   1     10.72386          179        0      200   131072 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.11842                10.11842
#                    max     17.74851                11.71842
#                   mean     11.04857                10.77692
#                 median     10.81858                10.72386
#                 stddev      0.95122                 0.35916
#         standard error      0.06693                 0.02684
#   99% confidence level      0.15567                 0.06244
#                   skew      3.30793                 0.57392
#               kurtosis     15.06556                -0.27187
#       time correlation     -0.00609                -0.00333
#
#           elasped time      0.45083
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          251
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                135     10.00000 |********************************    10.61478
#                 35     11.00000 |********                            11.19092
#
#                  9        > 95% |**                                  11.59910
#
#        mean of 95%     10.73340
#          95th %ile     11.45858
 for      0.46792 seconds
Running:          mprot_wz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz8k -l 8k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz8k     1   1     43.41397          183        0      200     8192 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     41.66421                41.66421
#                    max     60.13461                45.46453
#                   mean     43.82795                43.42784
#                 median     43.47413                43.41397
#                 stddev      1.72586                 0.70474
#         standard error      0.12143                 0.05210
#   99% confidence level      0.28245                 0.12117
#                   skew      4.99707                 0.23826
#               kurtosis     39.37159                 0.11103
#       time correlation     -0.00180                -0.00164
#
#           elasped time      1.77653
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     41.00000 |*                                   41.74186
#                 45     42.00000 |**************                      42.63371
#                101     43.00000 |********************************    43.47495
#                 24     44.00000 |*******                             44.28421
#
#                 10        > 95% |***                                 44.97608
#
#        mean of 95%     43.33835
#          95th %ile     44.63893
 for      1.80246 seconds
Running:        mprot_wz128k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz128k -l 128k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz128k   1   1     41.66807          195        0      200   131072 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     40.06423                40.06423
#                    max     49.50423                45.15351
#                   mean     42.11892                41.94857
#                 median     41.71415                41.66807
#                 stddev      1.46361                 1.14636
#         standard error      0.10298                 0.08209
#   99% confidence level      0.23953                 0.19095
#                   skew      1.65475                 0.81981
#               kurtosis      3.97543                 0.06770
#       time correlation     -0.00822                -0.00613
#
#           elasped time      1.71068
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 45     40.00000 |********************                40.70642
#                 72     41.00000 |********************************    41.45518
#                 43     42.00000 |*******************                 42.53189
#                 21     43.00000 |*********                           43.34481
#                  4     44.00000 |*                                   44.20023
#
#                 10        > 95% |****                                44.74954
#
#        mean of 95%     41.79716
#          95th %ile     44.33431
 for      1.73913 seconds
Running:         mprot_twz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_twz8k -l 8k -I 500 -w -t -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_twz8k    1   1     41.92435          193        0      200     8192 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     34.74867                40.37427
#                    max     51.36435                45.04499
#                   mean     42.28074                42.11696
#                 median     41.96019                41.92435
#                 stddev      1.52791                 1.00111
#         standard error      0.10750                 0.07206
#   99% confidence level      0.25005                 0.16762
#                   skew      1.38112                 0.88250
#               kurtosis      9.14407                 0.42774
#       time correlation      0.00140                -0.00173
#
#           elasped time      1.71449
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 17     40.00000 |******                              40.72138
#                 87     41.00000 |********************************    41.53507
#                 57     42.00000 |********************                42.42207
#                 18     43.00000 |******                              43.43112
#                  4     44.00000 |*                                   44.11443
#
#                 10        > 95% |***                                 44.64832
#
#        mean of 95%     41.97863
#          95th %ile     44.40499
 for      1.73794 seconds
Running:        mprot_tw128k# bin/mprotect -E -C 200 -L -S -W -N mprot_tw128k -l 128k -I 1000 -w -t -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw128k   1   1     43.71824          180        0      100   131072 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     41.78800                41.78800
#                    max     73.34768                46.98736
#                   mean     44.59138                43.83165
#                 median     43.93840                43.71824
#                 stddev      2.95963                 1.08284
#         standard error      0.20824                 0.08071
#   99% confidence level      0.48436                 0.18773
#                   skew      5.21081                 0.60728
#               kurtosis     42.92806                -0.10699
#       time correlation     -0.01448                -0.00830
#
#           elasped time      0.90713
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          144
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     41.00000 |*                                   41.81872
#                 44     42.00000 |***********************             42.64508
#                 59     43.00000 |********************************    43.45807
#                 49     44.00000 |**************************          44.41811
#                 17     45.00000 |*********                           45.37260
#
#                  9        > 95% |****                                46.42530
#
#        mean of 95%     43.69514
#          95th %ile     45.83024
 for      0.94288 seconds
Running:          mprot_tw4m# bin/mprotect -E -C 200 -L -S -W -N mprot_tw4m -l 4m -w -t -B 10 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw4m     1   1    159.48800          193        0       10  4194304 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    149.01760               149.01760
#                    max    220.69760               181.09440
#                   mean    162.80244               160.86430
#                 median    160.10240               159.48800
#                 stddev     11.82131                 7.29196
#         standard error      0.83174                 0.52489
#   99% confidence level      1.93464                 1.22089
#                   skew      2.47794                 0.64476
#               kurtosis      8.18487                -0.28902
#       time correlation     -0.01712                 0.01464
#
#           elasped time      0.33563
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    149.00000 |***                                149.05600
#                  6    150.00000 |**********                         150.56213
#                  7    151.00000 |************                       151.45691
#                  8    152.00000 |**************                     152.37440
#                 11    153.00000 |*******************                153.61164
#                 17    154.00000 |******************************     154.48696
#                 12    155.00000 |*********************              155.45173
#                  7    156.00000 |************                       156.61349
#                  9    157.00000 |****************                   157.29493
#                 10    158.00000 |*****************                  158.61248
#                 10    159.00000 |*****************                  159.42144
#                 18    160.00000 |********************************   160.59164
#                  4    161.00000 |*******                            161.41440
#                  5    162.00000 |********                           162.58048
#                  6    163.00000 |**********                         163.63947
#                  7    164.00000 |************                       164.51291
#                  6    165.00000 |**********                         165.60213
#                  3    166.00000 |*****                              166.59627
#                  7    167.00000 |************                       167.52640
#                 10    168.00000 |*****************                  168.52736
#                  4    169.00000 |*******                            169.34400
#                  6    170.00000 |**********                         170.53013
#                  4    171.00000 |*******                            171.45600
#                  0    172.00000 |                                           -
#                  4    173.00000 |*******                            173.39520
#
#                 10        > 95% |*****************                  177.84576
#
#        mean of 95%    159.93635
#          95th %ile    174.08000
 for      0.37975 seconds
 
Running:           pipe_pst1# bin/pipe -E -C 200 -L -S -W -N pipe_pst1 -s 1 -I 500 -x pipe -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst1      1   1     36.76915          198        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     34.84275                34.84275
#                    max     48.91380                41.48851
#                   mean     37.26609                37.12591
#                 median     36.78836                36.76915
#                 stddev      1.81298                 1.48333
#         standard error      0.12756                 0.10542
#   99% confidence level      0.29671                 0.24520
#                   skew      2.01652                 0.84687
#               kurtosis      7.80985                -0.12559
#       time correlation     -0.00615                -0.00410
#
#           elasped time      1.56642
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          281
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     34.00000 |*                                   34.84275
#                 49     35.00000 |*************************           35.60707
#                 62     36.00000 |********************************    36.44439
#                 34     37.00000 |*****************                   37.37550
#                 26     38.00000 |*************                       38.53944
#                 16     39.00000 |********                            39.51716
#
#                 10        > 95% |*****                               40.67226
#
#        mean of 95%     36.93728
#          95th %ile     40.23795
 for      1.59016 seconds
Running:           pipe_pmt1# bin/pipe -E -C 200 -L -S -W -N pipe_pmt1 -s 1 -I 2000 -x pipe -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt1      1   1    207.65354          198        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    153.47370               181.57738
#                    max    257.69642               245.31626
#                   mean    209.63746               209.27324
#                 median    207.65866               207.65354
#                 stddev     14.06007                12.54929
#         standard error      0.98926                 0.89184
#   99% confidence level      2.30103                 2.07442
#                   skew      0.54877                 0.71256
#               kurtosis      1.62032                 0.33367
#       time correlation     -0.03547                -0.04180
#
#           elasped time      2.34715
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    180.00000 |*                                  181.57738
#                  0    182.00000 |                                           -
#                  2    184.00000 |***                                185.19722
#                  2    186.00000 |***                                187.30922
#                  1    188.00000 |*                                  189.17546
#                  4    190.00000 |*******                            190.98538
#                  7    192.00000 |*************                      193.22684
#                  2    194.00000 |***                                194.46698
#                 11    196.00000 |********************               197.02163
#                 15    198.00000 |****************************       198.81744
#                 13    200.00000 |************************           200.67774
#                 17    202.00000 |********************************   203.34461
#                 15    204.00000 |****************************       205.11300
#                 14    206.00000 |**************************         207.23882
#                 16    208.00000 |******************************     209.06730
#                 13    210.00000 |************************           211.00556
#                  9    212.00000 |****************                   212.92998
#                  8    214.00000 |***************                    214.83946
#                  5    216.00000 |*********                          217.41943
#                  8    218.00000 |***************                    218.93226
#                  6    220.00000 |***********                        220.68394
#                  2    222.00000 |***                                222.46826
#                  6    224.00000 |***********                        224.63061
#                  2    226.00000 |***                                227.35530
#                  1    228.00000 |*                                  229.67978
#                  3    230.00000 |*****                              230.92394
#                  3    232.00000 |*****                              232.54186
#                  2    234.00000 |***                                234.85610
#
#                 10        > 95% |******************                 239.85527
#
#        mean of 95%    207.64654
#          95th %ile    235.35274
 for      2.36008 seconds
Running:           pipe_pmp1# bin/pipe -E -C 200 -L -S -W -N pipe_pmp1 -s 1 -I 2000 -x pipe -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp1      1   1    213.67564          201        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    170.49868               182.77644
#                    max    252.35724               252.35724
#                   mean    215.02453               215.24605
#                 median    213.67564               213.67564
#                 stddev     13.90698                13.57973
#         standard error      0.97849                 0.95784
#   99% confidence level      2.27597                 2.22794
#                   skew      0.45036                 0.61280
#               kurtosis      0.28694                 0.01681
#       time correlation     -0.04034                -0.04759
#
#           elasped time      2.84905
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          122
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    182.00000 |*                                  182.77644
#                  0    184.00000 |                                           -
#                  0    186.00000 |                                           -
#                  2    188.00000 |***                                189.62956
#                  1    190.00000 |*                                  191.57772
#                  0    192.00000 |                                           -
#                  4    194.00000 |*******                            195.34348
#                  5    196.00000 |********                           196.86463
#                  7    198.00000 |************                       198.84812
#                  9    200.00000 |****************                   201.00023
#                 11    202.00000 |*******************                203.04978
#                 15    204.00000 |**************************         204.74534
#                 14    206.00000 |************************           206.89786
#                  6    208.00000 |**********                         208.87820
#                 18    210.00000 |********************************   211.29057
#                 10    212.00000 |*****************                  212.97215
#                 17    214.00000 |******************************     215.04629
#                 13    216.00000 |***********************            216.59128
#                  6    218.00000 |**********                         218.68897
#                  9    220.00000 |****************                   221.42220
#                  4    222.00000 |*******                            223.03756
#                  9    224.00000 |****************                   224.88218
#                  6    226.00000 |**********                         226.79137
#                  5    228.00000 |********                           228.93426
#                  2    230.00000 |***                                231.33708
#                  3    232.00000 |*****                              232.80567
#                  4    234.00000 |*******                            235.17836
#                  5    236.00000 |********                           237.16825
#                  3    238.00000 |*****                              238.67660
#                  1    240.00000 |*                                  240.35596
#
#                 11        > 95% |*******************                246.79459
#
#        mean of 95%    213.41956
#          95th %ile    241.29804
 for      2.86245 seconds
Running:          pipe_pst4k# bin/pipe -E -C 200 -L -S -W -N pipe_pst4k -s 4k -I 500 -x pipe -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst4k     1   1     40.41879          187        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     38.01368                38.01368
#                    max     83.75447                46.96343
#                   mean     42.18740                40.97399
#                 median     40.60824                40.41879
#                 stddev      5.53356                 2.09291
#         standard error      0.38934                 0.15305
#   99% confidence level      0.90560                 0.35599
#                   skew      4.19354                 1.15870
#               kurtosis     22.18373                 0.67290
#       time correlation     -0.02398                -0.00786
#
#           elasped time      1.78259
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 26     38.00000 |****************                    38.69040
#                 50     39.00000 |********************************    39.51616
#                 43     40.00000 |***************************         40.52727
#                 23     41.00000 |**************                      41.48982
#                 15     42.00000 |*********                           42.39034
#                 11     43.00000 |*******                             43.50627
#                  4     44.00000 |**                                  44.37400
#                  5     45.00000 |***                                 45.54468
#
#                 10        > 95% |******                              46.37950
#
#        mean of 95%     40.66859
#          95th %ile     45.72951
 for      1.79317 seconds
Running:          pipe_pmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmt4k -s 4k -I 2000 -x pipe -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt4k     1   1    225.31300          195        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    142.97828               197.41412
#                    max    320.85732               261.83908
#                   mean    229.31463               227.95395
#                 median    227.53508               225.31300
#                 stddev     18.52640                14.17024
#         standard error      1.30351                 1.01475
#   99% confidence level      3.03197                 2.36031
#                   skew      0.71838                 0.37222
#               kurtosis      4.85006                -0.45373
#       time correlation      0.00680                 0.01030
#
#           elasped time      2.57242
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          142
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    196.00000 |**                                 197.41412
#                  2    198.00000 |****                               199.00644
#                  0    200.00000 |                                           -
#                  1    202.00000 |**                                 202.35492
#                  2    204.00000 |****                               205.05060
#                  4    206.00000 |*********                          207.09732
#                  6    208.00000 |*************                      209.33348
#                  5    210.00000 |***********                        211.18487
#                 13    212.00000 |*****************************      213.12937
#                  9    214.00000 |********************               214.85967
#                 11    216.00000 |*************************          216.76400
#                 11    218.00000 |*************************          218.90229
#                  8    220.00000 |******************                 220.67684
#                 14    222.00000 |********************************   222.77348
#                 11    224.00000 |*************************          224.93552
#                  7    226.00000 |****************                   227.52630
#                  7    228.00000 |****************                   228.54226
#                  8    230.00000 |******************                 230.86756
#                  7    232.00000 |****************                   233.10491
#                 12    234.00000 |***************************        235.14041
#                 11    236.00000 |*************************          236.97869
#                  7    238.00000 |****************                   239.00607
#                  7    240.00000 |****************                   240.70226
#                  3    242.00000 |******                             242.62372
#                  3    244.00000 |******                             245.47897
#                  5    246.00000 |***********                        246.80574
#                  7    248.00000 |****************                   249.13563
#                  2    250.00000 |****                               250.33700
#                  1    252.00000 |**                                 252.83812
#
#                 10        > 95% |**********************             259.41783
#
#        mean of 95%    226.25320
#          95th %ile    256.45796
 for      2.58695 seconds
Running:          pipe_pmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmp4k -s 4k -I 2000 -x pipe -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp4k     1   1    220.43752          196        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    166.03240               194.65832
#                    max    304.19560               265.43720
#                   mean    223.65346               222.51491
#                 median    221.07752               220.43752
#                 stddev     17.49808                14.56555
#         standard error      1.23116                 1.04040
#   99% confidence level      2.86368                 2.41996
#                   skew      1.00075                 0.62462
#               kurtosis      2.55237                 0.05535
#       time correlation     -0.06772                -0.06365
#
#           elasped time      2.97283
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          204
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    194.00000 |****                               195.29576
#                  2    196.00000 |****                               196.75752
#                  2    198.00000 |****                               199.07432
#                  4    200.00000 |*********                          201.23112
#                  5    202.00000 |***********                        202.90459
#                  3    204.00000 |******                             204.60989
#                 12    206.00000 |***************************        207.04360
#                 10    208.00000 |**********************             208.87298
#                 10    210.00000 |**********************             211.21486
#                  9    212.00000 |********************               212.96232
#                 12    214.00000 |***************************        214.89683
#                 14    216.00000 |********************************   217.28872
#                 12    218.00000 |***************************        218.87592
#                 12    220.00000 |***************************        221.29384
#                 13    222.00000 |*****************************      222.84510
#                  5    224.00000 |***********                        224.89499
#                  5    226.00000 |***********                        226.72795
#                  7    228.00000 |****************                   228.87235
#                  7    230.00000 |****************                   231.02202
#                  8    232.00000 |******************                 232.91112
#                  6    234.00000 |*************                      234.54824
#                  7    236.00000 |****************                   236.83322
#                  4    238.00000 |*********                          238.76072
#                  3    240.00000 |******                             240.63763
#                  6    242.00000 |*************                      243.14472
#                  3    244.00000 |******                             244.68072
#                  2    246.00000 |****                               247.48648
#                  0    248.00000 |                                           -
#                  1    250.00000 |**                                 251.01928
#
#                 10        > 95% |**********************             257.38549
#
#        mean of 95%    220.64015
#          95th %ile    251.21384
 for      2.98425 seconds
 
Running:           pipe_sst1# bin/pipe -E -C 200 -L -S -W -N pipe_sst1 -s 1 -I 500 -x sock -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst1      1   1     61.21402          196        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     53.88346                53.88346
#                    max    133.97434                80.54843
#                   mean     63.55369                62.45882
#                 median     61.54427                61.21402
#                 stddev      9.22439                 6.23887
#         standard error      0.64903                 0.44563
#   99% confidence level      1.50963                 1.03654
#                   skew      3.23148                 1.14069
#               kurtosis     17.38750                 0.75435
#       time correlation     -0.01776                -0.01483
#
#           elasped time      2.67323
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          139
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     53.00000 |*                                   53.88346
#                  4     54.00000 |*******                             54.42842
#                 18     55.00000 |********************************    55.54249
#                 14     56.00000 |************************            56.60767
#                 18     57.00000 |********************************    57.47038
#                 10     58.00000 |*****************                   58.35271
#                 13     59.00000 |***********************             59.57828
#                 17     60.00000 |******************************      60.52222
#                 15     61.00000 |**************************          61.47677
#                 11     62.00000 |*******************                 62.38662
#                 17     63.00000 |******************************      63.46705
#                 12     64.00000 |*********************               64.49787
#                  6     65.00000 |**********                          65.44592
#                  8     66.00000 |**************                      66.47098
#                  1     67.00000 |*                                   67.01371
#                  3     68.00000 |*****                               68.43749
#                  4     69.00000 |*******                             69.58714
#                  2     70.00000 |***                                 70.11643
#                  3     71.00000 |*****                               71.73392
#                  0     72.00000 |                                           -
#                  1     73.00000 |*                                   73.64923
#                  1     74.00000 |*                                   74.88954
#                  6     75.00000 |**********                          75.40240
#                  1     76.00000 |*                                   76.62906
#
#                 10        > 95% |*****************                   78.72161
#
#        mean of 95%     61.58447
#          95th %ile     76.72890
 for      2.68847 seconds
Running:           pipe_smt1# bin/pipe -E -C 200 -L -S -W -N pipe_smt1 -s 1 -I 2000 -x sock -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt1      1   1    312.31432          193        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    274.83592               274.83592
#                    max    456.07880               348.29256
#                   mean    315.79706               312.77302
#                 median    312.65736               312.31432
#                 stddev     20.09716                13.00855
#         standard error      1.41403                 0.93638
#   99% confidence level      3.28904                 2.17801
#                   skew      2.67391                 0.15714
#               kurtosis     13.53043                 0.28934
#       time correlation     -0.07507                -0.03957
#
#           elasped time      3.45933
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          284
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    273.00000 |**                                 275.34536
#                  0    276.00000 |                                           -
#                  0    279.00000 |                                           -
#                  1    282.00000 |*                                  282.79752
#                  2    285.00000 |**                                 286.99336
#                  2    288.00000 |**                                 288.63432
#                  2    291.00000 |**                                 292.34376
#                  8    294.00000 |**********                         295.45096
#                 12    297.00000 |***************                    298.18440
#                 15    300.00000 |*******************                301.54355
#                 12    303.00000 |***************                    304.77085
#                 18    306.00000 |***********************            307.70604
#                 18    309.00000 |***********************            310.32463
#                 25    312.00000 |********************************   313.18062
#                 15    315.00000 |*******************                316.86600
#                 20    318.00000 |*************************          319.29083
#                  5    321.00000 |******                             322.20718
#                 11    324.00000 |**************                     325.16831
#                  4    327.00000 |*****                              328.50504
#                  6    330.00000 |*******                            331.23357
#                  3    333.00000 |***                                334.51976
#                  2    336.00000 |**                                 336.42440
#
#                 10        > 95% |************                       341.49474
#
#        mean of 95%    311.20353
#          95th %ile    337.33064
 for      3.47274 seconds
Running:           pipe_smp1# bin/pipe -E -C 200 -L -S -W -N pipe_smp1 -s 1 -I 2000 -x sock -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp1      1   1    321.65574          195        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    226.23430               273.13862
#                    max    780.21830               384.71366
#                   mean    329.66537               322.46433
#                 median    322.31622               321.65574
#                 stddev     56.25348                20.99731
#         standard error      3.95798                 1.50365
#   99% confidence level      9.20626                 3.49749
#                   skew      5.79147                 0.32781
#               kurtosis     40.33231                 0.35385
#       time correlation      0.13772                 0.03232
#
#           elasped time      4.10008
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    273.00000 |*                                  273.13862
#                  2    276.00000 |***                                277.87718
#                  0    279.00000 |                                           -
#                  2    282.00000 |***                                283.40678
#                  4    285.00000 |*******                            286.82822
#                  4    288.00000 |*******                            289.01190
#                  5    291.00000 |********                           292.86188
#                  9    294.00000 |****************                   295.80657
#                  4    297.00000 |*******                            299.12646
#                  3    300.00000 |*****                              301.12625
#                  6    303.00000 |**********                         304.12059
#                  6    306.00000 |**********                         307.32145
#                 15    309.00000 |**************************         310.77199
#                  8    312.00000 |**************                     314.09990
#                 10    315.00000 |*****************                  316.31046
#                 18    318.00000 |********************************   319.67487
#                  7    321.00000 |************                       322.47201
#                  7    324.00000 |************                       325.45332
#                 14    327.00000 |************************           328.51215
#                 12    330.00000 |*********************              331.55910
#                 11    333.00000 |*******************                334.60329
#                 16    336.00000 |****************************       337.40646
#                  7    339.00000 |************                       340.83233
#                  4    342.00000 |*******                            344.20294
#                  3    345.00000 |*****                              346.59526
#                  2    348.00000 |***                                349.28838
#                  4    351.00000 |*******                            352.25926
#                  1    354.00000 |*                                  355.29414
#
#                 10        > 95% |*****************                  373.69132
#
#        mean of 95%    319.69531
#          95th %ile    359.07270
 for      4.11268 seconds
Running:          pipe_sst4k# bin/pipe -E -C 200 -L -S -W -N pipe_sst4k -s 4k -I 500 -x sock -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst4k     1   1     81.02314          186        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     75.21450                75.21450
#                    max    145.44426                91.30410
#                   mean     83.60739                81.56203
#                 median     81.43914                81.02314
#                 stddev      8.72829                 3.77946
#         standard error      0.61412                 0.27712
#   99% confidence level      1.42844                 0.64459
#                   skew      3.46092                 0.63254
#               kurtosis     16.46649                -0.35323
#       time correlation      0.00172                -0.01189
#
#           elasped time      3.48548
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7     75.00000 |********                            75.57107
#                  8     76.00000 |**********                          76.65706
#                 17     77.00000 |*********************               77.43477
#                 21     78.00000 |**************************          78.66678
#                 25     79.00000 |********************************    79.45765
#                 15     80.00000 |*******************                 80.54852
#                 18     81.00000 |***********************             81.54111
#                 22     82.00000 |****************************        82.43126
#                 12     83.00000 |***************                     83.47754
#                  6     84.00000 |*******                             84.58815
#                  5     85.00000 |******                              85.50237
#                  8     86.00000 |**********                          86.37786
#                  5     87.00000 |******                              87.51735
#                  7     88.00000 |********                            88.51919
#
#                 10        > 95% |************                        89.89789
#
#        mean of 95%     81.08841
#          95th %ile     89.08330
 for      3.49553 seconds
Running:          pipe_smt4k# bin/pipe -E -C 200 -L -S -W -N pipe_smt4k -s 4k -I 2000 -x sock -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt4k     1   1    384.53396          199        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    340.97300               340.97300
#                    max    467.39604               450.71508
#                   mean    388.61632               387.47037
#                 median    384.61588               384.53396
#                 stddev     23.68854                21.92365
#         standard error      1.66672                 1.55413
#   99% confidence level      3.87679                 3.61490
#                   skew      0.89450                 0.67033
#               kurtosis      0.84377                 0.24359
#       time correlation      0.02307                 0.03047
#
#           elasped time      4.21587
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          182
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    339.00000 |**                                 340.97300
#                  0    342.00000 |                                           -
#                  1    345.00000 |**                                 345.59636
#                  3    348.00000 |******                             349.54900
#                  1    351.00000 |**                                 353.13300
#                  5    354.00000 |**********                         355.58036
#                  3    357.00000 |******                             358.71551
#                 10    360.00000 |*********************              362.05511
#                  8    363.00000 |*****************                  364.84116
#                  6    366.00000 |************                       367.38708
#                 11    369.00000 |***********************            370.42045
#                 12    372.00000 |*************************          373.41375
#                  9    375.00000 |*******************                376.58089
#                 15    378.00000 |********************************   379.60272
#                 14    381.00000 |*****************************      382.83631
#                 13    384.00000 |***************************        385.33229
#                 11    387.00000 |***********************            388.49777
#                  8    390.00000 |*****************                  391.01652
#                  8    393.00000 |*****************                  394.81172
#                  9    396.00000 |*******************                397.80557
#                  7    399.00000 |**************                     400.47910
#                  6    402.00000 |************                       403.26207
#                  5    405.00000 |**********                         405.81166
#                  6    408.00000 |************                       410.06313
#                  2    411.00000 |****                               412.40724
#                  3    414.00000 |******                             414.50815
#                  2    417.00000 |****                               419.13236
#                  4    420.00000 |********                           421.49652
#                  2    423.00000 |****                               424.98708
#                  3    426.00000 |******                             427.16991
#                  1    429.00000 |**                                 429.51828
#
#                 10        > 95% |*********************              440.64097
#
#        mean of 95%    384.65711
#          95th %ile    429.87668
 for      4.22784 seconds
Running:          pipe_smp4k# bin/pipe -E -C 200 -L -S -W -N pipe_smp4k -s 4k -I 2000 -x sock -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp4k     1   1    375.86432          196        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    346.01984               346.01984
#                    max    485.02272               436.45952
#                   mean    382.12605               379.86798
#                 median    376.98048               375.86432
#                 stddev     23.35342                19.56806
#         standard error      1.64314                 1.39772
#   99% confidence level      3.82195                 3.25109
#                   skew      1.23039                 0.65144
#               kurtosis      2.03297                -0.14867
#       time correlation      0.07159                 0.05532
#
#           elasped time      4.61137
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    345.00000 |***                                346.86976
#                  4    348.00000 |*******                            349.55008
#                  6    351.00000 |**********                         352.51371
#                  5    354.00000 |********                           355.78982
#                 13    357.00000 |***********************            358.67254
#                 11    360.00000 |*******************                361.64189
#                 10    363.00000 |*****************                  364.50867
#                 18    366.00000 |********************************   367.41717
#                 15    369.00000 |**************************         370.49822
#                  9    372.00000 |****************                   374.03591
#                 13    375.00000 |***********************            376.43067
#                  7    378.00000 |************                       378.96338
#                  9    381.00000 |****************                   382.67961
#                  7    384.00000 |************                       385.37509
#                 13    387.00000 |***********************            388.46031
#                  7    390.00000 |************                       392.14153
#                  6    393.00000 |**********                         394.44821
#                  9    396.00000 |****************                   397.77280
#                  4    399.00000 |*******                            400.97408
#                  4    402.00000 |*******                            402.74432
#                  6    405.00000 |**********                         406.57237
#                  3    408.00000 |*****                              409.83893
#                  1    411.00000 |*                                  411.71968
#                  4    414.00000 |*******                            415.58656
#
#                 10        > 95% |*****************                  425.73619
#
#        mean of 95%    377.40194
#          95th %ile    417.47968
 for      4.62560 seconds
 
Running:           pipe_tst1# bin/pipe -E -C 200 -L -S -W -N pipe_tst1 -s 1 -I 500 -x tcp -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst1      1   1    140.87936          185        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    135.75424               135.75424
#                    max    193.87520               153.28512
#                   mean    144.16540               141.90876
#                 median    141.46048               140.87936
#                 stddev      9.18235                 4.09798
#         standard error      0.64607                 0.30129
#   99% confidence level      1.50275                 0.70080
#                   skew      2.92978                 0.90845
#               kurtosis     10.19687                 0.10370
#       time correlation     -0.04771                -0.01068
#
#           elasped time      6.10593
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    135.00000 |***                                135.85451
#                  7    136.00000 |*******                            136.62299
#                 19    137.00000 |*******************                137.42673
#                 16    138.00000 |****************                   138.59496
#                 31    139.00000 |********************************   139.56212
#                 20    140.00000 |********************               140.58746
#                 21    141.00000 |*********************              141.58622
#                 14    142.00000 |**************                     142.52690
#                  8    143.00000 |********                           143.64544
#                  5    144.00000 |*****                              144.52198
#                  9    145.00000 |*********                          145.29038
#                  2    146.00000 |**                                 146.16000
#                 11    147.00000 |***********                        147.37641
#                  4    148.00000 |****                               148.38880
#                  5    149.00000 |*****                              149.62611
#
#                 10        > 95% |**********                         151.91744
#
#        mean of 95%    141.33684
#          95th %ile    150.16960
 for      6.11752 seconds
Running:           pipe_tmt1# bin/pipe -E -C 200 -L -S -W -N pipe_tmt1 -s 1 -I 2000 -x tcp -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt1      1   1    405.39690          200        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    322.83690               365.25610
#                    max    464.37418               464.37418
#                   mean    409.08606               409.87867
#                 median    405.03850               405.39690
#                 stddev     23.91674                22.66052
#         standard error      1.68278                 1.60234
#   99% confidence level      3.91414                 3.72705
#                   skew      0.00464                 0.33896
#               kurtosis      0.05507                -0.79250
#       time correlation      0.12574                 0.13016
#
#           elasped time      4.59591
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    363.00000 |***                                365.52746
#                  3    366.00000 |*****                              368.01578
#                  1    369.00000 |*                                  371.05706
#                  1    372.00000 |*                                  374.61034
#                  3    375.00000 |*****                              376.41599
#                  6    378.00000 |***********                        379.81823
#                  2    381.00000 |***                                383.04554
#                  8    384.00000 |***************                    385.80330
#                 12    387.00000 |**********************             388.37034
#                 15    390.00000 |****************************       391.58143
#                 17    393.00000 |********************************   395.05932
#                 12    396.00000 |**********************             397.42463
#                  9    399.00000 |****************                   400.35996
#                  8    402.00000 |***************                    403.51146
#                 11    405.00000 |********************               406.41438
#                  6    408.00000 |***********                        409.73183
#                  6    411.00000 |***********                        412.46165
#                  7    414.00000 |*************                      415.69468
#                  2    417.00000 |***                                419.41546
#                  6    420.00000 |***********                        421.92170
#                  6    423.00000 |***********                        424.34005
#                  4    426.00000 |*******                            427.69962
#                 10    429.00000 |******************                 430.54173
#                 10    432.00000 |******************                 433.51594
#                  9    435.00000 |****************                   436.77283
#                  4    438.00000 |*******                            439.18122
#                  4    441.00000 |*******                            442.86122
#                  3    444.00000 |*****                              446.61461
#                  3    447.00000 |*****                              448.12159
#
#                 10        > 95% |******************                 455.89956
#
#        mean of 95%    407.45651
#          95th %ile    451.81482
 for      4.60988 seconds
Running:           pipe_tmp1# bin/pipe -E -C 200 -L -S -W -N pipe_tmp1 -s 1 -I 2000 -x tcp -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp1      1   1    391.71848          196        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    363.99880               363.99880
#                    max    456.92168               434.33736
#                   mean    395.62580               394.05913
#                 median    392.33800               391.71848
#                 stddev     16.88534                14.49084
#         standard error      1.18805                 1.03506
#   99% confidence level      2.76340                 2.40755
#                   skew      0.98935                 0.54485
#               kurtosis      1.09965                -0.12766
#       time correlation     -0.02132                -0.00744
#
#           elasped time      4.90697
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          124
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    362.00000 |**                                 363.99880
#                  0    364.00000 |                                           -
#                  2    366.00000 |****                               366.82760
#                  0    368.00000 |                                           -
#                  5    370.00000 |**********                         370.82990
#                  3    372.00000 |******                             372.90760
#                  4    374.00000 |********                           374.53832
#                  7    376.00000 |**************                     376.90339
#                  7    378.00000 |**************                     378.67199
#                 10    380.00000 |*********************              380.80110
#                 14    382.00000 |*****************************      383.16698
#                  9    384.00000 |*******************                384.91400
#                 12    386.00000 |*************************          387.18429
#                 10    388.00000 |*********************              388.79854
#                 15    390.00000 |********************************   390.76889
#                 11    392.00000 |***********************            392.81276
#                 11    394.00000 |***********************            394.77000
#                  6    396.00000 |************                       396.80264
#                  6    398.00000 |************                       398.95645
#                  9    400.00000 |*******************                400.79795
#                 11    402.00000 |***********************            402.82329
#                  4    404.00000 |********                           405.31720
#                  3    406.00000 |******                             407.09725
#                  4    408.00000 |********                           409.26728
#                  7    410.00000 |**************                     410.91775
#                  5    412.00000 |**********                         413.19790
#                  4    414.00000 |********                           414.93768
#                  4    416.00000 |********                           417.08680
#                  1    418.00000 |**                                 419.55592
#                  1    420.00000 |**                                 420.67720
#
#                 10        > 95% |*********************              427.89998
#
#        mean of 95%    392.23973
#          95th %ile    422.91976
 for      4.92858 seconds
Running:          pipe_tst4k# bin/pipe -E -C 200 -L -S -W -N pipe_tst4k -s 4k -I 500 -x tcp -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst4k     1   1    124.26420          181        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    117.55443               117.55443
#                    max    160.97459               132.44852
#                   mean    126.44986               124.60624
#                 median    125.02451               124.26420
#                 stddev      6.64451                 2.83834
#         standard error      0.46751                 0.21097
#   99% confidence level      1.08742                 0.49072
#                   skew      2.69130                 0.45826
#               kurtosis      8.66036                -0.07438
#       time correlation     -0.00591                -0.00185
#
#           elasped time      5.37432
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    117.00000 |*                                  117.55443
#                  1    118.00000 |*                                  118.81907
#                  2    119.00000 |**                                 119.67219
#                 11    120.00000 |***********                        120.56965
#                 23    121.00000 |************************           121.71082
#                 19    122.00000 |********************               122.51639
#                 29    123.00000 |******************************     123.55172
#                 15    124.00000 |****************                   124.49741
#                 30    125.00000 |********************************   125.50323
#                 15    126.00000 |****************                   126.35725
#                 12    127.00000 |************                       127.38836
#                  8    128.00000 |********                           128.39476
#                  5    129.00000 |*****                              129.47712
#
#                 10        > 95% |**********                         131.04653
#
#        mean of 95%    124.22962
#          95th %ile    130.01012
 for      5.38600 seconds
Running:          pipe_tmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmt4k -s 4k -I 2000 -x tcp -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt4k     1   1    405.89568          202        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    369.11872               369.11872
#                    max    469.21472               469.21472
#                   mean    409.46653               409.46653
#                 median    405.89568               405.89568
#                 stddev     20.12095                20.12095
#         standard error      1.41570                 1.41570
#   99% confidence level      3.29293                 3.29293
#                   skew      0.72494                 0.72494
#               kurtosis      0.03980                 0.03980
#       time correlation     -0.02862                -0.02862
#
#           elasped time      4.58125
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          128
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    369.00000 |***                                369.87648
#                  0    372.00000 |                                           -
#                  2    375.00000 |***                                377.43616
#                  4    378.00000 |******                             379.45600
#                  5    381.00000 |*******                            382.34880
#                  3    384.00000 |****                               385.90379
#                 10    387.00000 |***************                    388.78771
#                 17    390.00000 |*************************          391.68467
#                 21    393.00000 |********************************   394.72482
#                  9    396.00000 |*************                      397.53415
#                 13    399.00000 |*******************                400.54252
#                 11    402.00000 |****************                   403.25516
#                 13    405.00000 |*******************                406.62942
#                 12    408.00000 |******************                 409.76555
#                 10    411.00000 |***************                    412.02688
#                  9    414.00000 |*************                      415.37052
#                  9    417.00000 |*************                      418.55744
#                  7    420.00000 |**********                         421.50071
#                  6    423.00000 |*********                          424.50517
#                  4    426.00000 |******                             427.34336
#                  2    429.00000 |***                                430.70720
#                  7    432.00000 |**********                         433.64169
#                  6    435.00000 |*********                          436.93141
#                  0    438.00000 |                                           -
#                  5    441.00000 |*******                            442.84774
#                  4    444.00000 |******                             444.97408
#
#                 11        > 95% |****************                   456.85457
#
#        mean of 95%    406.73737
#          95th %ile    448.71936
 for      4.59224 seconds
Running:          pipe_tmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmp4k -s 4k -I 2000 -x tcp -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp4k     1   1    412.79696          202        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    371.39664               371.39664
#                    max    480.27856               480.27856
#                   mean    415.93811               415.93811
#                 median    412.79696               412.79696
#                 stddev     22.91159                22.91159
#         standard error      1.61205                 1.61205
#   99% confidence level      3.74964                 3.74964
#                   skew      0.53596                 0.53596
#               kurtosis     -0.28114                -0.28114
#       time correlation      0.06028                 0.06028
#
#           elasped time      5.13644
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          152
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    369.00000 |**                                 371.39664
#                  0    372.00000 |                                           -
#                  3    375.00000 |******                             377.54235
#                  4    378.00000 |*********                          379.82800
#                  2    381.00000 |****                               383.90736
#                  5    384.00000 |***********                        385.29027
#                  9    387.00000 |********************               388.29378
#                  8    390.00000 |******************                 391.12144
#                  9    393.00000 |********************               394.78651
#                 12    396.00000 |***************************        397.34864
#                 12    399.00000 |***************************        400.97915
#                 11    402.00000 |*************************          403.76016
#                  7    405.00000 |****************                   406.03125
#                  9    408.00000 |********************               409.41662
#                 14    411.00000 |********************************   412.56985
#                  6    414.00000 |*************                      415.54896
#                 13    417.00000 |*****************************      418.46322
#                  8    420.00000 |******************                 421.33648
#                  5    423.00000 |***********                        424.18691
#                 11    426.00000 |*************************          427.48950
#                  7    429.00000 |****************                   430.76158
#                  5    432.00000 |***********                        433.29744
#                  7    435.00000 |****************                   436.14562
#                  4    438.00000 |*********                          440.31824
#                  4    441.00000 |*********                          442.50192
#                  3    444.00000 |******                             445.35504
#                  1    447.00000 |**                                 448.39632
#                  6    450.00000 |*************                      451.47259
#                  3    453.00000 |******                             454.07611
#                  2    456.00000 |****                               456.69584
#
#                 11        > 95% |*************************          467.14529
#
#        mean of 95%    412.98900
#          95th %ile    458.91792
 for      5.15613 seconds
 
Running:         conn_accept# bin/connection -E -C 200 -L -S -W -N conn_accept -B 256 -a 
             prc thr   usecs/call      samples   errors cnt/samp 
conn_accept    1   1     68.53900          170        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     64.74200                64.74200
#                    max     95.14500                73.00800
#                   mean     70.23766                68.73991
#                 median     68.94900                68.53900
#                 stddev      4.27089                 1.42993
#         standard error      0.30050                 0.10967
#   99% confidence level      0.69896                 0.25509
#                   skew      2.80157                 0.63493
#               kurtosis      9.87849                 0.42231
#       time correlation     -0.00616                -0.00307
#
#           elasped time     24.26558
#      number of samples          170
#     number of outliers           32
#      getnsecs overhead            0
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     64.00000 |*                                   64.74200
#                  0     65.00000 |                                           -
#                 13     66.00000 |********                            66.75485
#                 44     67.00000 |*****************************       67.57177
#                 47     68.00000 |********************************    68.45109
#                 33     69.00000 |**********************              69.39709
#                 21     70.00000 |**************                      70.53395
#                  2     71.00000 |*                                   71.05400
#
#                  9        > 95% |******                              72.16067
#
#        mean of 95%     68.54869
#          95th %ile     71.10900
 for     24.27957 seconds
 
Running:           close_tcp# bin/close_tcp -E -C 200 -L -S -W -N close_tcp -B 32 
             prc thr   usecs/call      samples   errors cnt/samp 
close_tcp      1   1     43.08431          199        0       32 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     38.74031                38.74031
#                    max     87.52431                80.99631
#                   mean     49.66368                49.12632
#                 median     43.25231                43.08431
#                 stddev     11.59565                10.81262
#         standard error      0.81587                 0.76649
#   99% confidence level      1.89771                 1.78285
#                   skew      1.14682                 1.04054
#               kurtosis      0.19425                -0.32361
#       time correlation     -0.02465                -0.01647
#
#           elasped time      3.16287
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          118
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 19     38.00000 |**********                          39.55842
#                 56     40.00000 |********************************    41.06203
#                 34     42.00000 |*******************                 42.85419
#                 15     44.00000 |********                            44.95791
#                  6     46.00000 |***                                 46.95498
#                  3     48.00000 |*                                   49.26831
#                  3     50.00000 |*                                   51.28965
#                  6     52.00000 |***                                 52.88698
#                  6     54.00000 |***                                 55.18831
#                  1     56.00000 |*                                   57.30831
#                  5     58.00000 |**                                  58.78351
#                  7     60.00000 |****                                60.84546
#                  9     62.00000 |*****                               63.21587
#                  6     64.00000 |***                                 64.92298
#                  8     66.00000 |****                                67.08531
#                  3     68.00000 |*                                   69.36165
#                  2     70.00000 |*                                   70.66831
#
#                 10        > 95% |*****                               74.00591
#
#        mean of 95%     47.80994
#          95th %ile     71.86831
 for      3.18411 seconds
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$